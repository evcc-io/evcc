// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: protos.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscriptionErrorType int32

const (
	SubscriptionErrorType_UNKNOWN     SubscriptionErrorType = 0
	SubscriptionErrorType_INVALID_JWT SubscriptionErrorType = 1
)

// Enum value maps for SubscriptionErrorType.
var (
	SubscriptionErrorType_name = map[int32]string{
		0: "UNKNOWN",
		1: "INVALID_JWT",
	}
	SubscriptionErrorType_value = map[string]int32{
		"UNKNOWN":     0,
		"INVALID_JWT": 1,
	}
)

func (x SubscriptionErrorType) Enum() *SubscriptionErrorType {
	p := new(SubscriptionErrorType)
	*p = x
	return p
}

func (x SubscriptionErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[0].Descriptor()
}

func (SubscriptionErrorType) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[0]
}

func (x SubscriptionErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionErrorType.Descriptor instead.
func (SubscriptionErrorType) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{0}
}

type OperatingSystemName int32

const (
	OperatingSystemName_UNKNOWN_OPERATING_SYSTEM OperatingSystemName = 0
	OperatingSystemName_IOS                      OperatingSystemName = 1
	OperatingSystemName_ANDROID                  OperatingSystemName = 2
	OperatingSystemName_INT_TEST                 OperatingSystemName = 3
	OperatingSystemName_MANUAL_TEST              OperatingSystemName = 4
	OperatingSystemName_WEB                      OperatingSystemName = 5
)

// Enum value maps for OperatingSystemName.
var (
	OperatingSystemName_name = map[int32]string{
		0: "UNKNOWN_OPERATING_SYSTEM",
		1: "IOS",
		2: "ANDROID",
		3: "INT_TEST",
		4: "MANUAL_TEST",
		5: "WEB",
	}
	OperatingSystemName_value = map[string]int32{
		"UNKNOWN_OPERATING_SYSTEM": 0,
		"IOS":                      1,
		"ANDROID":                  2,
		"INT_TEST":                 3,
		"MANUAL_TEST":              4,
		"WEB":                      5,
	}
)

func (x OperatingSystemName) Enum() *OperatingSystemName {
	p := new(OperatingSystemName)
	*p = x
	return p
}

func (x OperatingSystemName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatingSystemName) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[1].Descriptor()
}

func (OperatingSystemName) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[1]
}

func (x OperatingSystemName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatingSystemName.Descriptor instead.
func (OperatingSystemName) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{1}
}

type ResubscribeToAppTwinResponse_ResubscribeResult int32

const (
	ResubscribeToAppTwinResponse_UNKNOWN_ERROR         ResubscribeToAppTwinResponse_ResubscribeResult = 0
	ResubscribeToAppTwinResponse_SUCCESS               ResubscribeToAppTwinResponse_ResubscribeResult = 1
	ResubscribeToAppTwinResponse_INVALID_JWT_ERROR     ResubscribeToAppTwinResponse_ResubscribeResult = 2
	ResubscribeToAppTwinResponse_TARGET_DOES_NOT_EXIST ResubscribeToAppTwinResponse_ResubscribeResult = 3
)

// Enum value maps for ResubscribeToAppTwinResponse_ResubscribeResult.
var (
	ResubscribeToAppTwinResponse_ResubscribeResult_name = map[int32]string{
		0: "UNKNOWN_ERROR",
		1: "SUCCESS",
		2: "INVALID_JWT_ERROR",
		3: "TARGET_DOES_NOT_EXIST",
	}
	ResubscribeToAppTwinResponse_ResubscribeResult_value = map[string]int32{
		"UNKNOWN_ERROR":         0,
		"SUCCESS":               1,
		"INVALID_JWT_ERROR":     2,
		"TARGET_DOES_NOT_EXIST": 3,
	}
)

func (x ResubscribeToAppTwinResponse_ResubscribeResult) Enum() *ResubscribeToAppTwinResponse_ResubscribeResult {
	p := new(ResubscribeToAppTwinResponse_ResubscribeResult)
	*p = x
	return p
}

func (x ResubscribeToAppTwinResponse_ResubscribeResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResubscribeToAppTwinResponse_ResubscribeResult) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[2].Descriptor()
}

func (ResubscribeToAppTwinResponse_ResubscribeResult) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[2]
}

func (x ResubscribeToAppTwinResponse_ResubscribeResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResubscribeToAppTwinResponse_ResubscribeResult.Descriptor instead.
func (ResubscribeToAppTwinResponse_ResubscribeResult) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{7, 0}
}

// SubscriptionRequest is sent to an actor to indicate that the sender wants to subscribe
// to events of specific topics. By convention the "Sender" property of the actor message is the
// Subscriber and will receive the events.
type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An array of topics for which the Subscriber wants to be notified from the Receiver of this message
	Topics []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	// indicates whether the previous set of topics should be replaced or whether the content of
	// topics should be merged into the already existing set of topics in the publisher actor. E.g. You're already
	// subscribed to topics A and B. If you send a SubscribeRequest with B and C:
	// replace = true -> you are subscribed to B and C
	// replace = false -> you are subscribed to A, B and C
	Replace bool `protobuf:"varint,2,opt,name=replace,proto3" json:"replace,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *SubscribeRequest) GetReplace() bool {
	if x != nil {
		return x.Replace
	}
	return false
}

// SubscribeResponse is returned by the actor which received a SubscribeRequest. In case of a successful subscription
// success will be true and error_codes empty/nil. In case of an error the errors map will contain
// information that points to the reason for failure. The error map's keys are topics that have resulted in an error.
// The message also contains all successfully subscribed topics under the `subscribed_topics` key.
// By convention if an SubscribeRequest is sent for topics that have already been subscribed to, the SubscribeResponse
// will be successful and no error will be returned.
type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success          bool                          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Errors           map[string]*SubscriptionError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SubscribedTopics []string                      `protobuf:"bytes,3,rep,name=subscribed_topics,json=subscribedTopics,proto3" json:"subscribed_topics,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubscribeResponse) GetErrors() map[string]*SubscriptionError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *SubscribeResponse) GetSubscribedTopics() []string {
	if x != nil {
		return x.SubscribedTopics
	}
	return nil
}

// UnsubscribeRequest is sent to an actor to indicate that the sender wants to unsubscribe
// from events specified by the topics array.
type UnsubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An array of topics for which the Subscriber does not want to receive any more messages
	Topics []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	// Whether the publisher should respond
	AnticipateResponse bool `protobuf:"varint,2,opt,name=anticipate_response,json=anticipateResponse,proto3" json:"anticipate_response,omitempty"`
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{2}
}

func (x *UnsubscribeRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *UnsubscribeRequest) GetAnticipateResponse() bool {
	if x != nil {
		return x.AnticipateResponse
	}
	return false
}

// UnsubscribeResponse is returned by the actor which received a UnsubscribeRequest. In case of a successful removal,
// success will be true and error_codes empty/nil. In case of an error the errors map will contain
// information that points to the reason for failure. The error map's keys are topics that have resulted in an error.
// The message also contains all successfully subscribed topics under the `unsubscribed_topics` key.
// By convention if an UnsubscribeRequest is sent for topics that have already been unsubscribed from the UnsubscribeResponse
// will be successful and no error will be returned.
type UnsubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success            bool                          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Errors             map[string]*SubscriptionError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UnsubscribedTopics []string                      `protobuf:"bytes,3,rep,name=unsubscribed_topics,json=unsubscribedTopics,proto3" json:"unsubscribed_topics,omitempty"`
}

func (x *UnsubscribeResponse) Reset() {
	*x = UnsubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeResponse) ProtoMessage() {}

func (x *UnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{3}
}

func (x *UnsubscribeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnsubscribeResponse) GetErrors() map[string]*SubscriptionError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *UnsubscribeResponse) GetUnsubscribedTopics() []string {
	if x != nil {
		return x.UnsubscribedTopics
	}
	return nil
}

type SubscriptionError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    []SubscriptionErrorType `protobuf:"varint,1,rep,packed,name=code,proto3,enum=proto.SubscriptionErrorType" json:"code,omitempty"`
	Message []string                `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty"` // Optional
}

func (x *SubscriptionError) Reset() {
	*x = SubscriptionError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionError) ProtoMessage() {}

func (x *SubscriptionError) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionError.ProtoReflect.Descriptor instead.
func (*SubscriptionError) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{4}
}

func (x *SubscriptionError) GetCode() []SubscriptionErrorType {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *SubscriptionError) GetMessage() []string {
	if x != nil {
		return x.Message
	}
	return nil
}

// Sent from Websocket-Service -> AppTwin
type SubscribeToAppTwinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CiamId    string `protobuf:"bytes,2,opt,name=ciam_id,json=ciamId,proto3" json:"ciam_id,omitempty"`
	// additional data
	DeviceLocale   string              `protobuf:"bytes,3,opt,name=device_locale,json=deviceLocale,proto3" json:"device_locale,omitempty"`
	AppId          string              `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppVersion     string              `protobuf:"bytes,5,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	OsName         OperatingSystemName `protobuf:"varint,6,opt,name=os_name,json=osName,proto3,enum=proto.OperatingSystemName" json:"os_name,omitempty"`
	OsVersion      string              `protobuf:"bytes,7,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	DeviceModel    string              `protobuf:"bytes,8,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	NetworkCarrier string              `protobuf:"bytes,9,opt,name=network_carrier,json=networkCarrier,proto3" json:"network_carrier,omitempty"`
	SdkVersion     string              `protobuf:"bytes,10,opt,name=sdk_version,json=sdkVersion,proto3" json:"sdk_version,omitempty"`
}

func (x *SubscribeToAppTwinRequest) Reset() {
	*x = SubscribeToAppTwinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToAppTwinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToAppTwinRequest) ProtoMessage() {}

func (x *SubscribeToAppTwinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToAppTwinRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToAppTwinRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeToAppTwinRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SubscribeToAppTwinRequest) GetCiamId() string {
	if x != nil {
		return x.CiamId
	}
	return ""
}

func (x *SubscribeToAppTwinRequest) GetDeviceLocale() string {
	if x != nil {
		return x.DeviceLocale
	}
	return ""
}

func (x *SubscribeToAppTwinRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *SubscribeToAppTwinRequest) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *SubscribeToAppTwinRequest) GetOsName() OperatingSystemName {
	if x != nil {
		return x.OsName
	}
	return OperatingSystemName_UNKNOWN_OPERATING_SYSTEM
}

func (x *SubscribeToAppTwinRequest) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *SubscribeToAppTwinRequest) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *SubscribeToAppTwinRequest) GetNetworkCarrier() string {
	if x != nil {
		return x.NetworkCarrier
	}
	return ""
}

func (x *SubscribeToAppTwinRequest) GetSdkVersion() string {
	if x != nil {
		return x.SdkVersion
	}
	return ""
}

type ResubscribeToAppTwinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CiamId    string `protobuf:"bytes,2,opt,name=ciam_id,json=ciamId,proto3" json:"ciam_id,omitempty"`
}

func (x *ResubscribeToAppTwinRequest) Reset() {
	*x = ResubscribeToAppTwinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResubscribeToAppTwinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResubscribeToAppTwinRequest) ProtoMessage() {}

func (x *ResubscribeToAppTwinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResubscribeToAppTwinRequest.ProtoReflect.Descriptor instead.
func (*ResubscribeToAppTwinRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{6}
}

func (x *ResubscribeToAppTwinRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ResubscribeToAppTwinRequest) GetCiamId() string {
	if x != nil {
		return x.CiamId
	}
	return ""
}

type ResubscribeToAppTwinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ResubscribeToAppTwinResponse_ResubscribeResult `protobuf:"varint,1,opt,name=result,proto3,enum=proto.ResubscribeToAppTwinResponse_ResubscribeResult" json:"result,omitempty"`
}

func (x *ResubscribeToAppTwinResponse) Reset() {
	*x = ResubscribeToAppTwinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResubscribeToAppTwinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResubscribeToAppTwinResponse) ProtoMessage() {}

func (x *ResubscribeToAppTwinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResubscribeToAppTwinResponse.ProtoReflect.Descriptor instead.
func (*ResubscribeToAppTwinResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{7}
}

func (x *ResubscribeToAppTwinResponse) GetResult() ResubscribeToAppTwinResponse_ResubscribeResult {
	if x != nil {
		return x.Result
	}
	return ResubscribeToAppTwinResponse_UNKNOWN_ERROR
}

// Sent from AppTwin -> Websocket-Service
type SubscribeToAppTwinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool                  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorCode SubscriptionErrorType `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=proto.SubscriptionErrorType" json:"error_code,omitempty"`
}

func (x *SubscribeToAppTwinResponse) Reset() {
	*x = SubscribeToAppTwinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToAppTwinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToAppTwinResponse) ProtoMessage() {}

func (x *SubscribeToAppTwinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToAppTwinResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToAppTwinResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeToAppTwinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubscribeToAppTwinResponse) GetErrorCode() SubscriptionErrorType {
	if x != nil {
		return x.ErrorCode
	}
	return SubscriptionErrorType_UNKNOWN
}

type UnsubscribeFromAppTwinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UnsubscribeFromAppTwinRequest) Reset() {
	*x = UnsubscribeFromAppTwinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeFromAppTwinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeFromAppTwinRequest) ProtoMessage() {}

func (x *UnsubscribeFromAppTwinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeFromAppTwinRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeFromAppTwinRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{9}
}

func (x *UnsubscribeFromAppTwinRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type UnsubscribeFromAppTwinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Errors  map[string]*SubscriptionError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UnsubscribeFromAppTwinResponse) Reset() {
	*x = UnsubscribeFromAppTwinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeFromAppTwinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeFromAppTwinResponse) ProtoMessage() {}

func (x *UnsubscribeFromAppTwinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeFromAppTwinResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeFromAppTwinResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{10}
}

func (x *UnsubscribeFromAppTwinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnsubscribeFromAppTwinResponse) GetErrors() map[string]*SubscriptionError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{11}
}

// This message is used to tell the App which vehicles are assigned to the current user.
// The message is sent when the AppTwin is fully initialized (i.e. when it received the first vcb-response)
//
// The list of VINs is needed when a user gets unassigned from a vehicle while not connected to an AppTwin
// In this case the vehicle would still show in the app the next time the user starts it (see https://appsfactory.atlassian.net/browse/DAIM-3831)
// To prevent this, we tell the App which VINs are assigned via this message
type AssignedVehicles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vins []string `protobuf:"bytes,1,rep,name=vins,proto3" json:"vins,omitempty"`
}

func (x *AssignedVehicles) Reset() {
	*x = AssignedVehicles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignedVehicles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignedVehicles) ProtoMessage() {}

func (x *AssignedVehicles) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignedVehicles.ProtoReflect.Descriptor instead.
func (*AssignedVehicles) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{12}
}

func (x *AssignedVehicles) GetVins() []string {
	if x != nil {
		return x.Vins
	}
	return nil
}

type AcknowledgeAssignedVehicles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcknowledgeAssignedVehicles) Reset() {
	*x = AcknowledgeAssignedVehicles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeAssignedVehicles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeAssignedVehicles) ProtoMessage() {}

func (x *AcknowledgeAssignedVehicles) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeAssignedVehicles.ProtoReflect.Descriptor instead.
func (*AcknowledgeAssignedVehicles) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{13}
}

var File_protos_proto protoreflect.FileDescriptor

var file_protos_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x11,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x1a, 0x53, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x12, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x61, 0x6e, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x13, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x13,
	0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x75, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x1a, 0x53, 0x0a,
	0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x5f, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xf1, 0x02, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x69, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x06, 0x6f, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f,
	0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x27, 0x0a,
	0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x64, 0x6b, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x64, 0x6b,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x69, 0x61, 0x6d, 0x49, 0x64, 0x22, 0xd4,
	0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f,
	0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x65,
	0x0a, 0x11, 0x52, 0x65, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4a,
	0x57, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41,
	0x52, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x4f, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x10, 0x03, 0x22, 0x73, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3e, 0x0a, 0x1d, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70,
	0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xda, 0x01, 0x0a, 0x1e, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x70,
	0x70, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x49, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41,
	0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x1a, 0x53, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0b, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x22, 0x26, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x6e, 0x73, 0x22, 0x1d, 0x0a, 0x1b,
	0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2a, 0x35, 0x0a, 0x15, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4a, 0x57, 0x54,
	0x10, 0x01, 0x2a, 0x71, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x53, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x49, 0x4e, 0x54, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03,
	0x57, 0x45, 0x42, 0x10, 0x05, 0x42, 0x1c, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x69,
	0x6d, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x62, 0x63, 0x61, 0x72, 0x6b, 0x69, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_proto_rawDescOnce sync.Once
	file_protos_proto_rawDescData = file_protos_proto_rawDesc
)

func file_protos_proto_rawDescGZIP() []byte {
	file_protos_proto_rawDescOnce.Do(func() {
		file_protos_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_proto_rawDescData)
	})
	return file_protos_proto_rawDescData
}

var file_protos_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protos_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_protos_proto_goTypes = []interface{}{
	(SubscriptionErrorType)(0),                          // 0: proto.SubscriptionErrorType
	(OperatingSystemName)(0),                            // 1: proto.OperatingSystemName
	(ResubscribeToAppTwinResponse_ResubscribeResult)(0), // 2: proto.ResubscribeToAppTwinResponse.ResubscribeResult
	(*SubscribeRequest)(nil),                            // 3: proto.SubscribeRequest
	(*SubscribeResponse)(nil),                           // 4: proto.SubscribeResponse
	(*UnsubscribeRequest)(nil),                          // 5: proto.UnsubscribeRequest
	(*UnsubscribeResponse)(nil),                         // 6: proto.UnsubscribeResponse
	(*SubscriptionError)(nil),                           // 7: proto.SubscriptionError
	(*SubscribeToAppTwinRequest)(nil),                   // 8: proto.SubscribeToAppTwinRequest
	(*ResubscribeToAppTwinRequest)(nil),                 // 9: proto.ResubscribeToAppTwinRequest
	(*ResubscribeToAppTwinResponse)(nil),                // 10: proto.ResubscribeToAppTwinResponse
	(*SubscribeToAppTwinResponse)(nil),                  // 11: proto.SubscribeToAppTwinResponse
	(*UnsubscribeFromAppTwinRequest)(nil),               // 12: proto.UnsubscribeFromAppTwinRequest
	(*UnsubscribeFromAppTwinResponse)(nil),              // 13: proto.UnsubscribeFromAppTwinResponse
	(*Heartbeat)(nil),                                   // 14: proto.Heartbeat
	(*AssignedVehicles)(nil),                            // 15: proto.AssignedVehicles
	(*AcknowledgeAssignedVehicles)(nil),                 // 16: proto.AcknowledgeAssignedVehicles
	nil,                                                 // 17: proto.SubscribeResponse.ErrorsEntry
	nil,                                                 // 18: proto.UnsubscribeResponse.ErrorsEntry
	nil,                                                 // 19: proto.UnsubscribeFromAppTwinResponse.ErrorsEntry
}
var file_protos_proto_depIdxs = []int32{
	17, // 0: proto.SubscribeResponse.errors:type_name -> proto.SubscribeResponse.ErrorsEntry
	18, // 1: proto.UnsubscribeResponse.errors:type_name -> proto.UnsubscribeResponse.ErrorsEntry
	0,  // 2: proto.SubscriptionError.code:type_name -> proto.SubscriptionErrorType
	1,  // 3: proto.SubscribeToAppTwinRequest.os_name:type_name -> proto.OperatingSystemName
	2,  // 4: proto.ResubscribeToAppTwinResponse.result:type_name -> proto.ResubscribeToAppTwinResponse.ResubscribeResult
	0,  // 5: proto.SubscribeToAppTwinResponse.error_code:type_name -> proto.SubscriptionErrorType
	19, // 6: proto.UnsubscribeFromAppTwinResponse.errors:type_name -> proto.UnsubscribeFromAppTwinResponse.ErrorsEntry
	7,  // 7: proto.SubscribeResponse.ErrorsEntry.value:type_name -> proto.SubscriptionError
	7,  // 8: proto.UnsubscribeResponse.ErrorsEntry.value:type_name -> proto.SubscriptionError
	7,  // 9: proto.UnsubscribeFromAppTwinResponse.ErrorsEntry.value:type_name -> proto.SubscriptionError
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_protos_proto_init() }
func file_protos_proto_init() {
	if File_protos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToAppTwinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResubscribeToAppTwinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResubscribeToAppTwinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToAppTwinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeFromAppTwinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeFromAppTwinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignedVehicles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeAssignedVehicles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_proto_goTypes,
		DependencyIndexes: file_protos_proto_depIdxs,
		EnumInfos:         file_protos_proto_enumTypes,
		MessageInfos:      file_protos_proto_msgTypes,
	}.Build()
	File_protos_proto = out.File
	file_protos_proto_rawDesc = nil
	file_protos_proto_goTypes = nil
	file_protos_proto_depIdxs = nil
}
