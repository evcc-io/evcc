// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: client.proto

package protos

import (
	protos "github.com/evcc-io/evcc/vehicle/mercedes/pb/protos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// message that is sent from the client
// Sending direction: App -> Websocket (-> AppTwin)
type ClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,5,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	// Types that are assignable to Msg:
	//
	//	*ClientMessage_UnsubscribeRequest
	//	*ClientMessage_CommandRequest
	//	*ClientMessage_TrackingEvent
	//	*ClientMessage_PingInterval
	//	*ClientMessage_AcknowledgeVepRequest
	//	*ClientMessage_AcknowledgeServiceStatusUpdatesByVin
	//	*ClientMessage_AcknowledgeServiceStatusUpdate
	//	*ClientMessage_AcknowledgeUserDataUpdate
	//	*ClientMessage_AcknowledgeUserPictureUpdate
	//	*ClientMessage_AcknowledgeUserPinUpdate
	//	*ClientMessage_UpdateUserJwtRequest
	//	*ClientMessage_AcknowledgeUserVehicleAuthChangedUpdate
	//	*ClientMessage_AcknowledgeAbilityToGetVehicleMasterDataFromRestApi
	//	*ClientMessage_AcknowledgeVehicleUpdated
	//	*ClientMessage_AcknowledgePreferredDealerChange
	//	*ClientMessage_AcknowledgeApptwinCommandStatusUpdateByVin
	//	*ClientMessage_Logout
	//	*ClientMessage_ApptwinPendingCommandsResponse
	//	*ClientMessage_AcknowledgeVepUpdatesByVin
	//	*ClientMessage_AcknowledgeAssignedVehicles
	Msg isClientMessage_Msg `protobuf_oneof:"msg"`
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

func (x *ClientMessage) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (m *ClientMessage) GetMsg() isClientMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *ClientMessage) GetUnsubscribeRequest() *protos.UnsubscribeRequest {
	if x, ok := x.GetMsg().(*ClientMessage_UnsubscribeRequest); ok {
		return x.UnsubscribeRequest
	}
	return nil
}

func (x *ClientMessage) GetCommandRequest() *CommandRequest {
	if x, ok := x.GetMsg().(*ClientMessage_CommandRequest); ok {
		return x.CommandRequest
	}
	return nil
}

func (x *ClientMessage) GetTrackingEvent() *TrackingEvent {
	if x, ok := x.GetMsg().(*ClientMessage_TrackingEvent); ok {
		return x.TrackingEvent
	}
	return nil
}

func (x *ClientMessage) GetPingInterval() *ConfigurePingInterval {
	if x, ok := x.GetMsg().(*ClientMessage_PingInterval); ok {
		return x.PingInterval
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeVepRequest() *AcknowledgeVEPRequest {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeVepRequest); ok {
		return x.AcknowledgeVepRequest
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeServiceStatusUpdatesByVin() *AcknowledgeServiceStatusUpdatesByVIN {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeServiceStatusUpdatesByVin); ok {
		return x.AcknowledgeServiceStatusUpdatesByVin
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeServiceStatusUpdate() *AcknowledgeServiceStatusUpdate {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeServiceStatusUpdate); ok {
		return x.AcknowledgeServiceStatusUpdate
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeUserDataUpdate() *AcknowledgeUserDataUpdate {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeUserDataUpdate); ok {
		return x.AcknowledgeUserDataUpdate
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeUserPictureUpdate() *AcknowledgeUserPictureUpdate {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeUserPictureUpdate); ok {
		return x.AcknowledgeUserPictureUpdate
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeUserPinUpdate() *AcknowledgeUserPINUpdate {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeUserPinUpdate); ok {
		return x.AcknowledgeUserPinUpdate
	}
	return nil
}

func (x *ClientMessage) GetUpdateUserJwtRequest() *UpdateUserJWTRequest {
	if x, ok := x.GetMsg().(*ClientMessage_UpdateUserJwtRequest); ok {
		return x.UpdateUserJwtRequest
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeUserVehicleAuthChangedUpdate() *AcknowledgeUserVehicleAuthChangedUpdate {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeUserVehicleAuthChangedUpdate); ok {
		return x.AcknowledgeUserVehicleAuthChangedUpdate
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeAbilityToGetVehicleMasterDataFromRestApi() *AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeAbilityToGetVehicleMasterDataFromRestApi); ok {
		return x.AcknowledgeAbilityToGetVehicleMasterDataFromRestApi
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeVehicleUpdated() *AcknowledgeVehicleUpdated {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeVehicleUpdated); ok {
		return x.AcknowledgeVehicleUpdated
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgePreferredDealerChange() *AcknowledgePreferredDealerChange {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgePreferredDealerChange); ok {
		return x.AcknowledgePreferredDealerChange
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeApptwinCommandStatusUpdateByVin() *AcknowledgeAppTwinCommandStatusUpdatesByVIN {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeApptwinCommandStatusUpdateByVin); ok {
		return x.AcknowledgeApptwinCommandStatusUpdateByVin
	}
	return nil
}

func (x *ClientMessage) GetLogout() *Logout {
	if x, ok := x.GetMsg().(*ClientMessage_Logout); ok {
		return x.Logout
	}
	return nil
}

func (x *ClientMessage) GetApptwinPendingCommandsResponse() *AppTwinPendingCommandsResponse {
	if x, ok := x.GetMsg().(*ClientMessage_ApptwinPendingCommandsResponse); ok {
		return x.ApptwinPendingCommandsResponse
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeVepUpdatesByVin() *AcknowledgeVEPUpdatesByVIN {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeVepUpdatesByVin); ok {
		return x.AcknowledgeVepUpdatesByVin
	}
	return nil
}

func (x *ClientMessage) GetAcknowledgeAssignedVehicles() *protos.AcknowledgeAssignedVehicles {
	if x, ok := x.GetMsg().(*ClientMessage_AcknowledgeAssignedVehicles); ok {
		return x.AcknowledgeAssignedVehicles
	}
	return nil
}

type isClientMessage_Msg interface {
	isClientMessage_Msg()
}

type ClientMessage_UnsubscribeRequest struct {
	UnsubscribeRequest *protos.UnsubscribeRequest `protobuf:"bytes,2,opt,name=unsubscribeRequest,proto3,oneof"`
}

type ClientMessage_CommandRequest struct {
	CommandRequest *CommandRequest `protobuf:"bytes,3,opt,name=commandRequest,proto3,oneof"`
}

type ClientMessage_TrackingEvent struct {
	TrackingEvent *TrackingEvent `protobuf:"bytes,4,opt,name=tracking_event,json=trackingEvent,proto3,oneof"`
}

type ClientMessage_PingInterval struct {
	PingInterval *ConfigurePingInterval `protobuf:"bytes,6,opt,name=ping_interval,json=pingInterval,proto3,oneof"`
}

type ClientMessage_AcknowledgeVepRequest struct {
	AcknowledgeVepRequest *AcknowledgeVEPRequest `protobuf:"bytes,7,opt,name=acknowledge_vep_request,json=acknowledgeVepRequest,proto3,oneof"`
}

type ClientMessage_AcknowledgeServiceStatusUpdatesByVin struct {
	AcknowledgeServiceStatusUpdatesByVin *AcknowledgeServiceStatusUpdatesByVIN `protobuf:"bytes,9,opt,name=acknowledge_service_status_updates_by_vin,json=acknowledgeServiceStatusUpdatesByVin,proto3,oneof"`
}

type ClientMessage_AcknowledgeServiceStatusUpdate struct {
	AcknowledgeServiceStatusUpdate *AcknowledgeServiceStatusUpdate `protobuf:"bytes,13,opt,name=acknowledge_service_status_update,json=acknowledgeServiceStatusUpdate,proto3,oneof"`
}

type ClientMessage_AcknowledgeUserDataUpdate struct {
	AcknowledgeUserDataUpdate *AcknowledgeUserDataUpdate `protobuf:"bytes,10,opt,name=acknowledge_user_data_update,json=acknowledgeUserDataUpdate,proto3,oneof"`
}

type ClientMessage_AcknowledgeUserPictureUpdate struct {
	AcknowledgeUserPictureUpdate *AcknowledgeUserPictureUpdate `protobuf:"bytes,11,opt,name=acknowledge_user_picture_update,json=acknowledgeUserPictureUpdate,proto3,oneof"`
}

type ClientMessage_AcknowledgeUserPinUpdate struct {
	AcknowledgeUserPinUpdate *AcknowledgeUserPINUpdate `protobuf:"bytes,12,opt,name=acknowledge_user_pin_update,json=acknowledgeUserPinUpdate,proto3,oneof"`
}

type ClientMessage_UpdateUserJwtRequest struct {
	UpdateUserJwtRequest *UpdateUserJWTRequest `protobuf:"bytes,14,opt,name=update_user_jwt_request,json=updateUserJwtRequest,proto3,oneof"`
}

type ClientMessage_AcknowledgeUserVehicleAuthChangedUpdate struct {
	AcknowledgeUserVehicleAuthChangedUpdate *AcknowledgeUserVehicleAuthChangedUpdate `protobuf:"bytes,15,opt,name=acknowledge_user_vehicle_auth_changed_update,json=acknowledgeUserVehicleAuthChangedUpdate,proto3,oneof"`
}

type ClientMessage_AcknowledgeAbilityToGetVehicleMasterDataFromRestApi struct {
	AcknowledgeAbilityToGetVehicleMasterDataFromRestApi *AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI `protobuf:"bytes,16,opt,name=acknowledge_ability_to_get_vehicle_master_data_from_rest_api,json=acknowledgeAbilityToGetVehicleMasterDataFromRestApi,proto3,oneof"`
}

type ClientMessage_AcknowledgeVehicleUpdated struct {
	AcknowledgeVehicleUpdated *AcknowledgeVehicleUpdated `protobuf:"bytes,17,opt,name=acknowledge_vehicle_updated,json=acknowledgeVehicleUpdated,proto3,oneof"`
}

type ClientMessage_AcknowledgePreferredDealerChange struct {
	AcknowledgePreferredDealerChange *AcknowledgePreferredDealerChange `protobuf:"bytes,18,opt,name=acknowledge_preferred_dealer_change,json=acknowledgePreferredDealerChange,proto3,oneof"`
}

type ClientMessage_AcknowledgeApptwinCommandStatusUpdateByVin struct {
	AcknowledgeApptwinCommandStatusUpdateByVin *AcknowledgeAppTwinCommandStatusUpdatesByVIN `protobuf:"bytes,19,opt,name=acknowledge_apptwin_command_status_update_by_vin,json=acknowledgeApptwinCommandStatusUpdateByVin,proto3,oneof"`
}

type ClientMessage_Logout struct {
	Logout *Logout `protobuf:"bytes,20,opt,name=logout,proto3,oneof"`
}

type ClientMessage_ApptwinPendingCommandsResponse struct {
	ApptwinPendingCommandsResponse *AppTwinPendingCommandsResponse `protobuf:"bytes,21,opt,name=apptwin_pending_commands_response,json=apptwinPendingCommandsResponse,proto3,oneof"`
}

type ClientMessage_AcknowledgeVepUpdatesByVin struct {
	AcknowledgeVepUpdatesByVin *AcknowledgeVEPUpdatesByVIN `protobuf:"bytes,22,opt,name=acknowledge_vep_updates_by_vin,json=acknowledgeVepUpdatesByVin,proto3,oneof"`
}

type ClientMessage_AcknowledgeAssignedVehicles struct {
	AcknowledgeAssignedVehicles *protos.AcknowledgeAssignedVehicles `protobuf:"bytes,23,opt,name=acknowledge_assigned_vehicles,json=acknowledgeAssignedVehicles,proto3,oneof"`
}

func (*ClientMessage_UnsubscribeRequest) isClientMessage_Msg() {}

func (*ClientMessage_CommandRequest) isClientMessage_Msg() {}

func (*ClientMessage_TrackingEvent) isClientMessage_Msg() {}

func (*ClientMessage_PingInterval) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeVepRequest) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeServiceStatusUpdatesByVin) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeServiceStatusUpdate) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeUserDataUpdate) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeUserPictureUpdate) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeUserPinUpdate) isClientMessage_Msg() {}

func (*ClientMessage_UpdateUserJwtRequest) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeUserVehicleAuthChangedUpdate) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeAbilityToGetVehicleMasterDataFromRestApi) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeVehicleUpdated) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgePreferredDealerChange) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeApptwinCommandStatusUpdateByVin) isClientMessage_Msg() {}

func (*ClientMessage_Logout) isClientMessage_Msg() {}

func (*ClientMessage_ApptwinPendingCommandsResponse) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeVepUpdatesByVin) isClientMessage_Msg() {}

func (*ClientMessage_AcknowledgeAssignedVehicles) isClientMessage_Msg() {}

// Message to send from the app right before logging out of keycloak
// Stops the corresponding AppTwin actor and shuts it down and
// stops the websocket actor (but does not shut it down. This automatically happens, when the websocket connection is terminated)
type Logout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Logout) Reset() {
	*x = Logout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logout) ProtoMessage() {}

func (x *Logout) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logout.ProtoReflect.Descriptor instead.
func (*Logout) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

var File_client_proto protoreflect.FileDescriptor

var file_client_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x75,
	0x73, 0x65, 0x72, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe6, 0x10, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x12, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x75, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3f, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x43, 0x0a, 0x0d, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x56, 0x0a, 0x17, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x56, 0x45, 0x50, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x56, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x86, 0x01,
	0x0a, 0x29, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x76, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x56, 0x49, 0x4e, 0x48, 0x00,
	0x52, 0x24, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x42, 0x79, 0x56, 0x69, 0x6e, 0x12, 0x72, 0x0a, 0x21, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x1e, 0x61, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x63, 0x0a, 0x1c, 0x61, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x19, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x6c, 0x0a, 0x1f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x1c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x60, 0x0a,
	0x1b, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x70, 0x69, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x49, 0x4e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x18, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x54, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6a,
	0x77, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x77, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x8f, 0x01, 0x0a, 0x2c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x27,
	0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xb7, 0x01, 0x0a, 0x3c, 0x61, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x74, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x72, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x41, 0x50, 0x49, 0x48, 0x00, 0x52, 0x33, 0x61, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x54, 0x6f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x74, 0x41, 0x70,
	0x69, 0x12, 0x62, 0x0a, 0x1b, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x19, 0x61, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x78, 0x0a, 0x23, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x64,
	0x65, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x44,
	0x65, 0x61, 0x6c, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x20, 0x61,
	0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x44, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x9a, 0x01, 0x0a, 0x30, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x61, 0x70, 0x70, 0x74, 0x77, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x5f, 0x76, 0x69, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x70,
	0x70, 0x54, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x56, 0x49, 0x4e, 0x48, 0x00,
	0x52, 0x2a, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x70, 0x70,
	0x74, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x56, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x06,
	0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x72, 0x0a, 0x21, 0x61, 0x70, 0x70, 0x74, 0x77, 0x69, 0x6e,
	0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1e, 0x61, 0x70, 0x70, 0x74, 0x77,
	0x69, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x1e, 0x61, 0x63, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x70, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x76, 0x69, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x56, 0x45, 0x50, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42,
	0x79, 0x56, 0x49, 0x4e, 0x48, 0x00, 0x52, 0x1a, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x56, 0x65, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x56,
	0x69, 0x6e, 0x12, 0x68, 0x0a, 0x1d, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x1b, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x42, 0x05, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x22, 0x08, 0x0a, 0x06, 0x4c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x42, 0x1c, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x69, 0x6d, 0x6c,
	0x65, 0x72, 0x2e, 0x6d, 0x62, 0x63, 0x61, 0x72, 0x6b, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData = file_client_proto_rawDesc
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_proto_rawDescData)
	})
	return file_client_proto_rawDescData
}

var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_client_proto_goTypes = []interface{}{
	(*ClientMessage)(nil),                                       // 0: proto.ClientMessage
	(*Logout)(nil),                                              // 1: proto.Logout
	(*protos.UnsubscribeRequest)(nil),                           // 2: proto.UnsubscribeRequest
	(*CommandRequest)(nil),                                      // 3: proto.CommandRequest
	(*TrackingEvent)(nil),                                       // 4: proto.TrackingEvent
	(*ConfigurePingInterval)(nil),                               // 5: proto.ConfigurePingInterval
	(*AcknowledgeVEPRequest)(nil),                               // 6: proto.AcknowledgeVEPRequest
	(*AcknowledgeServiceStatusUpdatesByVIN)(nil),                // 7: proto.AcknowledgeServiceStatusUpdatesByVIN
	(*AcknowledgeServiceStatusUpdate)(nil),                      // 8: proto.AcknowledgeServiceStatusUpdate
	(*AcknowledgeUserDataUpdate)(nil),                           // 9: proto.AcknowledgeUserDataUpdate
	(*AcknowledgeUserPictureUpdate)(nil),                        // 10: proto.AcknowledgeUserPictureUpdate
	(*AcknowledgeUserPINUpdate)(nil),                            // 11: proto.AcknowledgeUserPINUpdate
	(*UpdateUserJWTRequest)(nil),                                // 12: proto.UpdateUserJWTRequest
	(*AcknowledgeUserVehicleAuthChangedUpdate)(nil),             // 13: proto.AcknowledgeUserVehicleAuthChangedUpdate
	(*AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI)(nil), // 14: proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI
	(*AcknowledgeVehicleUpdated)(nil),                           // 15: proto.AcknowledgeVehicleUpdated
	(*AcknowledgePreferredDealerChange)(nil),                    // 16: proto.AcknowledgePreferredDealerChange
	(*AcknowledgeAppTwinCommandStatusUpdatesByVIN)(nil),         // 17: proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN
	(*AppTwinPendingCommandsResponse)(nil),                      // 18: proto.AppTwinPendingCommandsResponse
	(*AcknowledgeVEPUpdatesByVIN)(nil),                          // 19: proto.AcknowledgeVEPUpdatesByVIN
	(*protos.AcknowledgeAssignedVehicles)(nil),                  // 20: proto.AcknowledgeAssignedVehicles
}
var file_client_proto_depIdxs = []int32{
	2,  // 0: proto.ClientMessage.unsubscribeRequest:type_name -> proto.UnsubscribeRequest
	3,  // 1: proto.ClientMessage.commandRequest:type_name -> proto.CommandRequest
	4,  // 2: proto.ClientMessage.tracking_event:type_name -> proto.TrackingEvent
	5,  // 3: proto.ClientMessage.ping_interval:type_name -> proto.ConfigurePingInterval
	6,  // 4: proto.ClientMessage.acknowledge_vep_request:type_name -> proto.AcknowledgeVEPRequest
	7,  // 5: proto.ClientMessage.acknowledge_service_status_updates_by_vin:type_name -> proto.AcknowledgeServiceStatusUpdatesByVIN
	8,  // 6: proto.ClientMessage.acknowledge_service_status_update:type_name -> proto.AcknowledgeServiceStatusUpdate
	9,  // 7: proto.ClientMessage.acknowledge_user_data_update:type_name -> proto.AcknowledgeUserDataUpdate
	10, // 8: proto.ClientMessage.acknowledge_user_picture_update:type_name -> proto.AcknowledgeUserPictureUpdate
	11, // 9: proto.ClientMessage.acknowledge_user_pin_update:type_name -> proto.AcknowledgeUserPINUpdate
	12, // 10: proto.ClientMessage.update_user_jwt_request:type_name -> proto.UpdateUserJWTRequest
	13, // 11: proto.ClientMessage.acknowledge_user_vehicle_auth_changed_update:type_name -> proto.AcknowledgeUserVehicleAuthChangedUpdate
	14, // 12: proto.ClientMessage.acknowledge_ability_to_get_vehicle_master_data_from_rest_api:type_name -> proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI
	15, // 13: proto.ClientMessage.acknowledge_vehicle_updated:type_name -> proto.AcknowledgeVehicleUpdated
	16, // 14: proto.ClientMessage.acknowledge_preferred_dealer_change:type_name -> proto.AcknowledgePreferredDealerChange
	17, // 15: proto.ClientMessage.acknowledge_apptwin_command_status_update_by_vin:type_name -> proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN
	1,  // 16: proto.ClientMessage.logout:type_name -> proto.Logout
	18, // 17: proto.ClientMessage.apptwin_pending_commands_response:type_name -> proto.AppTwinPendingCommandsResponse
	19, // 18: proto.ClientMessage.acknowledge_vep_updates_by_vin:type_name -> proto.AcknowledgeVEPUpdatesByVIN
	20, // 19: proto.ClientMessage.acknowledge_assigned_vehicles:type_name -> proto.AcknowledgeAssignedVehicles
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	file_service_activation_proto_init()
	file_user_events_proto_init()
	file_vehicle_commands_proto_init()
	file_vehicle_events_proto_init()
	file_vehicleapi_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_client_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ClientMessage_UnsubscribeRequest)(nil),
		(*ClientMessage_CommandRequest)(nil),
		(*ClientMessage_TrackingEvent)(nil),
		(*ClientMessage_PingInterval)(nil),
		(*ClientMessage_AcknowledgeVepRequest)(nil),
		(*ClientMessage_AcknowledgeServiceStatusUpdatesByVin)(nil),
		(*ClientMessage_AcknowledgeServiceStatusUpdate)(nil),
		(*ClientMessage_AcknowledgeUserDataUpdate)(nil),
		(*ClientMessage_AcknowledgeUserPictureUpdate)(nil),
		(*ClientMessage_AcknowledgeUserPinUpdate)(nil),
		(*ClientMessage_UpdateUserJwtRequest)(nil),
		(*ClientMessage_AcknowledgeUserVehicleAuthChangedUpdate)(nil),
		(*ClientMessage_AcknowledgeAbilityToGetVehicleMasterDataFromRestApi)(nil),
		(*ClientMessage_AcknowledgeVehicleUpdated)(nil),
		(*ClientMessage_AcknowledgePreferredDealerChange)(nil),
		(*ClientMessage_AcknowledgeApptwinCommandStatusUpdateByVin)(nil),
		(*ClientMessage_Logout)(nil),
		(*ClientMessage_ApptwinPendingCommandsResponse)(nil),
		(*ClientMessage_AcknowledgeVepUpdatesByVin)(nil),
		(*ClientMessage_AcknowledgeAssignedVehicles)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_rawDesc = nil
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}
