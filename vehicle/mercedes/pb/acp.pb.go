// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: acp.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VVA_CommandState int32

const (
	VVA_UNKNOWN_COMMAND_STATE VVA_CommandState = 0
	VVA_CREATED               VVA_CommandState = 1010
	VVA_ENQUEUED              VVA_CommandState = 1016
	VVA_PROCESSING            VVA_CommandState = 1012
	VVA_SUSPENDED             VVA_CommandState = 1017
	VVA_FINISHED              VVA_CommandState = 1018
)

// Enum value maps for VVA_CommandState.
var (
	VVA_CommandState_name = map[int32]string{
		0:    "UNKNOWN_COMMAND_STATE",
		1010: "CREATED",
		1016: "ENQUEUED",
		1012: "PROCESSING",
		1017: "SUSPENDED",
		1018: "FINISHED",
	}
	VVA_CommandState_value = map[string]int32{
		"UNKNOWN_COMMAND_STATE": 0,
		"CREATED":               1010,
		"ENQUEUED":              1016,
		"PROCESSING":            1012,
		"SUSPENDED":             1017,
		"FINISHED":              1018,
	}
)

func (x VVA_CommandState) Enum() *VVA_CommandState {
	p := new(VVA_CommandState)
	*p = x
	return p
}

func (x VVA_CommandState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VVA_CommandState) Descriptor() protoreflect.EnumDescriptor {
	return file_acp_proto_enumTypes[0].Descriptor()
}

func (VVA_CommandState) Type() protoreflect.EnumType {
	return &file_acp_proto_enumTypes[0]
}

func (x VVA_CommandState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VVA_CommandState.Descriptor instead.
func (VVA_CommandState) EnumDescriptor() ([]byte, []int) {
	return file_acp_proto_rawDescGZIP(), []int{0, 0}
}

type VVA_CommandCondition int32

const (
	VVA_UNKNWON_COMMAND_CONDITION VVA_CommandCondition = 0
	VVA_NONE                      VVA_CommandCondition = 1000
	VVA_ACCEPTED                  VVA_CommandCondition = 1001
	VVA_REJECTED                  VVA_CommandCondition = 1002
	VVA_TERMINATE                 VVA_CommandCondition = 1003
	VVA_SUCCESS                   VVA_CommandCondition = 1011
	VVA_FAILED                    VVA_CommandCondition = 1013
	VVA_OVERWRITTEN               VVA_CommandCondition = 1014
	VVA_TIMEOUT                   VVA_CommandCondition = 1015
)

// Enum value maps for VVA_CommandCondition.
var (
	VVA_CommandCondition_name = map[int32]string{
		0:    "UNKNWON_COMMAND_CONDITION",
		1000: "NONE",
		1001: "ACCEPTED",
		1002: "REJECTED",
		1003: "TERMINATE",
		1011: "SUCCESS",
		1013: "FAILED",
		1014: "OVERWRITTEN",
		1015: "TIMEOUT",
	}
	VVA_CommandCondition_value = map[string]int32{
		"UNKNWON_COMMAND_CONDITION": 0,
		"NONE":                      1000,
		"ACCEPTED":                  1001,
		"REJECTED":                  1002,
		"TERMINATE":                 1003,
		"SUCCESS":                   1011,
		"FAILED":                    1013,
		"OVERWRITTEN":               1014,
		"TIMEOUT":                   1015,
	}
)

func (x VVA_CommandCondition) Enum() *VVA_CommandCondition {
	p := new(VVA_CommandCondition)
	*p = x
	return p
}

func (x VVA_CommandCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VVA_CommandCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_acp_proto_enumTypes[1].Descriptor()
}

func (VVA_CommandCondition) Type() protoreflect.EnumType {
	return &file_acp_proto_enumTypes[1]
}

func (x VVA_CommandCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VVA_CommandCondition.Descriptor instead.
func (VVA_CommandCondition) EnumDescriptor() ([]byte, []int) {
	return file_acp_proto_rawDescGZIP(), []int{0, 1}
}

type VehicleAPI_CommandState int32

const (
	VehicleAPI_UNKNOWN_COMMAND_STATE VehicleAPI_CommandState = 0
	// Command execution request is accepted and an asynchronous process is
	// being initialized.
	VehicleAPI_INITIATION VehicleAPI_CommandState = 1
	// Another process for the same vehicle and queue is active, the request has
	// been queued for later execution.
	VehicleAPI_ENQUEUED VehicleAPI_CommandState = 2
	// The process is currently being processed by the backend.
	VehicleAPI_PROCESSING VehicleAPI_CommandState = 3
	// The backend currently waits for the vehicle to respond to the request.
	VehicleAPI_WAITING VehicleAPI_CommandState = 4
	// The process has finished successfully.
	VehicleAPI_FINISHED VehicleAPI_CommandState = 5
	// There was an error while executing the command process.
	VehicleAPI_FAILED VehicleAPI_CommandState = 6
)

// Enum value maps for VehicleAPI_CommandState.
var (
	VehicleAPI_CommandState_name = map[int32]string{
		0: "UNKNOWN_COMMAND_STATE",
		1: "INITIATION",
		2: "ENQUEUED",
		3: "PROCESSING",
		4: "WAITING",
		5: "FINISHED",
		6: "FAILED",
	}
	VehicleAPI_CommandState_value = map[string]int32{
		"UNKNOWN_COMMAND_STATE": 0,
		"INITIATION":            1,
		"ENQUEUED":              2,
		"PROCESSING":            3,
		"WAITING":               4,
		"FINISHED":              5,
		"FAILED":                6,
	}
)

func (x VehicleAPI_CommandState) Enum() *VehicleAPI_CommandState {
	p := new(VehicleAPI_CommandState)
	*p = x
	return p
}

func (x VehicleAPI_CommandState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VehicleAPI_CommandState) Descriptor() protoreflect.EnumDescriptor {
	return file_acp_proto_enumTypes[2].Descriptor()
}

func (VehicleAPI_CommandState) Type() protoreflect.EnumType {
	return &file_acp_proto_enumTypes[2]
}

func (x VehicleAPI_CommandState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VehicleAPI_CommandState.Descriptor instead.
func (VehicleAPI_CommandState) EnumDescriptor() ([]byte, []int) {
	return file_acp_proto_rawDescGZIP(), []int{1, 0}
}

type VehicleAPI_AttributeStatus int32

const (
	// Value is set and valid
	VehicleAPI_VALUE_SET VehicleAPI_AttributeStatus = 0
	// Value has not yet been retrieved from vehicle (but sensor etc. should be available)
	VehicleAPI_VALUE_NOT_SET VehicleAPI_AttributeStatus = 1
	// Value has been retrieved from vehicle but is invalid (marked as invalid by DaiVB backend)
	VehicleAPI_INVALID VehicleAPI_AttributeStatus = 3
	// Vehicle does not support this attribute (e.g. does not have the sensor etc.)
	VehicleAPI_NOT_AVAILABLE VehicleAPI_AttributeStatus = 4
)

// Enum value maps for VehicleAPI_AttributeStatus.
var (
	VehicleAPI_AttributeStatus_name = map[int32]string{
		0: "VALUE_SET",
		1: "VALUE_NOT_SET",
		3: "INVALID",
		4: "NOT_AVAILABLE",
	}
	VehicleAPI_AttributeStatus_value = map[string]int32{
		"VALUE_SET":     0,
		"VALUE_NOT_SET": 1,
		"INVALID":       3,
		"NOT_AVAILABLE": 4,
	}
)

func (x VehicleAPI_AttributeStatus) Enum() *VehicleAPI_AttributeStatus {
	p := new(VehicleAPI_AttributeStatus)
	*p = x
	return p
}

func (x VehicleAPI_AttributeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VehicleAPI_AttributeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_acp_proto_enumTypes[3].Descriptor()
}

func (VehicleAPI_AttributeStatus) Type() protoreflect.EnumType {
	return &file_acp_proto_enumTypes[3]
}

func (x VehicleAPI_AttributeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VehicleAPI_AttributeStatus.Descriptor instead.
func (VehicleAPI_AttributeStatus) EnumDescriptor() ([]byte, []int) {
	return file_acp_proto_rawDescGZIP(), []int{1, 1}
}

type VehicleAPI_QueueType int32

const (
	VehicleAPI_UNKNOWNCOMMANDQUEUETYPE VehicleAPI_QueueType = 0
	VehicleAPI_DOORS                   VehicleAPI_QueueType = 10
	VehicleAPI_AUXHEAT                 VehicleAPI_QueueType = 11
	VehicleAPI_PRECOND                 VehicleAPI_QueueType = 12
	VehicleAPI_CHARGEOPT               VehicleAPI_QueueType = 13
	VehicleAPI_MAINTENANCE             VehicleAPI_QueueType = 14
	VehicleAPI_TCU                     VehicleAPI_QueueType = 15
	VehicleAPI_FEED                    VehicleAPI_QueueType = 16
	VehicleAPI_SERVICEACTIVATION       VehicleAPI_QueueType = 17
	VehicleAPI_ATP                     VehicleAPI_QueueType = 18
	VehicleAPI_ASSISTANCE              VehicleAPI_QueueType = 19
	VehicleAPI_RACP                    VehicleAPI_QueueType = 20
	VehicleAPI_WEEKPROFILE             VehicleAPI_QueueType = 21
	VehicleAPI_REMOTEDIAGNOSIS         VehicleAPI_QueueType = 22
	VehicleAPI_FLSH                    VehicleAPI_QueueType = 23 //(ALSO USED BY SIGPOS/RVF)
	VehicleAPI_TEMPERATURE             VehicleAPI_QueueType = 24
	VehicleAPI_TRIPCOMP                VehicleAPI_QueueType = 25
	VehicleAPI_ENGINE                  VehicleAPI_QueueType = 26
	VehicleAPI_THEFTALARM              VehicleAPI_QueueType = 27
	VehicleAPI_WINDOW                  VehicleAPI_QueueType = 28
	VehicleAPI_HEADUNIT                VehicleAPI_QueueType = 29
	VehicleAPI_MECALL                  VehicleAPI_QueueType = 31
	VehicleAPI_IMMOBILIZER             VehicleAPI_QueueType = 32
	VehicleAPI_RENTALSIGNAL            VehicleAPI_QueueType = 33
	VehicleAPI_BCF                     VehicleAPI_QueueType = 34 //(BLACKCHANNEL)
	VehicleAPI_PLUGANDCHARGE           VehicleAPI_QueueType = 35
	VehicleAPI_CARSHARINGMODULE        VehicleAPI_QueueType = 36
	VehicleAPI_BATTERY                 VehicleAPI_QueueType = 37
	VehicleAPI_ONBOARDFENCES           VehicleAPI_QueueType = 38
	VehicleAPI_SPEEDFENCES             VehicleAPI_QueueType = 39
	VehicleAPI_CHARGINGTARIFFS         VehicleAPI_QueueType = 40
	VehicleAPI_RTMCONFIG               VehicleAPI_QueueType = 41
	VehicleAPI_MAINTENANCECOMPUTER     VehicleAPI_QueueType = 42
	VehicleAPI_MECALL2                 VehicleAPI_QueueType = 43
	VehicleAPI_AUTOMATEDVALETPARKING   VehicleAPI_QueueType = 44
	VehicleAPI_CHARGECONTROL           VehicleAPI_QueueType = 45
	VehicleAPI_SPEEDALERT              VehicleAPI_QueueType = 46
	VehicleAPI_unknowncommandqueuetype VehicleAPI_QueueType = 0
	VehicleAPI_doors                   VehicleAPI_QueueType = 10
	VehicleAPI_auxheat                 VehicleAPI_QueueType = 11
	VehicleAPI_precond                 VehicleAPI_QueueType = 12
	VehicleAPI_chargeopt               VehicleAPI_QueueType = 13
	VehicleAPI_maintenance             VehicleAPI_QueueType = 14
	VehicleAPI_tcu                     VehicleAPI_QueueType = 15
	VehicleAPI_feed                    VehicleAPI_QueueType = 16
	VehicleAPI_serviceactivation       VehicleAPI_QueueType = 17
	VehicleAPI_atp                     VehicleAPI_QueueType = 18
	VehicleAPI_assistance              VehicleAPI_QueueType = 19
	VehicleAPI_racp                    VehicleAPI_QueueType = 20
	VehicleAPI_weekprofile             VehicleAPI_QueueType = 21
	VehicleAPI_remotediagnosis         VehicleAPI_QueueType = 22
	VehicleAPI_flsh                    VehicleAPI_QueueType = 23 //(also used by sigpos/RVF)
	VehicleAPI_temperature             VehicleAPI_QueueType = 24
	VehicleAPI_tripcomp                VehicleAPI_QueueType = 25
	VehicleAPI_engine                  VehicleAPI_QueueType = 26
	VehicleAPI_theftalarm              VehicleAPI_QueueType = 27
	VehicleAPI_window                  VehicleAPI_QueueType = 28
	VehicleAPI_headunit                VehicleAPI_QueueType = 29
	VehicleAPI_mecall                  VehicleAPI_QueueType = 31
	VehicleAPI_immobilizer             VehicleAPI_QueueType = 32
	VehicleAPI_rentalsignal            VehicleAPI_QueueType = 33
	VehicleAPI_bcf                     VehicleAPI_QueueType = 34 //(blackchannel)
	VehicleAPI_plugandcharge           VehicleAPI_QueueType = 35
	VehicleAPI_carsharingmodule        VehicleAPI_QueueType = 36
	VehicleAPI_battery                 VehicleAPI_QueueType = 37
	VehicleAPI_onboardfences           VehicleAPI_QueueType = 38
	VehicleAPI_speedfences             VehicleAPI_QueueType = 39
	VehicleAPI_chargingtariffs         VehicleAPI_QueueType = 40
	VehicleAPI_rtmconfig               VehicleAPI_QueueType = 41
	VehicleAPI_maintenancecomputer     VehicleAPI_QueueType = 42
	VehicleAPI_mecall2                 VehicleAPI_QueueType = 43
	VehicleAPI_automatedvaletparking   VehicleAPI_QueueType = 44
	VehicleAPI_chargecontrol           VehicleAPI_QueueType = 45
	VehicleAPI_speedalert              VehicleAPI_QueueType = 46
)

// Enum value maps for VehicleAPI_QueueType.
var (
	VehicleAPI_QueueType_name = map[int32]string{
		0:  "UNKNOWNCOMMANDQUEUETYPE",
		10: "DOORS",
		11: "AUXHEAT",
		12: "PRECOND",
		13: "CHARGEOPT",
		14: "MAINTENANCE",
		15: "TCU",
		16: "FEED",
		17: "SERVICEACTIVATION",
		18: "ATP",
		19: "ASSISTANCE",
		20: "RACP",
		21: "WEEKPROFILE",
		22: "REMOTEDIAGNOSIS",
		23: "FLSH",
		24: "TEMPERATURE",
		25: "TRIPCOMP",
		26: "ENGINE",
		27: "THEFTALARM",
		28: "WINDOW",
		29: "HEADUNIT",
		31: "MECALL",
		32: "IMMOBILIZER",
		33: "RENTALSIGNAL",
		34: "BCF",
		35: "PLUGANDCHARGE",
		36: "CARSHARINGMODULE",
		37: "BATTERY",
		38: "ONBOARDFENCES",
		39: "SPEEDFENCES",
		40: "CHARGINGTARIFFS",
		41: "RTMCONFIG",
		42: "MAINTENANCECOMPUTER",
		43: "MECALL2",
		44: "AUTOMATEDVALETPARKING",
		45: "CHARGECONTROL",
		46: "SPEEDALERT",
		// Duplicate value: 0: "unknowncommandqueuetype",
		// Duplicate value: 10: "doors",
		// Duplicate value: 11: "auxheat",
		// Duplicate value: 12: "precond",
		// Duplicate value: 13: "chargeopt",
		// Duplicate value: 14: "maintenance",
		// Duplicate value: 15: "tcu",
		// Duplicate value: 16: "feed",
		// Duplicate value: 17: "serviceactivation",
		// Duplicate value: 18: "atp",
		// Duplicate value: 19: "assistance",
		// Duplicate value: 20: "racp",
		// Duplicate value: 21: "weekprofile",
		// Duplicate value: 22: "remotediagnosis",
		// Duplicate value: 23: "flsh",
		// Duplicate value: 24: "temperature",
		// Duplicate value: 25: "tripcomp",
		// Duplicate value: 26: "engine",
		// Duplicate value: 27: "theftalarm",
		// Duplicate value: 28: "window",
		// Duplicate value: 29: "headunit",
		// Duplicate value: 31: "mecall",
		// Duplicate value: 32: "immobilizer",
		// Duplicate value: 33: "rentalsignal",
		// Duplicate value: 34: "bcf",
		// Duplicate value: 35: "plugandcharge",
		// Duplicate value: 36: "carsharingmodule",
		// Duplicate value: 37: "battery",
		// Duplicate value: 38: "onboardfences",
		// Duplicate value: 39: "speedfences",
		// Duplicate value: 40: "chargingtariffs",
		// Duplicate value: 41: "rtmconfig",
		// Duplicate value: 42: "maintenancecomputer",
		// Duplicate value: 43: "mecall2",
		// Duplicate value: 44: "automatedvaletparking",
		// Duplicate value: 45: "chargecontrol",
		// Duplicate value: 46: "speedalert",
	}
	VehicleAPI_QueueType_value = map[string]int32{
		"UNKNOWNCOMMANDQUEUETYPE": 0,
		"DOORS":                   10,
		"AUXHEAT":                 11,
		"PRECOND":                 12,
		"CHARGEOPT":               13,
		"MAINTENANCE":             14,
		"TCU":                     15,
		"FEED":                    16,
		"SERVICEACTIVATION":       17,
		"ATP":                     18,
		"ASSISTANCE":              19,
		"RACP":                    20,
		"WEEKPROFILE":             21,
		"REMOTEDIAGNOSIS":         22,
		"FLSH":                    23,
		"TEMPERATURE":             24,
		"TRIPCOMP":                25,
		"ENGINE":                  26,
		"THEFTALARM":              27,
		"WINDOW":                  28,
		"HEADUNIT":                29,
		"MECALL":                  31,
		"IMMOBILIZER":             32,
		"RENTALSIGNAL":            33,
		"BCF":                     34,
		"PLUGANDCHARGE":           35,
		"CARSHARINGMODULE":        36,
		"BATTERY":                 37,
		"ONBOARDFENCES":           38,
		"SPEEDFENCES":             39,
		"CHARGINGTARIFFS":         40,
		"RTMCONFIG":               41,
		"MAINTENANCECOMPUTER":     42,
		"MECALL2":                 43,
		"AUTOMATEDVALETPARKING":   44,
		"CHARGECONTROL":           45,
		"SPEEDALERT":              46,
		"unknowncommandqueuetype": 0,
		"doors":                   10,
		"auxheat":                 11,
		"precond":                 12,
		"chargeopt":               13,
		"maintenance":             14,
		"tcu":                     15,
		"feed":                    16,
		"serviceactivation":       17,
		"atp":                     18,
		"assistance":              19,
		"racp":                    20,
		"weekprofile":             21,
		"remotediagnosis":         22,
		"flsh":                    23,
		"temperature":             24,
		"tripcomp":                25,
		"engine":                  26,
		"theftalarm":              27,
		"window":                  28,
		"headunit":                29,
		"mecall":                  31,
		"immobilizer":             32,
		"rentalsignal":            33,
		"bcf":                     34,
		"plugandcharge":           35,
		"carsharingmodule":        36,
		"battery":                 37,
		"onboardfences":           38,
		"speedfences":             39,
		"chargingtariffs":         40,
		"rtmconfig":               41,
		"maintenancecomputer":     42,
		"mecall2":                 43,
		"automatedvaletparking":   44,
		"chargecontrol":           45,
		"speedalert":              46,
	}
)

func (x VehicleAPI_QueueType) Enum() *VehicleAPI_QueueType {
	p := new(VehicleAPI_QueueType)
	*p = x
	return p
}

func (x VehicleAPI_QueueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VehicleAPI_QueueType) Descriptor() protoreflect.EnumDescriptor {
	return file_acp_proto_enumTypes[4].Descriptor()
}

func (VehicleAPI_QueueType) Type() protoreflect.EnumType {
	return &file_acp_proto_enumTypes[4]
}

func (x VehicleAPI_QueueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VehicleAPI_QueueType.Descriptor instead.
func (VehicleAPI_QueueType) EnumDescriptor() ([]byte, []int) {
	return file_acp_proto_rawDescGZIP(), []int{1, 2}
}

type ACP_CommandType int32

const (
	ACP_UNKNOWNCOMMANDTYPE                ACP_CommandType = 0
	ACP_DOORSLOCK                         ACP_CommandType = 100
	ACP_DOORSUNLOCK                       ACP_CommandType = 110
	ACP_TRUNKUNLOCK                       ACP_CommandType = 115
	ACP_FUELFLAPUNLOCK                    ACP_CommandType = 116
	ACP_CHARGEFLAPUNLOCK                  ACP_CommandType = 117
	ACP_CHARGECOUPLERUNLOCK               ACP_CommandType = 118
	ACP_DOORSPREPARERENTAL                ACP_CommandType = 120
	ACP_DOORSSECUREVEHICLE                ACP_CommandType = 130
	ACP_AUXHEATSTART                      ACP_CommandType = 300
	ACP_AUXHEATSTOP                       ACP_CommandType = 310
	ACP_AUXHEATCONFIGURE                  ACP_CommandType = 320
	ACP_TEMPERATURECONFIGURE              ACP_CommandType = 350
	ACP_WEEKPROFILECONFIGURE              ACP_CommandType = 360
	ACP_WEEKPROFILEV2CONFIGURE            ACP_CommandType = 370
	ACP_PRECONDSTART                      ACP_CommandType = 400
	ACP_PRECONDSTOP                       ACP_CommandType = 410
	ACP_PRECONDCONFIGURE                  ACP_CommandType = 420
	ACP_PRECONDCONFIGURESEATS             ACP_CommandType = 425
	ACP_CHARGEOPTCONFIGURE                ACP_CommandType = 430
	ACP_CHARGEOPTSTART                    ACP_CommandType = 440
	ACP_CHARGEOPTSTOP                     ACP_CommandType = 450
	ACP_FEEDPOI                           ACP_CommandType = 500
	ACP_FEEDFREETEXT                      ACP_CommandType = 510
	ACP_ENGINESTART                       ACP_CommandType = 550
	ACP_ENGINESTOP                        ACP_CommandType = 560
	ACP_ENGINEAVPSTART                    ACP_CommandType = 570
	ACP_TCUWAKEUP                         ACP_CommandType = 600
	ACP_TCUSWUPDATE                       ACP_CommandType = 610
	ACP_TCURCSRESET                       ACP_CommandType = 620
	ACP_TCUINTERROGATION                  ACP_CommandType = 630
	ACP_SPEEDALERTSTART                   ACP_CommandType = 710
	ACP_SPEEDALERTSTOP                    ACP_CommandType = 720
	ACP_FLSHSTART                         ACP_CommandType = 750 // (DEPRECATED)
	ACP_FLSHSTOP                          ACP_CommandType = 760 // (DEPRECATED)
	ACP_SIGPOSSTART                       ACP_CommandType = 770
	ACP_CONTRACTCONFIGURE                 ACP_CommandType = 800
	ACP_CONTRACTREMOVE                    ACP_CommandType = 810
	ACP_ROOTCONFIGURE                     ACP_CommandType = 820
	ACP_ROOTREMOVE                        ACP_CommandType = 830
	ACP_TRIPCOMP                          ACP_CommandType = 850 // RESET TRIPCOMP
	ACP_MAINTENANCECONFIGURE              ACP_CommandType = 930
	ACP_MAINTENANCECOMPUTEROFFSET         ACP_CommandType = 931
	ACP_SHORTTESTEXECUTE                  ACP_CommandType = 935
	ACP_SERVICEACTIVATIONCONFIGURE        ACP_CommandType = 940
	ACP_DC2SERVICEACTIVATIONCONFIGURE     ACP_CommandType = 945
	ACP_DC2RAWDOWNLOAD                    ACP_CommandType = 950 //(TEST COMMAND)
	ACP_APPLICATIONCONFIGURATION          ACP_CommandType = 955 // (DC2+)
	ACP_DC2STARTTRACKING                  ACP_CommandType = 960 // (TEST COMMAND)
	ACP_ATPSEQUENCE                       ACP_CommandType = 990
	ACP_THEFTALARMTOGGLEINTERIOR          ACP_CommandType = 1000
	ACP_THEFTALARMTOGGLETOW               ACP_CommandType = 1010
	ACP_THEFTALARMSELECTINTERIORTOW       ACP_CommandType = 1020
	ACP_THEFTALARMDESELECTINTERIORTOW     ACP_CommandType = 1030
	ACP_THEFTALARMSTOP                    ACP_CommandType = 1040
	ACP_WINDOWOPEN                        ACP_CommandType = 1100
	ACP_WINDOWCLOSE                       ACP_CommandType = 1110
	ACP_WINDOWVENTILATE                   ACP_CommandType = 1120
	ACP_WINDOWMOVE                        ACP_CommandType = 1121
	ACP_ROOFOPEN                          ACP_CommandType = 1130
	ACP_ROOFCLOSE                         ACP_CommandType = 1140
	ACP_ROOFLIFT                          ACP_CommandType = 1150
	ACP_ROOFMOVE                          ACP_CommandType = 1151
	ACP_BATTERYMAXSOC                     ACP_CommandType = 2000
	ACP_BATTERYCHARGEPROGRAM              ACP_CommandType = 2010
	ACP_CHARGEPROGRAMCONFIGURE            ACP_CommandType = 2020
	ACP_ONBOARDFENCESCREATE               ACP_CommandType = 2100
	ACP_ONBOARDFENCESUPDATE               ACP_CommandType = 2110
	ACP_ONBOARDFENCESDELETE               ACP_CommandType = 2120
	ACP_SPEEDFENCESCREATE                 ACP_CommandType = 2200
	ACP_SPEEDFENCESUPDATE                 ACP_CommandType = 2210
	ACP_SPEEDFENCESDELETE                 ACP_CommandType = 2220
	ACP_CHARGINGTARIFFSCREATE             ACP_CommandType = 2300
	ACP_CHARGINGTARIFFSUPDATE             ACP_CommandType = 2310
	ACP_CHARGINGTARIFFSDELETE             ACP_CommandType = 2320
	ACP_THEFTALARMSTART                   ACP_CommandType = 2500
	ACP_THEFTALARMSELECTINTERIOR          ACP_CommandType = 2510
	ACP_THEFTALARMDESELECTINTERIOR        ACP_CommandType = 2520
	ACP_THEFTALARMSELECTTOW               ACP_CommandType = 2530
	ACP_THEFTALARMDESELECTTOW             ACP_CommandType = 2540
	ACP_THEFTALARMSELECTDAMAGEDETECTION   ACP_CommandType = 2550
	ACP_THEFTALARMDESELECTDAMAGEDETECTION ACP_CommandType = 2560
	ACP_THEFTALARMCONFIRMDAMAGEDETECTION  ACP_CommandType = 2570
	ACP_MECALL2START                      ACP_CommandType = 2600
	ACP_UDXTRIGGERSYNCHRONIZATION         ACP_CommandType = 1200
	ACP_UDXACTIVEUSERPROFILE              ACP_CommandType = 1210
	ACP_UDXRESETUSERDATA                  ACP_CommandType = 1220
	ACP_USERPROFSYNCH                     ACP_CommandType = 1230
	ACP_USERDATARESET                     ACP_CommandType = 1240
	ACP_PROFACTIVATIONSNAP                ACP_CommandType = 1250
	ACP_PROFACTIVATIONDIRECT              ACP_CommandType = 1255
	ACP_SOFTWAREUPDATE                    ACP_CommandType = 1260
	ACP_PUSHNOTIFICATION                  ACP_CommandType = 1270
	ACP_MECALLCOMMAND                     ACP_CommandType = 1310
	ACP_PRECONDSTARTRCS                   ACP_CommandType = 1400
	ACP_PRECONDSTOPRCS                    ACP_CommandType = 1410
	ACP_PRECONDCONFIGURERCS               ACP_CommandType = 1420
	ACP_TCUCONFIGURE                      ACP_CommandType = 1430
	ACP_EDISONSERVICEACTIVATION           ACP_CommandType = 1431
	ACP_TESTSEQUENCE                      ACP_CommandType = 1432
	ACP_PRECONDCONFIGURERACP              ACP_CommandType = 1433
	ACP_CHARGEOPTCONFIGURERACP            ACP_CommandType = 1434
	ACP_TARIFFTABLEDOWNLOAD               ACP_CommandType = 1435
	ACP_PRECONDSTARTRACP                  ACP_CommandType = 1436
	ACP_PRECONDSTOPRACP                   ACP_CommandType = 1437
	ACP_ROOTCERTIFICATEREMOVE             ACP_CommandType = 1438
	ACP_ONREQUESTPROBEUPLOAD              ACP_CommandType = 1439
	ACP_ROOTCERTIFICATEDOWNLOAD           ACP_CommandType = 1440
	ACP_CONTRACTCERTIFICATEREMOVE         ACP_CommandType = 1441
	ACP_CONTRACTCERTIFICATEDOWNLOAD       ACP_CommandType = 1442
	ACP_PROBECONFIGURATIONUPDATE          ACP_CommandType = 1443
	ACP_RDIAGDELETEECU                    ACP_CommandType = 1500
	ACP_RDIAGSTATUSREPORT                 ACP_CommandType = 1501
	ACP_RDIAGEXECUTION                    ACP_CommandType = 1502
	ACP_IMMOBILIZERCHALLENGE              ACP_CommandType = 1600
	ACP_IMMOBILIZERSEARCHKEYLINE          ACP_CommandType = 1610
	ACP_IMMOBILIZERRELEASEKEYLINE         ACP_CommandType = 1620
	ACP_IMMOBILIZERLOCKKEYLINE            ACP_CommandType = 1630
	ACP_IMMOBILIZERLOCKVEHICLE            ACP_CommandType = 1631
	ACP_IMMOBILIZERRELEASEVEHICLE         ACP_CommandType = 1621
	ACP_SETRENTALSIGNAL                   ACP_CommandType = 1700
	ACP_BLACKCHANNELDOWNLOAD              ACP_CommandType = 1800
	ACP_BLACKCHANNELUPLOAD                ACP_CommandType = 1810
	ACP_CONFIGURECSM                      ACP_CommandType = 1900
	ACP_UPDATEVEHICLEINFO                 ACP_CommandType = 1901
	ACP_RELAYMESSAGETOCSM                 ACP_CommandType = 1902
	ACP_RELAYRENTALREQUESTTOCSB           ACP_CommandType = 1903
	ACP_RTMDOWNLOADCONFIG                 ACP_CommandType = 2400
	ACP_RTMREADCONFIG                     ACP_CommandType = 2410
	ACP_AVPACTIVATE                       ACP_CommandType = 2700
	ACP_CHARGECONTROLCONFIGURE            ACP_CommandType = 2800
	ACP_unknownCommandType                ACP_CommandType = 0
	ACP_doorsLock                         ACP_CommandType = 100
	ACP_doorsUnlock                       ACP_CommandType = 110
	ACP_trunkUnlock                       ACP_CommandType = 115
	ACP_fuelflapUnlock                    ACP_CommandType = 116
	ACP_chargeflapUnlock                  ACP_CommandType = 117
	ACP_chargecouplerUnlock               ACP_CommandType = 118
	ACP_doorsPrepareRental                ACP_CommandType = 120
	ACP_doorsSecureVehicle                ACP_CommandType = 130
	ACP_auxheatStart                      ACP_CommandType = 300
	ACP_auxheatStop                       ACP_CommandType = 310
	ACP_auxheatConfigure                  ACP_CommandType = 320
	ACP_temperatureConfigure              ACP_CommandType = 350
	ACP_weekprofileConfigure              ACP_CommandType = 360
	ACP_weekprofileV2Configure            ACP_CommandType = 370
	ACP_precondStart                      ACP_CommandType = 400
	ACP_precondStop                       ACP_CommandType = 410
	ACP_precondConfigure                  ACP_CommandType = 420
	ACP_precondConfigureSeats             ACP_CommandType = 425
	ACP_chargeoptConfigure                ACP_CommandType = 430
	ACP_chargeoptStart                    ACP_CommandType = 440
	ACP_chargeoptStop                     ACP_CommandType = 450
	ACP_feedPoi                           ACP_CommandType = 500
	ACP_feedFreetext                      ACP_CommandType = 510
	ACP_engineStart                       ACP_CommandType = 550
	ACP_engineStop                        ACP_CommandType = 560
	ACP_engineAvpstart                    ACP_CommandType = 570
	ACP_tcuWakeup                         ACP_CommandType = 600
	ACP_tcuSwUpdate                       ACP_CommandType = 610
	ACP_tcuRcsReset                       ACP_CommandType = 620
	ACP_tcuInterrogation                  ACP_CommandType = 630
	ACP_speedalertStart                   ACP_CommandType = 710
	ACP_speedalertStop                    ACP_CommandType = 720
	ACP_flshStart                         ACP_CommandType = 750 // (DEPRECATED)
	ACP_flshStop                          ACP_CommandType = 760 // (DEPRECATED)
	ACP_sigposStart                       ACP_CommandType = 770
	ACP_contractConfigure                 ACP_CommandType = 800
	ACP_contractRemove                    ACP_CommandType = 810
	ACP_rootConfigure                     ACP_CommandType = 820
	ACP_rootRemove                        ACP_CommandType = 830
	ACP_tripcomp                          ACP_CommandType = 850 // reset tripcomp
	ACP_maintenanceConfigure              ACP_CommandType = 930
	ACP_maintenanceComputerOffset         ACP_CommandType = 931
	ACP_shorttestExecute                  ACP_CommandType = 935
	ACP_serviceactivationConfigure        ACP_CommandType = 940
	ACP_dc2ServiceactivationConfigure     ACP_CommandType = 945
	ACP_dc2RawDownload                    ACP_CommandType = 950 //(test command)
	ACP_applicationConfiguration          ACP_CommandType = 955 // (DC2+)
	ACP_dc2StartTracking                  ACP_CommandType = 960 // (test command)
	ACP_atpSequence                       ACP_CommandType = 990
	ACP_theftalarmToggleInterior          ACP_CommandType = 1000
	ACP_theftalarmToggleTow               ACP_CommandType = 1010
	ACP_theftalarmSelectInteriorTow       ACP_CommandType = 1020
	ACP_theftalarmDeselectInteriorTow     ACP_CommandType = 1030
	ACP_theftalarmStop                    ACP_CommandType = 1040
	ACP_windowOpen                        ACP_CommandType = 1100
	ACP_windowClose                       ACP_CommandType = 1110
	ACP_windowVentilate                   ACP_CommandType = 1120
	ACP_windowMove                        ACP_CommandType = 1121
	ACP_roofOpen                          ACP_CommandType = 1130
	ACP_roofClose                         ACP_CommandType = 1140
	ACP_roofLift                          ACP_CommandType = 1150
	ACP_roofMove                          ACP_CommandType = 1151
	ACP_batteryMaxsoc                     ACP_CommandType = 2000
	ACP_batteryChargeprogram              ACP_CommandType = 2010
	ACP_chargeprogramconfigure            ACP_CommandType = 2020
	ACP_onboardfencesCreate               ACP_CommandType = 2100
	ACP_onboardfencesUpdate               ACP_CommandType = 2110
	ACP_onboardfencesDelete               ACP_CommandType = 2120
	ACP_speedfencesCreate                 ACP_CommandType = 2200
	ACP_speedfencesUpdate                 ACP_CommandType = 2210
	ACP_speedfencesDelete                 ACP_CommandType = 2220
	ACP_chargingtariffsCreate             ACP_CommandType = 2300
	ACP_chargingtariffsUpdate             ACP_CommandType = 2310
	ACP_chargingtariffsDelete             ACP_CommandType = 2320
	ACP_theftalarmstart                   ACP_CommandType = 2500
	ACP_theftalarmselectinterior          ACP_CommandType = 2510
	ACP_theftalarmdeselectinterior        ACP_CommandType = 2520
	ACP_theftalarmselecttow               ACP_CommandType = 2530
	ACP_theftalarmdeselecttow             ACP_CommandType = 2540
	ACP_theftalarmselectdamagedetection   ACP_CommandType = 2550
	ACP_theftalarmdeselectdamagedetection ACP_CommandType = 2560
	ACP_theftalarmconfirmdamagedetection  ACP_CommandType = 2570
	ACP_mecall2start                      ACP_CommandType = 2600
	ACP_udxTriggerSynchronization         ACP_CommandType = 1200
	ACP_udxActiveUserProfile              ACP_CommandType = 1210
	ACP_udxResetUserData                  ACP_CommandType = 1220
	ACP_userProfSynch                     ACP_CommandType = 1230
	ACP_userDataReset                     ACP_CommandType = 1240
	ACP_profActivationSnap                ACP_CommandType = 1250
	ACP_profActivationDirect              ACP_CommandType = 1255
	ACP_softwareUpdate                    ACP_CommandType = 1260
	ACP_pushNotification                  ACP_CommandType = 1270
	ACP_mecallcommand                     ACP_CommandType = 1310
	ACP_precondStartRcs                   ACP_CommandType = 1400
	ACP_precondStopRcs                    ACP_CommandType = 1410
	ACP_precondConfigureRcs               ACP_CommandType = 1420
	ACP_tcuConfigure                      ACP_CommandType = 1430
	ACP_edisonServiceActivation           ACP_CommandType = 1431
	ACP_testSequence                      ACP_CommandType = 1432
	ACP_precondConfigureRacp              ACP_CommandType = 1433
	ACP_chargeoptConfigureRacp            ACP_CommandType = 1434
	ACP_tariffTableDownload               ACP_CommandType = 1435
	ACP_precondStartRacp                  ACP_CommandType = 1436
	ACP_precondStopRacp                   ACP_CommandType = 1437
	ACP_rootCertificateRemove             ACP_CommandType = 1438
	ACP_onRequestProbeUpload              ACP_CommandType = 1439
	ACP_rootCertificateDownload           ACP_CommandType = 1440
	ACP_contractCertificateRemove         ACP_CommandType = 1441
	ACP_contractCertificateDownload       ACP_CommandType = 1442
	ACP_probeConfigurationUpdate          ACP_CommandType = 1443
	ACP_rdiagDeleteEcu                    ACP_CommandType = 1500
	ACP_rdiagStatusReport                 ACP_CommandType = 1501
	ACP_rdiagExecution                    ACP_CommandType = 1502
	ACP_immobilizerChallenge              ACP_CommandType = 1600
	ACP_immobilizerSearchKeyline          ACP_CommandType = 1610
	ACP_immobilizerReleaseKeyline         ACP_CommandType = 1620
	ACP_immobilizerLockKeyline            ACP_CommandType = 1630
	ACP_immobilizerLockVehicle            ACP_CommandType = 1631
	ACP_immobilizerReleaseVehicle         ACP_CommandType = 1621
	ACP_setRentalSignal                   ACP_CommandType = 1700
	ACP_blackchannelDownload              ACP_CommandType = 1800
	ACP_blackchannelUpload                ACP_CommandType = 1810
	ACP_configurecsm                      ACP_CommandType = 1900
	ACP_updatevehicleinfo                 ACP_CommandType = 1901
	ACP_relaymessagetocsm                 ACP_CommandType = 1902
	ACP_relayrentalrequesttocsb           ACP_CommandType = 1903
	ACP_rtmDownloadConfig                 ACP_CommandType = 2400
	ACP_rtmReadConfig                     ACP_CommandType = 2410
	ACP_avpActivate                       ACP_CommandType = 2700
	ACP_chargecontrolconfigure            ACP_CommandType = 2800
)

// Enum value maps for ACP_CommandType.
var (
	ACP_CommandType_name = map[int32]string{
		0:    "UNKNOWNCOMMANDTYPE",
		100:  "DOORSLOCK",
		110:  "DOORSUNLOCK",
		115:  "TRUNKUNLOCK",
		116:  "FUELFLAPUNLOCK",
		117:  "CHARGEFLAPUNLOCK",
		118:  "CHARGECOUPLERUNLOCK",
		120:  "DOORSPREPARERENTAL",
		130:  "DOORSSECUREVEHICLE",
		300:  "AUXHEATSTART",
		310:  "AUXHEATSTOP",
		320:  "AUXHEATCONFIGURE",
		350:  "TEMPERATURECONFIGURE",
		360:  "WEEKPROFILECONFIGURE",
		370:  "WEEKPROFILEV2CONFIGURE",
		400:  "PRECONDSTART",
		410:  "PRECONDSTOP",
		420:  "PRECONDCONFIGURE",
		425:  "PRECONDCONFIGURESEATS",
		430:  "CHARGEOPTCONFIGURE",
		440:  "CHARGEOPTSTART",
		450:  "CHARGEOPTSTOP",
		500:  "FEEDPOI",
		510:  "FEEDFREETEXT",
		550:  "ENGINESTART",
		560:  "ENGINESTOP",
		570:  "ENGINEAVPSTART",
		600:  "TCUWAKEUP",
		610:  "TCUSWUPDATE",
		620:  "TCURCSRESET",
		630:  "TCUINTERROGATION",
		710:  "SPEEDALERTSTART",
		720:  "SPEEDALERTSTOP",
		750:  "FLSHSTART",
		760:  "FLSHSTOP",
		770:  "SIGPOSSTART",
		800:  "CONTRACTCONFIGURE",
		810:  "CONTRACTREMOVE",
		820:  "ROOTCONFIGURE",
		830:  "ROOTREMOVE",
		850:  "TRIPCOMP",
		930:  "MAINTENANCECONFIGURE",
		931:  "MAINTENANCECOMPUTEROFFSET",
		935:  "SHORTTESTEXECUTE",
		940:  "SERVICEACTIVATIONCONFIGURE",
		945:  "DC2SERVICEACTIVATIONCONFIGURE",
		950:  "DC2RAWDOWNLOAD",
		955:  "APPLICATIONCONFIGURATION",
		960:  "DC2STARTTRACKING",
		990:  "ATPSEQUENCE",
		1000: "THEFTALARMTOGGLEINTERIOR",
		1010: "THEFTALARMTOGGLETOW",
		1020: "THEFTALARMSELECTINTERIORTOW",
		1030: "THEFTALARMDESELECTINTERIORTOW",
		1040: "THEFTALARMSTOP",
		1100: "WINDOWOPEN",
		1110: "WINDOWCLOSE",
		1120: "WINDOWVENTILATE",
		1121: "WINDOWMOVE",
		1130: "ROOFOPEN",
		1140: "ROOFCLOSE",
		1150: "ROOFLIFT",
		1151: "ROOFMOVE",
		2000: "BATTERYMAXSOC",
		2010: "BATTERYCHARGEPROGRAM",
		2020: "CHARGEPROGRAMCONFIGURE",
		2100: "ONBOARDFENCESCREATE",
		2110: "ONBOARDFENCESUPDATE",
		2120: "ONBOARDFENCESDELETE",
		2200: "SPEEDFENCESCREATE",
		2210: "SPEEDFENCESUPDATE",
		2220: "SPEEDFENCESDELETE",
		2300: "CHARGINGTARIFFSCREATE",
		2310: "CHARGINGTARIFFSUPDATE",
		2320: "CHARGINGTARIFFSDELETE",
		2500: "THEFTALARMSTART",
		2510: "THEFTALARMSELECTINTERIOR",
		2520: "THEFTALARMDESELECTINTERIOR",
		2530: "THEFTALARMSELECTTOW",
		2540: "THEFTALARMDESELECTTOW",
		2550: "THEFTALARMSELECTDAMAGEDETECTION",
		2560: "THEFTALARMDESELECTDAMAGEDETECTION",
		2570: "THEFTALARMCONFIRMDAMAGEDETECTION",
		2600: "MECALL2START",
		1200: "UDXTRIGGERSYNCHRONIZATION",
		1210: "UDXACTIVEUSERPROFILE",
		1220: "UDXRESETUSERDATA",
		1230: "USERPROFSYNCH",
		1240: "USERDATARESET",
		1250: "PROFACTIVATIONSNAP",
		1255: "PROFACTIVATIONDIRECT",
		1260: "SOFTWAREUPDATE",
		1270: "PUSHNOTIFICATION",
		1310: "MECALLCOMMAND",
		1400: "PRECONDSTARTRCS",
		1410: "PRECONDSTOPRCS",
		1420: "PRECONDCONFIGURERCS",
		1430: "TCUCONFIGURE",
		1431: "EDISONSERVICEACTIVATION",
		1432: "TESTSEQUENCE",
		1433: "PRECONDCONFIGURERACP",
		1434: "CHARGEOPTCONFIGURERACP",
		1435: "TARIFFTABLEDOWNLOAD",
		1436: "PRECONDSTARTRACP",
		1437: "PRECONDSTOPRACP",
		1438: "ROOTCERTIFICATEREMOVE",
		1439: "ONREQUESTPROBEUPLOAD",
		1440: "ROOTCERTIFICATEDOWNLOAD",
		1441: "CONTRACTCERTIFICATEREMOVE",
		1442: "CONTRACTCERTIFICATEDOWNLOAD",
		1443: "PROBECONFIGURATIONUPDATE",
		1500: "RDIAGDELETEECU",
		1501: "RDIAGSTATUSREPORT",
		1502: "RDIAGEXECUTION",
		1600: "IMMOBILIZERCHALLENGE",
		1610: "IMMOBILIZERSEARCHKEYLINE",
		1620: "IMMOBILIZERRELEASEKEYLINE",
		1630: "IMMOBILIZERLOCKKEYLINE",
		1631: "IMMOBILIZERLOCKVEHICLE",
		1621: "IMMOBILIZERRELEASEVEHICLE",
		1700: "SETRENTALSIGNAL",
		1800: "BLACKCHANNELDOWNLOAD",
		1810: "BLACKCHANNELUPLOAD",
		1900: "CONFIGURECSM",
		1901: "UPDATEVEHICLEINFO",
		1902: "RELAYMESSAGETOCSM",
		1903: "RELAYRENTALREQUESTTOCSB",
		2400: "RTMDOWNLOADCONFIG",
		2410: "RTMREADCONFIG",
		2700: "AVPACTIVATE",
		2800: "CHARGECONTROLCONFIGURE",
		// Duplicate value: 0: "unknownCommandType",
		// Duplicate value: 100: "doorsLock",
		// Duplicate value: 110: "doorsUnlock",
		// Duplicate value: 115: "trunkUnlock",
		// Duplicate value: 116: "fuelflapUnlock",
		// Duplicate value: 117: "chargeflapUnlock",
		// Duplicate value: 118: "chargecouplerUnlock",
		// Duplicate value: 120: "doorsPrepareRental",
		// Duplicate value: 130: "doorsSecureVehicle",
		// Duplicate value: 300: "auxheatStart",
		// Duplicate value: 310: "auxheatStop",
		// Duplicate value: 320: "auxheatConfigure",
		// Duplicate value: 350: "temperatureConfigure",
		// Duplicate value: 360: "weekprofileConfigure",
		// Duplicate value: 370: "weekprofileV2Configure",
		// Duplicate value: 400: "precondStart",
		// Duplicate value: 410: "precondStop",
		// Duplicate value: 420: "precondConfigure",
		// Duplicate value: 425: "precondConfigureSeats",
		// Duplicate value: 430: "chargeoptConfigure",
		// Duplicate value: 440: "chargeoptStart",
		// Duplicate value: 450: "chargeoptStop",
		// Duplicate value: 500: "feedPoi",
		// Duplicate value: 510: "feedFreetext",
		// Duplicate value: 550: "engineStart",
		// Duplicate value: 560: "engineStop",
		// Duplicate value: 570: "engineAvpstart",
		// Duplicate value: 600: "tcuWakeup",
		// Duplicate value: 610: "tcuSwUpdate",
		// Duplicate value: 620: "tcuRcsReset",
		// Duplicate value: 630: "tcuInterrogation",
		// Duplicate value: 710: "speedalertStart",
		// Duplicate value: 720: "speedalertStop",
		// Duplicate value: 750: "flshStart",
		// Duplicate value: 760: "flshStop",
		// Duplicate value: 770: "sigposStart",
		// Duplicate value: 800: "contractConfigure",
		// Duplicate value: 810: "contractRemove",
		// Duplicate value: 820: "rootConfigure",
		// Duplicate value: 830: "rootRemove",
		// Duplicate value: 850: "tripcomp",
		// Duplicate value: 930: "maintenanceConfigure",
		// Duplicate value: 931: "maintenanceComputerOffset",
		// Duplicate value: 935: "shorttestExecute",
		// Duplicate value: 940: "serviceactivationConfigure",
		// Duplicate value: 945: "dc2ServiceactivationConfigure",
		// Duplicate value: 950: "dc2RawDownload",
		// Duplicate value: 955: "applicationConfiguration",
		// Duplicate value: 960: "dc2StartTracking",
		// Duplicate value: 990: "atpSequence",
		// Duplicate value: 1000: "theftalarmToggleInterior",
		// Duplicate value: 1010: "theftalarmToggleTow",
		// Duplicate value: 1020: "theftalarmSelectInteriorTow",
		// Duplicate value: 1030: "theftalarmDeselectInteriorTow",
		// Duplicate value: 1040: "theftalarmStop",
		// Duplicate value: 1100: "windowOpen",
		// Duplicate value: 1110: "windowClose",
		// Duplicate value: 1120: "windowVentilate",
		// Duplicate value: 1121: "windowMove",
		// Duplicate value: 1130: "roofOpen",
		// Duplicate value: 1140: "roofClose",
		// Duplicate value: 1150: "roofLift",
		// Duplicate value: 1151: "roofMove",
		// Duplicate value: 2000: "batteryMaxsoc",
		// Duplicate value: 2010: "batteryChargeprogram",
		// Duplicate value: 2020: "chargeprogramconfigure",
		// Duplicate value: 2100: "onboardfencesCreate",
		// Duplicate value: 2110: "onboardfencesUpdate",
		// Duplicate value: 2120: "onboardfencesDelete",
		// Duplicate value: 2200: "speedfencesCreate",
		// Duplicate value: 2210: "speedfencesUpdate",
		// Duplicate value: 2220: "speedfencesDelete",
		// Duplicate value: 2300: "chargingtariffsCreate",
		// Duplicate value: 2310: "chargingtariffsUpdate",
		// Duplicate value: 2320: "chargingtariffsDelete",
		// Duplicate value: 2500: "theftalarmstart",
		// Duplicate value: 2510: "theftalarmselectinterior",
		// Duplicate value: 2520: "theftalarmdeselectinterior",
		// Duplicate value: 2530: "theftalarmselecttow",
		// Duplicate value: 2540: "theftalarmdeselecttow",
		// Duplicate value: 2550: "theftalarmselectdamagedetection",
		// Duplicate value: 2560: "theftalarmdeselectdamagedetection",
		// Duplicate value: 2570: "theftalarmconfirmdamagedetection",
		// Duplicate value: 2600: "mecall2start",
		// Duplicate value: 1200: "udxTriggerSynchronization",
		// Duplicate value: 1210: "udxActiveUserProfile",
		// Duplicate value: 1220: "udxResetUserData",
		// Duplicate value: 1230: "userProfSynch",
		// Duplicate value: 1240: "userDataReset",
		// Duplicate value: 1250: "profActivationSnap",
		// Duplicate value: 1255: "profActivationDirect",
		// Duplicate value: 1260: "softwareUpdate",
		// Duplicate value: 1270: "pushNotification",
		// Duplicate value: 1310: "mecallcommand",
		// Duplicate value: 1400: "precondStartRcs",
		// Duplicate value: 1410: "precondStopRcs",
		// Duplicate value: 1420: "precondConfigureRcs",
		// Duplicate value: 1430: "tcuConfigure",
		// Duplicate value: 1431: "edisonServiceActivation",
		// Duplicate value: 1432: "testSequence",
		// Duplicate value: 1433: "precondConfigureRacp",
		// Duplicate value: 1434: "chargeoptConfigureRacp",
		// Duplicate value: 1435: "tariffTableDownload",
		// Duplicate value: 1436: "precondStartRacp",
		// Duplicate value: 1437: "precondStopRacp",
		// Duplicate value: 1438: "rootCertificateRemove",
		// Duplicate value: 1439: "onRequestProbeUpload",
		// Duplicate value: 1440: "rootCertificateDownload",
		// Duplicate value: 1441: "contractCertificateRemove",
		// Duplicate value: 1442: "contractCertificateDownload",
		// Duplicate value: 1443: "probeConfigurationUpdate",
		// Duplicate value: 1500: "rdiagDeleteEcu",
		// Duplicate value: 1501: "rdiagStatusReport",
		// Duplicate value: 1502: "rdiagExecution",
		// Duplicate value: 1600: "immobilizerChallenge",
		// Duplicate value: 1610: "immobilizerSearchKeyline",
		// Duplicate value: 1620: "immobilizerReleaseKeyline",
		// Duplicate value: 1630: "immobilizerLockKeyline",
		// Duplicate value: 1631: "immobilizerLockVehicle",
		// Duplicate value: 1621: "immobilizerReleaseVehicle",
		// Duplicate value: 1700: "setRentalSignal",
		// Duplicate value: 1800: "blackchannelDownload",
		// Duplicate value: 1810: "blackchannelUpload",
		// Duplicate value: 1900: "configurecsm",
		// Duplicate value: 1901: "updatevehicleinfo",
		// Duplicate value: 1902: "relaymessagetocsm",
		// Duplicate value: 1903: "relayrentalrequesttocsb",
		// Duplicate value: 2400: "rtmDownloadConfig",
		// Duplicate value: 2410: "rtmReadConfig",
		// Duplicate value: 2700: "avpActivate",
		// Duplicate value: 2800: "chargecontrolconfigure",
	}
	ACP_CommandType_value = map[string]int32{
		"UNKNOWNCOMMANDTYPE":                0,
		"DOORSLOCK":                         100,
		"DOORSUNLOCK":                       110,
		"TRUNKUNLOCK":                       115,
		"FUELFLAPUNLOCK":                    116,
		"CHARGEFLAPUNLOCK":                  117,
		"CHARGECOUPLERUNLOCK":               118,
		"DOORSPREPARERENTAL":                120,
		"DOORSSECUREVEHICLE":                130,
		"AUXHEATSTART":                      300,
		"AUXHEATSTOP":                       310,
		"AUXHEATCONFIGURE":                  320,
		"TEMPERATURECONFIGURE":              350,
		"WEEKPROFILECONFIGURE":              360,
		"WEEKPROFILEV2CONFIGURE":            370,
		"PRECONDSTART":                      400,
		"PRECONDSTOP":                       410,
		"PRECONDCONFIGURE":                  420,
		"PRECONDCONFIGURESEATS":             425,
		"CHARGEOPTCONFIGURE":                430,
		"CHARGEOPTSTART":                    440,
		"CHARGEOPTSTOP":                     450,
		"FEEDPOI":                           500,
		"FEEDFREETEXT":                      510,
		"ENGINESTART":                       550,
		"ENGINESTOP":                        560,
		"ENGINEAVPSTART":                    570,
		"TCUWAKEUP":                         600,
		"TCUSWUPDATE":                       610,
		"TCURCSRESET":                       620,
		"TCUINTERROGATION":                  630,
		"SPEEDALERTSTART":                   710,
		"SPEEDALERTSTOP":                    720,
		"FLSHSTART":                         750,
		"FLSHSTOP":                          760,
		"SIGPOSSTART":                       770,
		"CONTRACTCONFIGURE":                 800,
		"CONTRACTREMOVE":                    810,
		"ROOTCONFIGURE":                     820,
		"ROOTREMOVE":                        830,
		"TRIPCOMP":                          850,
		"MAINTENANCECONFIGURE":              930,
		"MAINTENANCECOMPUTEROFFSET":         931,
		"SHORTTESTEXECUTE":                  935,
		"SERVICEACTIVATIONCONFIGURE":        940,
		"DC2SERVICEACTIVATIONCONFIGURE":     945,
		"DC2RAWDOWNLOAD":                    950,
		"APPLICATIONCONFIGURATION":          955,
		"DC2STARTTRACKING":                  960,
		"ATPSEQUENCE":                       990,
		"THEFTALARMTOGGLEINTERIOR":          1000,
		"THEFTALARMTOGGLETOW":               1010,
		"THEFTALARMSELECTINTERIORTOW":       1020,
		"THEFTALARMDESELECTINTERIORTOW":     1030,
		"THEFTALARMSTOP":                    1040,
		"WINDOWOPEN":                        1100,
		"WINDOWCLOSE":                       1110,
		"WINDOWVENTILATE":                   1120,
		"WINDOWMOVE":                        1121,
		"ROOFOPEN":                          1130,
		"ROOFCLOSE":                         1140,
		"ROOFLIFT":                          1150,
		"ROOFMOVE":                          1151,
		"BATTERYMAXSOC":                     2000,
		"BATTERYCHARGEPROGRAM":              2010,
		"CHARGEPROGRAMCONFIGURE":            2020,
		"ONBOARDFENCESCREATE":               2100,
		"ONBOARDFENCESUPDATE":               2110,
		"ONBOARDFENCESDELETE":               2120,
		"SPEEDFENCESCREATE":                 2200,
		"SPEEDFENCESUPDATE":                 2210,
		"SPEEDFENCESDELETE":                 2220,
		"CHARGINGTARIFFSCREATE":             2300,
		"CHARGINGTARIFFSUPDATE":             2310,
		"CHARGINGTARIFFSDELETE":             2320,
		"THEFTALARMSTART":                   2500,
		"THEFTALARMSELECTINTERIOR":          2510,
		"THEFTALARMDESELECTINTERIOR":        2520,
		"THEFTALARMSELECTTOW":               2530,
		"THEFTALARMDESELECTTOW":             2540,
		"THEFTALARMSELECTDAMAGEDETECTION":   2550,
		"THEFTALARMDESELECTDAMAGEDETECTION": 2560,
		"THEFTALARMCONFIRMDAMAGEDETECTION":  2570,
		"MECALL2START":                      2600,
		"UDXTRIGGERSYNCHRONIZATION":         1200,
		"UDXACTIVEUSERPROFILE":              1210,
		"UDXRESETUSERDATA":                  1220,
		"USERPROFSYNCH":                     1230,
		"USERDATARESET":                     1240,
		"PROFACTIVATIONSNAP":                1250,
		"PROFACTIVATIONDIRECT":              1255,
		"SOFTWAREUPDATE":                    1260,
		"PUSHNOTIFICATION":                  1270,
		"MECALLCOMMAND":                     1310,
		"PRECONDSTARTRCS":                   1400,
		"PRECONDSTOPRCS":                    1410,
		"PRECONDCONFIGURERCS":               1420,
		"TCUCONFIGURE":                      1430,
		"EDISONSERVICEACTIVATION":           1431,
		"TESTSEQUENCE":                      1432,
		"PRECONDCONFIGURERACP":              1433,
		"CHARGEOPTCONFIGURERACP":            1434,
		"TARIFFTABLEDOWNLOAD":               1435,
		"PRECONDSTARTRACP":                  1436,
		"PRECONDSTOPRACP":                   1437,
		"ROOTCERTIFICATEREMOVE":             1438,
		"ONREQUESTPROBEUPLOAD":              1439,
		"ROOTCERTIFICATEDOWNLOAD":           1440,
		"CONTRACTCERTIFICATEREMOVE":         1441,
		"CONTRACTCERTIFICATEDOWNLOAD":       1442,
		"PROBECONFIGURATIONUPDATE":          1443,
		"RDIAGDELETEECU":                    1500,
		"RDIAGSTATUSREPORT":                 1501,
		"RDIAGEXECUTION":                    1502,
		"IMMOBILIZERCHALLENGE":              1600,
		"IMMOBILIZERSEARCHKEYLINE":          1610,
		"IMMOBILIZERRELEASEKEYLINE":         1620,
		"IMMOBILIZERLOCKKEYLINE":            1630,
		"IMMOBILIZERLOCKVEHICLE":            1631,
		"IMMOBILIZERRELEASEVEHICLE":         1621,
		"SETRENTALSIGNAL":                   1700,
		"BLACKCHANNELDOWNLOAD":              1800,
		"BLACKCHANNELUPLOAD":                1810,
		"CONFIGURECSM":                      1900,
		"UPDATEVEHICLEINFO":                 1901,
		"RELAYMESSAGETOCSM":                 1902,
		"RELAYRENTALREQUESTTOCSB":           1903,
		"RTMDOWNLOADCONFIG":                 2400,
		"RTMREADCONFIG":                     2410,
		"AVPACTIVATE":                       2700,
		"CHARGECONTROLCONFIGURE":            2800,
		"unknownCommandType":                0,
		"doorsLock":                         100,
		"doorsUnlock":                       110,
		"trunkUnlock":                       115,
		"fuelflapUnlock":                    116,
		"chargeflapUnlock":                  117,
		"chargecouplerUnlock":               118,
		"doorsPrepareRental":                120,
		"doorsSecureVehicle":                130,
		"auxheatStart":                      300,
		"auxheatStop":                       310,
		"auxheatConfigure":                  320,
		"temperatureConfigure":              350,
		"weekprofileConfigure":              360,
		"weekprofileV2Configure":            370,
		"precondStart":                      400,
		"precondStop":                       410,
		"precondConfigure":                  420,
		"precondConfigureSeats":             425,
		"chargeoptConfigure":                430,
		"chargeoptStart":                    440,
		"chargeoptStop":                     450,
		"feedPoi":                           500,
		"feedFreetext":                      510,
		"engineStart":                       550,
		"engineStop":                        560,
		"engineAvpstart":                    570,
		"tcuWakeup":                         600,
		"tcuSwUpdate":                       610,
		"tcuRcsReset":                       620,
		"tcuInterrogation":                  630,
		"speedalertStart":                   710,
		"speedalertStop":                    720,
		"flshStart":                         750,
		"flshStop":                          760,
		"sigposStart":                       770,
		"contractConfigure":                 800,
		"contractRemove":                    810,
		"rootConfigure":                     820,
		"rootRemove":                        830,
		"tripcomp":                          850,
		"maintenanceConfigure":              930,
		"maintenanceComputerOffset":         931,
		"shorttestExecute":                  935,
		"serviceactivationConfigure":        940,
		"dc2ServiceactivationConfigure":     945,
		"dc2RawDownload":                    950,
		"applicationConfiguration":          955,
		"dc2StartTracking":                  960,
		"atpSequence":                       990,
		"theftalarmToggleInterior":          1000,
		"theftalarmToggleTow":               1010,
		"theftalarmSelectInteriorTow":       1020,
		"theftalarmDeselectInteriorTow":     1030,
		"theftalarmStop":                    1040,
		"windowOpen":                        1100,
		"windowClose":                       1110,
		"windowVentilate":                   1120,
		"windowMove":                        1121,
		"roofOpen":                          1130,
		"roofClose":                         1140,
		"roofLift":                          1150,
		"roofMove":                          1151,
		"batteryMaxsoc":                     2000,
		"batteryChargeprogram":              2010,
		"chargeprogramconfigure":            2020,
		"onboardfencesCreate":               2100,
		"onboardfencesUpdate":               2110,
		"onboardfencesDelete":               2120,
		"speedfencesCreate":                 2200,
		"speedfencesUpdate":                 2210,
		"speedfencesDelete":                 2220,
		"chargingtariffsCreate":             2300,
		"chargingtariffsUpdate":             2310,
		"chargingtariffsDelete":             2320,
		"theftalarmstart":                   2500,
		"theftalarmselectinterior":          2510,
		"theftalarmdeselectinterior":        2520,
		"theftalarmselecttow":               2530,
		"theftalarmdeselecttow":             2540,
		"theftalarmselectdamagedetection":   2550,
		"theftalarmdeselectdamagedetection": 2560,
		"theftalarmconfirmdamagedetection":  2570,
		"mecall2start":                      2600,
		"udxTriggerSynchronization":         1200,
		"udxActiveUserProfile":              1210,
		"udxResetUserData":                  1220,
		"userProfSynch":                     1230,
		"userDataReset":                     1240,
		"profActivationSnap":                1250,
		"profActivationDirect":              1255,
		"softwareUpdate":                    1260,
		"pushNotification":                  1270,
		"mecallcommand":                     1310,
		"precondStartRcs":                   1400,
		"precondStopRcs":                    1410,
		"precondConfigureRcs":               1420,
		"tcuConfigure":                      1430,
		"edisonServiceActivation":           1431,
		"testSequence":                      1432,
		"precondConfigureRacp":              1433,
		"chargeoptConfigureRacp":            1434,
		"tariffTableDownload":               1435,
		"precondStartRacp":                  1436,
		"precondStopRacp":                   1437,
		"rootCertificateRemove":             1438,
		"onRequestProbeUpload":              1439,
		"rootCertificateDownload":           1440,
		"contractCertificateRemove":         1441,
		"contractCertificateDownload":       1442,
		"probeConfigurationUpdate":          1443,
		"rdiagDeleteEcu":                    1500,
		"rdiagStatusReport":                 1501,
		"rdiagExecution":                    1502,
		"immobilizerChallenge":              1600,
		"immobilizerSearchKeyline":          1610,
		"immobilizerReleaseKeyline":         1620,
		"immobilizerLockKeyline":            1630,
		"immobilizerLockVehicle":            1631,
		"immobilizerReleaseVehicle":         1621,
		"setRentalSignal":                   1700,
		"blackchannelDownload":              1800,
		"blackchannelUpload":                1810,
		"configurecsm":                      1900,
		"updatevehicleinfo":                 1901,
		"relaymessagetocsm":                 1902,
		"relayrentalrequesttocsb":           1903,
		"rtmDownloadConfig":                 2400,
		"rtmReadConfig":                     2410,
		"avpActivate":                       2700,
		"chargecontrolconfigure":            2800,
	}
)

func (x ACP_CommandType) Enum() *ACP_CommandType {
	p := new(ACP_CommandType)
	*p = x
	return p
}

func (x ACP_CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ACP_CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_acp_proto_enumTypes[5].Descriptor()
}

func (ACP_CommandType) Type() protoreflect.EnumType {
	return &file_acp_proto_enumTypes[5]
}

func (x ACP_CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ACP_CommandType.Descriptor instead.
func (ACP_CommandType) EnumDescriptor() ([]byte, []int) {
	return file_acp_proto_rawDescGZIP(), []int{2, 0}
}

type VVA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VVA) Reset() {
	*x = VVA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VVA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VVA) ProtoMessage() {}

func (x *VVA) ProtoReflect() protoreflect.Message {
	mi := &file_acp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VVA.ProtoReflect.Descriptor instead.
func (*VVA) Descriptor() ([]byte, []int) {
	return file_acp_proto_rawDescGZIP(), []int{0}
}

type VehicleAPI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VehicleAPI) Reset() {
	*x = VehicleAPI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAPI) ProtoMessage() {}

func (x *VehicleAPI) ProtoReflect() protoreflect.Message {
	mi := &file_acp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAPI.ProtoReflect.Descriptor instead.
func (*VehicleAPI) Descriptor() ([]byte, []int) {
	return file_acp_proto_rawDescGZIP(), []int{1}
}

type ACP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ACP) Reset() {
	*x = ACP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACP) ProtoMessage() {}

func (x *ACP) ProtoReflect() protoreflect.Message {
	mi := &file_acp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACP.ProtoReflect.Descriptor instead.
func (*ACP) Descriptor() ([]byte, []int) {
	return file_acp_proto_rawDescGZIP(), []int{2}
}

var File_acp_proto protoreflect.FileDescriptor

var file_acp_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x63, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0a, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5,
	0x02, 0x0a, 0x03, 0x56, 0x56, 0x41, 0x22, 0x76, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0xf2, 0x07, 0x12,
	0x0d, 0x0a, 0x08, 0x45, 0x4e, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0xf8, 0x07, 0x12, 0x0f,
	0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0xf4, 0x07, 0x12,
	0x0e, 0x0a, 0x09, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0xf9, 0x07, 0x12,
	0x0d, 0x0a, 0x08, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0xfa, 0x07, 0x22, 0xa5,
	0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x4b, 0x4e, 0x57, 0x4f, 0x4e, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0xe8, 0x07, 0x12, 0x0d, 0x0a,
	0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0xe9, 0x07, 0x12, 0x0d, 0x0a, 0x08,
	0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0xea, 0x07, 0x12, 0x0e, 0x0a, 0x09, 0x54,
	0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x10, 0xeb, 0x07, 0x12, 0x0c, 0x0a, 0x07, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0xf3, 0x07, 0x12, 0x0b, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0xf5, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x4f, 0x56, 0x45, 0x52, 0x57, 0x52,
	0x49, 0x54, 0x54, 0x45, 0x4e, 0x10, 0xf6, 0x07, 0x12, 0x0c, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45,
	0x4f, 0x55, 0x54, 0x10, 0xf7, 0x07, 0x22, 0x8f, 0x0b, 0x0a, 0x0a, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x41, 0x50, 0x49, 0x22, 0x7e, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4e, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x46,
	0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0x53, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x41, 0x4c, 0x55,
	0x45, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x41,
	0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x22, 0xab, 0x09, 0x0a, 0x09, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x51, 0x55, 0x45, 0x55, 0x45, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x4f, 0x4f, 0x52, 0x53, 0x10, 0x0a,
	0x12, 0x0b, 0x0a, 0x07, 0x41, 0x55, 0x58, 0x48, 0x45, 0x41, 0x54, 0x10, 0x0b, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x48,
	0x41, 0x52, 0x47, 0x45, 0x4f, 0x50, 0x54, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x49,
	0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x0e, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43,
	0x55, 0x10, 0x0f, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x45, 0x45, 0x44, 0x10, 0x10, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x11, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x54, 0x50, 0x10, 0x12, 0x12, 0x0e, 0x0a,
	0x0a, 0x41, 0x53, 0x53, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x13, 0x12, 0x08, 0x0a,
	0x04, 0x52, 0x41, 0x43, 0x50, 0x10, 0x14, 0x12, 0x0f, 0x0a, 0x0b, 0x57, 0x45, 0x45, 0x4b, 0x50,
	0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x4d, 0x4f,
	0x54, 0x45, 0x44, 0x49, 0x41, 0x47, 0x4e, 0x4f, 0x53, 0x49, 0x53, 0x10, 0x16, 0x12, 0x08, 0x0a,
	0x04, 0x46, 0x4c, 0x53, 0x48, 0x10, 0x17, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x45, 0x4d, 0x50, 0x45,
	0x52, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x18, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52, 0x49, 0x50,
	0x43, 0x4f, 0x4d, 0x50, 0x10, 0x19, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45,
	0x10, 0x1a, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x48, 0x45, 0x46, 0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d,
	0x10, 0x1b, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x1c, 0x12, 0x0c,
	0x0a, 0x08, 0x48, 0x45, 0x41, 0x44, 0x55, 0x4e, 0x49, 0x54, 0x10, 0x1d, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x1f, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4d, 0x4d, 0x4f,
	0x42, 0x49, 0x4c, 0x49, 0x5a, 0x45, 0x52, 0x10, 0x20, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x4e,
	0x54, 0x41, 0x4c, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x10, 0x21, 0x12, 0x07, 0x0a, 0x03, 0x42,
	0x43, 0x46, 0x10, 0x22, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4c, 0x55, 0x47, 0x41, 0x4e, 0x44, 0x43,
	0x48, 0x41, 0x52, 0x47, 0x45, 0x10, 0x23, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x52, 0x53, 0x48,
	0x41, 0x52, 0x49, 0x4e, 0x47, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x24, 0x12, 0x0b, 0x0a,
	0x07, 0x42, 0x41, 0x54, 0x54, 0x45, 0x52, 0x59, 0x10, 0x25, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x4e,
	0x42, 0x4f, 0x41, 0x52, 0x44, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x53, 0x10, 0x26, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x50, 0x45, 0x45, 0x44, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x53, 0x10, 0x27, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x47, 0x54, 0x41, 0x52, 0x49, 0x46, 0x46,
	0x53, 0x10, 0x28, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x54, 0x4d, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x10, 0x29, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43,
	0x45, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x52, 0x10, 0x2a, 0x12, 0x0b, 0x0a, 0x07, 0x4d,
	0x45, 0x43, 0x41, 0x4c, 0x4c, 0x32, 0x10, 0x2b, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x55, 0x54, 0x4f,
	0x4d, 0x41, 0x54, 0x45, 0x44, 0x56, 0x41, 0x4c, 0x45, 0x54, 0x50, 0x41, 0x52, 0x4b, 0x49, 0x4e,
	0x47, 0x10, 0x2c, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x43, 0x4f, 0x4e,
	0x54, 0x52, 0x4f, 0x4c, 0x10, 0x2d, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x50, 0x45, 0x45, 0x44, 0x41,
	0x4c, 0x45, 0x52, 0x54, 0x10, 0x2e, 0x12, 0x1b, 0x0a, 0x17, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x10, 0x0a, 0x12, 0x0b,
	0x0a, 0x07, 0x61, 0x75, 0x78, 0x68, 0x65, 0x61, 0x74, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x70,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x6f, 0x70, 0x74, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x0e, 0x12, 0x07, 0x0a, 0x03, 0x74, 0x63, 0x75, 0x10,
	0x0f, 0x12, 0x08, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x10, 0x10, 0x12, 0x15, 0x0a, 0x11, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x11, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x74, 0x70, 0x10, 0x12, 0x12, 0x0e, 0x0a, 0x0a, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x13, 0x12, 0x08, 0x0a, 0x04, 0x72,
	0x61, 0x63, 0x70, 0x10, 0x14, 0x12, 0x0f, 0x0a, 0x0b, 0x77, 0x65, 0x65, 0x6b, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x10, 0x16, 0x12, 0x08, 0x0a, 0x04, 0x66,
	0x6c, 0x73, 0x68, 0x10, 0x17, 0x12, 0x0f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x10, 0x18, 0x12, 0x0c, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x70, 0x63, 0x6f,
	0x6d, 0x70, 0x10, 0x19, 0x12, 0x0a, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x10, 0x1a,
	0x12, 0x0e, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x66, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x10, 0x1b,
	0x12, 0x0a, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x10, 0x1c, 0x12, 0x0c, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x75, 0x6e, 0x69, 0x74, 0x10, 0x1d, 0x12, 0x0a, 0x0a, 0x06, 0x6d, 0x65,
	0x63, 0x61, 0x6c, 0x6c, 0x10, 0x1f, 0x12, 0x0f, 0x0a, 0x0b, 0x69, 0x6d, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x69, 0x7a, 0x65, 0x72, 0x10, 0x20, 0x12, 0x10, 0x0a, 0x0c, 0x72, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x10, 0x21, 0x12, 0x07, 0x0a, 0x03, 0x62, 0x63, 0x66,
	0x10, 0x22, 0x12, 0x11, 0x0a, 0x0d, 0x70, 0x6c, 0x75, 0x67, 0x61, 0x6e, 0x64, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x10, 0x23, 0x12, 0x14, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x10, 0x24, 0x12, 0x0b, 0x0a, 0x07, 0x62,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x10, 0x25, 0x12, 0x11, 0x0a, 0x0d, 0x6f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x10, 0x26, 0x12, 0x0f, 0x0a, 0x0b, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x10, 0x27, 0x12, 0x13, 0x0a, 0x0f,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x10,
	0x28, 0x12, 0x0d, 0x0a, 0x09, 0x72, 0x74, 0x6d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x29,
	0x12, 0x17, 0x0a, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x10, 0x2a, 0x12, 0x0b, 0x0a, 0x07, 0x6d, 0x65, 0x63,
	0x61, 0x6c, 0x6c, 0x32, 0x10, 0x2b, 0x12, 0x19, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x76, 0x61, 0x6c, 0x65, 0x74, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x10,
	0x2c, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x10, 0x2d, 0x12, 0x0e, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x65, 0x64, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x10, 0x2e, 0x1a, 0x02, 0x10, 0x01, 0x22, 0xa9, 0x31, 0x0a, 0x03, 0x41, 0x43, 0x50,
	0x22, 0xa1, 0x31, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x43, 0x4f, 0x4d, 0x4d, 0x41,
	0x4e, 0x44, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x4f, 0x4f, 0x52,
	0x53, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x4f, 0x4f, 0x52, 0x53,
	0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x52, 0x55, 0x4e,
	0x4b, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x55, 0x45,
	0x4c, 0x46, 0x4c, 0x41, 0x50, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x74, 0x12, 0x14, 0x0a,
	0x10, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x46, 0x4c, 0x41, 0x50, 0x55, 0x4e, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0x75, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x43, 0x4f, 0x55,
	0x50, 0x4c, 0x45, 0x52, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x76, 0x12, 0x16, 0x0a, 0x12,
	0x44, 0x4f, 0x4f, 0x52, 0x53, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x52, 0x45, 0x4e, 0x54,
	0x41, 0x4c, 0x10, 0x78, 0x12, 0x17, 0x0a, 0x12, 0x44, 0x4f, 0x4f, 0x52, 0x53, 0x53, 0x45, 0x43,
	0x55, 0x52, 0x45, 0x56, 0x45, 0x48, 0x49, 0x43, 0x4c, 0x45, 0x10, 0x82, 0x01, 0x12, 0x11, 0x0a,
	0x0c, 0x41, 0x55, 0x58, 0x48, 0x45, 0x41, 0x54, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0xac, 0x02,
	0x12, 0x10, 0x0a, 0x0b, 0x41, 0x55, 0x58, 0x48, 0x45, 0x41, 0x54, 0x53, 0x54, 0x4f, 0x50, 0x10,
	0xb6, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x41, 0x55, 0x58, 0x48, 0x45, 0x41, 0x54, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10, 0xc0, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x45, 0x4d,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x55, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52,
	0x45, 0x10, 0xde, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x57, 0x45, 0x45, 0x4b, 0x50, 0x52, 0x4f, 0x46,
	0x49, 0x4c, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10, 0xe8, 0x02, 0x12,
	0x1b, 0x0a, 0x16, 0x57, 0x45, 0x45, 0x4b, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x56, 0x32,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10, 0xf2, 0x02, 0x12, 0x11, 0x0a, 0x0c,
	0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x90, 0x03, 0x12,
	0x10, 0x0a, 0x0b, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x9a,
	0x03, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x55, 0x52, 0x45, 0x10, 0xa4, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x52, 0x45, 0x43,
	0x4f, 0x4e, 0x44, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x53, 0x45, 0x41, 0x54,
	0x53, 0x10, 0xa9, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x4f, 0x50,
	0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10, 0xae, 0x03, 0x12, 0x13, 0x0a,
	0x0e, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x4f, 0x50, 0x54, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10,
	0xb8, 0x03, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x4f, 0x50, 0x54, 0x53,
	0x54, 0x4f, 0x50, 0x10, 0xc2, 0x03, 0x12, 0x0c, 0x0a, 0x07, 0x46, 0x45, 0x45, 0x44, 0x50, 0x4f,
	0x49, 0x10, 0xf4, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x46, 0x45, 0x45, 0x44, 0x46, 0x52, 0x45, 0x45,
	0x54, 0x45, 0x58, 0x54, 0x10, 0xfe, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x45, 0x4e, 0x47, 0x49, 0x4e,
	0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0xa6, 0x04, 0x12, 0x0f, 0x0a, 0x0a, 0x45, 0x4e, 0x47,
	0x49, 0x4e, 0x45, 0x53, 0x54, 0x4f, 0x50, 0x10, 0xb0, 0x04, 0x12, 0x13, 0x0a, 0x0e, 0x45, 0x4e,
	0x47, 0x49, 0x4e, 0x45, 0x41, 0x56, 0x50, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0xba, 0x04, 0x12,
	0x0e, 0x0a, 0x09, 0x54, 0x43, 0x55, 0x57, 0x41, 0x4b, 0x45, 0x55, 0x50, 0x10, 0xd8, 0x04, 0x12,
	0x10, 0x0a, 0x0b, 0x54, 0x43, 0x55, 0x53, 0x57, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0xe2,
	0x04, 0x12, 0x10, 0x0a, 0x0b, 0x54, 0x43, 0x55, 0x52, 0x43, 0x53, 0x52, 0x45, 0x53, 0x45, 0x54,
	0x10, 0xec, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x43, 0x55, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x52,
	0x4f, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xf6, 0x04, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x50,
	0x45, 0x45, 0x44, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0xc6, 0x05,
	0x12, 0x13, 0x0a, 0x0e, 0x53, 0x50, 0x45, 0x45, 0x44, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x53, 0x54,
	0x4f, 0x50, 0x10, 0xd0, 0x05, 0x12, 0x0e, 0x0a, 0x09, 0x46, 0x4c, 0x53, 0x48, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x10, 0xee, 0x05, 0x12, 0x0d, 0x0a, 0x08, 0x46, 0x4c, 0x53, 0x48, 0x53, 0x54, 0x4f,
	0x50, 0x10, 0xf8, 0x05, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x49, 0x47, 0x50, 0x4f, 0x53, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x10, 0x82, 0x06, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41,
	0x43, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10, 0xa0, 0x06, 0x12, 0x13,
	0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x10, 0xaa, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x52, 0x4f, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x55, 0x52, 0x45, 0x10, 0xb4, 0x06, 0x12, 0x0f, 0x0a, 0x0a, 0x52, 0x4f, 0x4f, 0x54, 0x52,
	0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0xbe, 0x06, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x52, 0x49, 0x50,
	0x43, 0x4f, 0x4d, 0x50, 0x10, 0xd2, 0x06, 0x12, 0x19, 0x0a, 0x14, 0x4d, 0x41, 0x49, 0x4e, 0x54,
	0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10,
	0xa2, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43,
	0x45, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x52, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x10,
	0xa3, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x54, 0x45, 0x53, 0x54, 0x45,
	0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x10, 0xa7, 0x07, 0x12, 0x1f, 0x0a, 0x1a, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10, 0xac, 0x07, 0x12, 0x22, 0x0a, 0x1d, 0x44, 0x43,
	0x32, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10, 0xb1, 0x07, 0x12, 0x13,
	0x0a, 0x0e, 0x44, 0x43, 0x32, 0x52, 0x41, 0x57, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44,
	0x10, 0xb6, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0xbb, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x44, 0x43, 0x32, 0x53, 0x54, 0x41, 0x52, 0x54, 0x54, 0x52,
	0x41, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0xc0, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x41, 0x54, 0x50,
	0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x10, 0xde, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x54,
	0x48, 0x45, 0x46, 0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x49, 0x4f, 0x52, 0x10, 0xe8, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x48,
	0x45, 0x46, 0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x54, 0x4f,
	0x57, 0x10, 0xf2, 0x07, 0x12, 0x20, 0x0a, 0x1b, 0x54, 0x48, 0x45, 0x46, 0x54, 0x41, 0x4c, 0x41,
	0x52, 0x4d, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x49, 0x4f, 0x52,
	0x54, 0x4f, 0x57, 0x10, 0xfc, 0x07, 0x12, 0x22, 0x0a, 0x1d, 0x54, 0x48, 0x45, 0x46, 0x54, 0x41,
	0x4c, 0x41, 0x52, 0x4d, 0x44, 0x45, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x49, 0x4f, 0x52, 0x54, 0x4f, 0x57, 0x10, 0x86, 0x08, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x48,
	0x45, 0x46, 0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x90, 0x08, 0x12,
	0x0f, 0x0a, 0x0a, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0xcc, 0x08,
	0x12, 0x10, 0x0a, 0x0b, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10,
	0xd6, 0x08, 0x12, 0x14, 0x0a, 0x0f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x56, 0x45, 0x4e, 0x54,
	0x49, 0x4c, 0x41, 0x54, 0x45, 0x10, 0xe0, 0x08, 0x12, 0x0f, 0x0a, 0x0a, 0x57, 0x49, 0x4e, 0x44,
	0x4f, 0x57, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0xe1, 0x08, 0x12, 0x0d, 0x0a, 0x08, 0x52, 0x4f, 0x4f,
	0x46, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0xea, 0x08, 0x12, 0x0e, 0x0a, 0x09, 0x52, 0x4f, 0x4f, 0x46,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0xf4, 0x08, 0x12, 0x0d, 0x0a, 0x08, 0x52, 0x4f, 0x4f, 0x46,
	0x4c, 0x49, 0x46, 0x54, 0x10, 0xfe, 0x08, 0x12, 0x0d, 0x0a, 0x08, 0x52, 0x4f, 0x4f, 0x46, 0x4d,
	0x4f, 0x56, 0x45, 0x10, 0xff, 0x08, 0x12, 0x12, 0x0a, 0x0d, 0x42, 0x41, 0x54, 0x54, 0x45, 0x52,
	0x59, 0x4d, 0x41, 0x58, 0x53, 0x4f, 0x43, 0x10, 0xd0, 0x0f, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x41,
	0x54, 0x54, 0x45, 0x52, 0x59, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x50, 0x52, 0x4f, 0x47, 0x52,
	0x41, 0x4d, 0x10, 0xda, 0x0f, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x50,
	0x52, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10,
	0xe4, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x46, 0x45, 0x4e,
	0x43, 0x45, 0x53, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xb4, 0x10, 0x12, 0x18, 0x0a, 0x13,
	0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x53, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x10, 0xbe, 0x10, 0x12, 0x18, 0x0a, 0x13, 0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52,
	0x44, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x53, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xc8, 0x10,
	0x12, 0x16, 0x0a, 0x11, 0x53, 0x50, 0x45, 0x45, 0x44, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x53, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x98, 0x11, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x50, 0x45, 0x45,
	0x44, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x53, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0xa2, 0x11,
	0x12, 0x16, 0x0a, 0x11, 0x53, 0x50, 0x45, 0x45, 0x44, 0x46, 0x45, 0x4e, 0x43, 0x45, 0x53, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xac, 0x11, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x48, 0x41, 0x52,
	0x47, 0x49, 0x4e, 0x47, 0x54, 0x41, 0x52, 0x49, 0x46, 0x46, 0x53, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x10, 0xfc, 0x11, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x48, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x47,
	0x54, 0x41, 0x52, 0x49, 0x46, 0x46, 0x53, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x86, 0x12,
	0x12, 0x1a, 0x0a, 0x15, 0x43, 0x48, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x47, 0x54, 0x41, 0x52, 0x49,
	0x46, 0x46, 0x53, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x90, 0x12, 0x12, 0x14, 0x0a, 0x0f,
	0x54, 0x48, 0x45, 0x46, 0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10,
	0xc4, 0x13, 0x12, 0x1d, 0x0a, 0x18, 0x54, 0x48, 0x45, 0x46, 0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d,
	0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x49, 0x4f, 0x52, 0x10, 0xce,
	0x13, 0x12, 0x1f, 0x0a, 0x1a, 0x54, 0x48, 0x45, 0x46, 0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x44,
	0x45, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x49, 0x4f, 0x52, 0x10,
	0xd8, 0x13, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x48, 0x45, 0x46, 0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d,
	0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x54, 0x4f, 0x57, 0x10, 0xe2, 0x13, 0x12, 0x1a, 0x0a, 0x15,
	0x54, 0x48, 0x45, 0x46, 0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x44, 0x45, 0x53, 0x45, 0x4c, 0x45,
	0x43, 0x54, 0x54, 0x4f, 0x57, 0x10, 0xec, 0x13, 0x12, 0x24, 0x0a, 0x1f, 0x54, 0x48, 0x45, 0x46,
	0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x44, 0x41, 0x4d, 0x41,
	0x47, 0x45, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xf6, 0x13, 0x12, 0x26,
	0x0a, 0x21, 0x54, 0x48, 0x45, 0x46, 0x54, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x44, 0x45, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x80, 0x14, 0x12, 0x25, 0x0a, 0x20, 0x54, 0x48, 0x45, 0x46, 0x54, 0x41,
	0x4c, 0x41, 0x52, 0x4d, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x44, 0x41, 0x4d, 0x41, 0x47,
	0x45, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x8a, 0x14, 0x12, 0x11, 0x0a,
	0x0c, 0x4d, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x32, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0xa8, 0x14,
	0x12, 0x1e, 0x0a, 0x19, 0x55, 0x44, 0x58, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x53, 0x59,
	0x4e, 0x43, 0x48, 0x52, 0x4f, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xb0, 0x09,
	0x12, 0x19, 0x0a, 0x14, 0x55, 0x44, 0x58, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x55, 0x53, 0x45,
	0x52, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0xba, 0x09, 0x12, 0x15, 0x0a, 0x10, 0x55,
	0x44, 0x58, 0x52, 0x45, 0x53, 0x45, 0x54, 0x55, 0x53, 0x45, 0x52, 0x44, 0x41, 0x54, 0x41, 0x10,
	0xc4, 0x09, 0x12, 0x12, 0x0a, 0x0d, 0x55, 0x53, 0x45, 0x52, 0x50, 0x52, 0x4f, 0x46, 0x53, 0x59,
	0x4e, 0x43, 0x48, 0x10, 0xce, 0x09, 0x12, 0x12, 0x0a, 0x0d, 0x55, 0x53, 0x45, 0x52, 0x44, 0x41,
	0x54, 0x41, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0xd8, 0x09, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x52,
	0x4f, 0x46, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x4e, 0x41, 0x50,
	0x10, 0xe2, 0x09, 0x12, 0x19, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x46, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0xe7, 0x09, 0x12, 0x13,
	0x0a, 0x0e, 0x53, 0x4f, 0x46, 0x54, 0x57, 0x41, 0x52, 0x45, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0xec, 0x09, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x55, 0x53, 0x48, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xf6, 0x09, 0x12, 0x12, 0x0a, 0x0d, 0x4d, 0x45,
	0x43, 0x41, 0x4c, 0x4c, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x9e, 0x0a, 0x12, 0x14,
	0x0a, 0x0f, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53, 0x54, 0x41, 0x52, 0x54, 0x52, 0x43,
	0x53, 0x10, 0xf8, 0x0a, 0x12, 0x13, 0x0a, 0x0e, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53,
	0x54, 0x4f, 0x50, 0x52, 0x43, 0x53, 0x10, 0x82, 0x0b, 0x12, 0x18, 0x0a, 0x13, 0x50, 0x52, 0x45,
	0x43, 0x4f, 0x4e, 0x44, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x52, 0x43, 0x53,
	0x10, 0x8c, 0x0b, 0x12, 0x11, 0x0a, 0x0c, 0x54, 0x43, 0x55, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x55, 0x52, 0x45, 0x10, 0x96, 0x0b, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x44, 0x49, 0x53, 0x4f, 0x4e,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x97, 0x0b, 0x12, 0x11, 0x0a, 0x0c, 0x54, 0x45, 0x53, 0x54, 0x53, 0x45, 0x51, 0x55,
	0x45, 0x4e, 0x43, 0x45, 0x10, 0x98, 0x0b, 0x12, 0x19, 0x0a, 0x14, 0x50, 0x52, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x52, 0x41, 0x43, 0x50, 0x10,
	0x99, 0x0b, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x4f, 0x50, 0x54, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x52, 0x41, 0x43, 0x50, 0x10, 0x9a, 0x0b, 0x12,
	0x18, 0x0a, 0x13, 0x54, 0x41, 0x52, 0x49, 0x46, 0x46, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x4f,
	0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x9b, 0x0b, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x52, 0x45,
	0x43, 0x4f, 0x4e, 0x44, 0x53, 0x54, 0x41, 0x52, 0x54, 0x52, 0x41, 0x43, 0x50, 0x10, 0x9c, 0x0b,
	0x12, 0x14, 0x0a, 0x0f, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53, 0x54, 0x4f, 0x50, 0x52,
	0x41, 0x43, 0x50, 0x10, 0x9d, 0x0b, 0x12, 0x1a, 0x0a, 0x15, 0x52, 0x4f, 0x4f, 0x54, 0x43, 0x45,
	0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10,
	0x9e, 0x0b, 0x12, 0x19, 0x0a, 0x14, 0x4f, 0x4e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x50,
	0x52, 0x4f, 0x42, 0x45, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x9f, 0x0b, 0x12, 0x1c, 0x0a,
	0x17, 0x52, 0x4f, 0x4f, 0x54, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45,
	0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0xa0, 0x0b, 0x12, 0x1e, 0x0a, 0x19, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x45, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0xa1, 0x0b, 0x12, 0x20, 0x0a, 0x1b, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x45, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0xa2, 0x0b, 0x12, 0x1d, 0x0a,
	0x18, 0x50, 0x52, 0x4f, 0x42, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0xa3, 0x0b, 0x12, 0x13, 0x0a, 0x0e,
	0x52, 0x44, 0x49, 0x41, 0x47, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x45, 0x43, 0x55, 0x10, 0xdc,
	0x0b, 0x12, 0x16, 0x0a, 0x11, 0x52, 0x44, 0x49, 0x41, 0x47, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0xdd, 0x0b, 0x12, 0x13, 0x0a, 0x0e, 0x52, 0x44, 0x49,
	0x41, 0x47, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xde, 0x0b, 0x12, 0x19,
	0x0a, 0x14, 0x49, 0x4d, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x49, 0x5a, 0x45, 0x52, 0x43, 0x48, 0x41,
	0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x45, 0x10, 0xc0, 0x0c, 0x12, 0x1d, 0x0a, 0x18, 0x49, 0x4d, 0x4d,
	0x4f, 0x42, 0x49, 0x4c, 0x49, 0x5a, 0x45, 0x52, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x4b, 0x45,
	0x59, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0xca, 0x0c, 0x12, 0x1e, 0x0a, 0x19, 0x49, 0x4d, 0x4d, 0x4f,
	0x42, 0x49, 0x4c, 0x49, 0x5a, 0x45, 0x52, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x4b, 0x45,
	0x59, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0xd4, 0x0c, 0x12, 0x1b, 0x0a, 0x16, 0x49, 0x4d, 0x4d, 0x4f,
	0x42, 0x49, 0x4c, 0x49, 0x5a, 0x45, 0x52, 0x4c, 0x4f, 0x43, 0x4b, 0x4b, 0x45, 0x59, 0x4c, 0x49,
	0x4e, 0x45, 0x10, 0xde, 0x0c, 0x12, 0x1b, 0x0a, 0x16, 0x49, 0x4d, 0x4d, 0x4f, 0x42, 0x49, 0x4c,
	0x49, 0x5a, 0x45, 0x52, 0x4c, 0x4f, 0x43, 0x4b, 0x56, 0x45, 0x48, 0x49, 0x43, 0x4c, 0x45, 0x10,
	0xdf, 0x0c, 0x12, 0x1e, 0x0a, 0x19, 0x49, 0x4d, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x49, 0x5a, 0x45,
	0x52, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x56, 0x45, 0x48, 0x49, 0x43, 0x4c, 0x45, 0x10,
	0xd5, 0x0c, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x45, 0x54, 0x52, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x10, 0xa4, 0x0d, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x4c, 0x41, 0x43,
	0x4b, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44,
	0x10, 0x88, 0x0e, 0x12, 0x17, 0x0a, 0x12, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x92, 0x0e, 0x12, 0x11, 0x0a, 0x0c,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x43, 0x53, 0x4d, 0x10, 0xec, 0x0e, 0x12,
	0x16, 0x0a, 0x11, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x56, 0x45, 0x48, 0x49, 0x43, 0x4c, 0x45,
	0x49, 0x4e, 0x46, 0x4f, 0x10, 0xed, 0x0e, 0x12, 0x16, 0x0a, 0x11, 0x52, 0x45, 0x4c, 0x41, 0x59,
	0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x54, 0x4f, 0x43, 0x53, 0x4d, 0x10, 0xee, 0x0e, 0x12,
	0x1c, 0x0a, 0x17, 0x52, 0x45, 0x4c, 0x41, 0x59, 0x52, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x54, 0x4f, 0x43, 0x53, 0x42, 0x10, 0xef, 0x0e, 0x12, 0x16, 0x0a,
	0x11, 0x52, 0x54, 0x4d, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x10, 0xe0, 0x12, 0x12, 0x12, 0x0a, 0x0d, 0x52, 0x54, 0x4d, 0x52, 0x45, 0x41, 0x44,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0xea, 0x12, 0x12, 0x10, 0x0a, 0x0b, 0x41, 0x56, 0x50,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x8c, 0x15, 0x12, 0x1b, 0x0a, 0x16, 0x43,
	0x48, 0x41, 0x52, 0x47, 0x45, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x55, 0x52, 0x45, 0x10, 0xf0, 0x15, 0x12, 0x16, 0x0a, 0x12, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x10, 0x64, 0x12,
	0x0f, 0x0a, 0x0b, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x6e,
	0x12, 0x0f, 0x0a, 0x0b, 0x74, 0x72, 0x75, 0x6e, 0x6b, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x10,
	0x73, 0x12, 0x12, 0x0a, 0x0e, 0x66, 0x75, 0x65, 0x6c, 0x66, 0x6c, 0x61, 0x70, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x10, 0x74, 0x12, 0x14, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x66,
	0x6c, 0x61, 0x70, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x75, 0x12, 0x17, 0x0a, 0x13, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x63, 0x6f, 0x75, 0x70, 0x6c, 0x65, 0x72, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x10, 0x76, 0x12, 0x16, 0x0a, 0x12, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x10, 0x78, 0x12, 0x17, 0x0a, 0x12,
	0x64, 0x6f, 0x6f, 0x72, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x10, 0x82, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x61, 0x75, 0x78, 0x68, 0x65, 0x61, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0xac, 0x02, 0x12, 0x10, 0x0a, 0x0b, 0x61, 0x75, 0x78, 0x68,
	0x65, 0x61, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x10, 0xb6, 0x02, 0x12, 0x15, 0x0a, 0x10, 0x61, 0x75,
	0x78, 0x68, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x10, 0xc0,
	0x02, 0x12, 0x19, 0x0a, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x10, 0xde, 0x02, 0x12, 0x19, 0x0a, 0x14,
	0x77, 0x65, 0x65, 0x6b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x10, 0xe8, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x77, 0x65, 0x65, 0x6b, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x10, 0xf2, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x10, 0x90, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x10, 0x9a, 0x03, 0x12, 0x15, 0x0a, 0x10, 0x70, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x10, 0xa4, 0x03,
	0x12, 0x1a, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x53, 0x65, 0x61, 0x74, 0x73, 0x10, 0xa9, 0x03, 0x12, 0x17, 0x0a, 0x12,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x6f, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x10, 0xae, 0x03, 0x12, 0x13, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x6f,
	0x70, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0xb8, 0x03, 0x12, 0x12, 0x0a, 0x0d, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x6f, 0x70, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x10, 0xc2, 0x03, 0x12, 0x0c,
	0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x10, 0xf4, 0x03, 0x12, 0x11, 0x0a, 0x0c,
	0x66, 0x65, 0x65, 0x64, 0x46, 0x72, 0x65, 0x65, 0x74, 0x65, 0x78, 0x74, 0x10, 0xfe, 0x03, 0x12,
	0x10, 0x0a, 0x0b, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0xa6,
	0x04, 0x12, 0x0f, 0x0a, 0x0a, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x10,
	0xb0, 0x04, 0x12, 0x13, 0x0a, 0x0e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x41, 0x76, 0x70, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x10, 0xba, 0x04, 0x12, 0x0e, 0x0a, 0x09, 0x74, 0x63, 0x75, 0x57, 0x61,
	0x6b, 0x65, 0x75, 0x70, 0x10, 0xd8, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x74, 0x63, 0x75, 0x53, 0x77,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0xe2, 0x04, 0x12, 0x10, 0x0a, 0x0b, 0x74, 0x63, 0x75,
	0x52, 0x63, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x10, 0xec, 0x04, 0x12, 0x15, 0x0a, 0x10, 0x74,
	0x63, 0x75, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0xf6, 0x04, 0x12, 0x14, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0xc6, 0x05, 0x12, 0x13, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x10, 0xd0, 0x05, 0x12, 0x0e, 0x0a,
	0x09, 0x66, 0x6c, 0x73, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0xee, 0x05, 0x12, 0x0d, 0x0a,
	0x08, 0x66, 0x6c, 0x73, 0x68, 0x53, 0x74, 0x6f, 0x70, 0x10, 0xf8, 0x05, 0x12, 0x10, 0x0a, 0x0b,
	0x73, 0x69, 0x67, 0x70, 0x6f, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x82, 0x06, 0x12, 0x16,
	0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x10, 0xa0, 0x06, 0x12, 0x13, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x10, 0xaa, 0x06, 0x12, 0x12, 0x0a, 0x0d, 0x72,
	0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x10, 0xb4, 0x06, 0x12,
	0x0f, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x10, 0xbe, 0x06,
	0x12, 0x0d, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x70, 0x63, 0x6f, 0x6d, 0x70, 0x10, 0xd2, 0x06, 0x12,
	0x19, 0x0a, 0x14, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x10, 0xa2, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x10, 0xa3, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x74, 0x65, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x10, 0xa7,
	0x07, 0x12, 0x1f, 0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x10,
	0xac, 0x07, 0x12, 0x22, 0x0a, 0x1d, 0x64, 0x63, 0x32, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x10, 0xb1, 0x07, 0x12, 0x13, 0x0a, 0x0e, 0x64, 0x63, 0x32, 0x52, 0x61, 0x77,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0xb6, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xbb, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x64, 0x63,
	0x32, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0xc0,
	0x07, 0x12, 0x10, 0x0a, 0x0b, 0x61, 0x74, 0x70, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x10, 0xde, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x74, 0x68, 0x65, 0x66, 0x74, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x10,
	0xe8, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x74, 0x68, 0x65, 0x66, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x77, 0x10, 0xf2, 0x07, 0x12, 0x20, 0x0a, 0x1b,
	0x74, 0x68, 0x65, 0x66, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x54, 0x6f, 0x77, 0x10, 0xfc, 0x07, 0x12, 0x22,
	0x0a, 0x1d, 0x74, 0x68, 0x65, 0x66, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x54, 0x6f, 0x77, 0x10,
	0x86, 0x08, 0x12, 0x13, 0x0a, 0x0e, 0x74, 0x68, 0x65, 0x66, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x53, 0x74, 0x6f, 0x70, 0x10, 0x90, 0x08, 0x12, 0x0f, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0xcc, 0x08, 0x12, 0x10, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x10, 0xd6, 0x08, 0x12, 0x14, 0x0a, 0x0f, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x56, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x61, 0x74, 0x65, 0x10, 0xe0, 0x08,
	0x12, 0x0f, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0xe1,
	0x08, 0x12, 0x0d, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0xea, 0x08,
	0x12, 0x0e, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x66, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x10, 0xf4, 0x08,
	0x12, 0x0d, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x66, 0x4c, 0x69, 0x66, 0x74, 0x10, 0xfe, 0x08, 0x12,
	0x0d, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0xff, 0x08, 0x12, 0x12,
	0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x78, 0x73, 0x6f, 0x63, 0x10,
	0xd0, 0x0f, 0x12, 0x19, 0x0a, 0x14, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x10, 0xda, 0x0f, 0x12, 0x1b, 0x0a,
	0x16, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x10, 0xe4, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x6f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x10, 0xb4, 0x10, 0x12, 0x18, 0x0a, 0x13, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x66,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0xbe, 0x10, 0x12, 0x18,
	0x0a, 0x13, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0xc8, 0x10, 0x12, 0x16, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x98, 0x11,
	0x12, 0x16, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x65, 0x64, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0xa2, 0x11, 0x12, 0x16, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0xac, 0x11,
	0x12, 0x1a, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x74, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0xfc, 0x11, 0x12, 0x1a, 0x0a, 0x15,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x86, 0x12, 0x12, 0x1a, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x10, 0x90, 0x12, 0x12, 0x14, 0x0a, 0x0f, 0x74, 0x68, 0x65, 0x66, 0x74, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x10, 0xc4, 0x13, 0x12, 0x1d, 0x0a, 0x18, 0x74, 0x68,
	0x65, 0x66, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x10, 0xce, 0x13, 0x12, 0x1f, 0x0a, 0x1a, 0x74, 0x68, 0x65,
	0x66, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x64, 0x65, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x10, 0xd8, 0x13, 0x12, 0x18, 0x0a, 0x13, 0x74, 0x68,
	0x65, 0x66, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x74, 0x6f,
	0x77, 0x10, 0xe2, 0x13, 0x12, 0x1a, 0x0a, 0x15, 0x74, 0x68, 0x65, 0x66, 0x74, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x64, 0x65, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x74, 0x6f, 0x77, 0x10, 0xec, 0x13,
	0x12, 0x24, 0x0a, 0x1f, 0x74, 0x68, 0x65, 0x66, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0xf6, 0x13, 0x12, 0x26, 0x0a, 0x21, 0x74, 0x68, 0x65, 0x66, 0x74, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x64, 0x65, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x64, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x80, 0x14, 0x12, 0x25,
	0x0a, 0x20, 0x74, 0x68, 0x65, 0x66, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x8a, 0x14, 0x12, 0x11, 0x0a, 0x0c, 0x6d, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x32,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x10, 0xa8, 0x14, 0x12, 0x1e, 0x0a, 0x19, 0x75, 0x64, 0x78, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xb0, 0x09, 0x12, 0x19, 0x0a, 0x14, 0x75, 0x64, 0x78, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x10, 0xba, 0x09, 0x12, 0x15, 0x0a, 0x10, 0x75, 0x64, 0x78, 0x52, 0x65, 0x73, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x10, 0xc4, 0x09, 0x12, 0x12, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x10, 0xce, 0x09, 0x12, 0x12,
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x65, 0x74, 0x10,
	0xd8, 0x09, 0x12, 0x17, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x66, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x10, 0xe2, 0x09, 0x12, 0x19, 0x0a, 0x14, 0x70,
	0x72, 0x6f, 0x66, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x10, 0xe7, 0x09, 0x12, 0x13, 0x0a, 0x0e, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0xec, 0x09, 0x12, 0x15, 0x0a, 0x10, 0x70,
	0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0xf6, 0x09, 0x12, 0x12, 0x0a, 0x0d, 0x6d, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x10, 0x9e, 0x0a, 0x12, 0x14, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x63, 0x73, 0x10, 0xf8, 0x0a, 0x12, 0x13, 0x0a, 0x0e,
	0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x63, 0x73, 0x10, 0x82,
	0x0b, 0x12, 0x18, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x63, 0x73, 0x10, 0x8c, 0x0b, 0x12, 0x11, 0x0a, 0x0c, 0x74,
	0x63, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x10, 0x96, 0x0b, 0x12, 0x1c,
	0x0a, 0x17, 0x65, 0x64, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x97, 0x0b, 0x12, 0x11, 0x0a, 0x0c,
	0x74, 0x65, 0x73, 0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x10, 0x98, 0x0b, 0x12,
	0x19, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x52, 0x61, 0x63, 0x70, 0x10, 0x99, 0x0b, 0x12, 0x1b, 0x0a, 0x16, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x6f, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x52, 0x61, 0x63, 0x70, 0x10, 0x9a, 0x0b, 0x12, 0x18, 0x0a, 0x13, 0x74, 0x61, 0x72, 0x69, 0x66,
	0x66, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x9b,
	0x0b, 0x12, 0x15, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x61, 0x63, 0x70, 0x10, 0x9c, 0x0b, 0x12, 0x14, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x61, 0x63, 0x70, 0x10, 0x9d, 0x0b, 0x12, 0x1a,
	0x0a, 0x15, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x10, 0x9e, 0x0b, 0x12, 0x19, 0x0a, 0x14, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x10, 0x9f, 0x0b, 0x12, 0x1c, 0x0a, 0x17, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x10, 0xa0, 0x0b, 0x12, 0x1e, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x10, 0xa1, 0x0b, 0x12, 0x20, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x10, 0xa2, 0x0b, 0x12, 0x1d, 0x0a, 0x18, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x10, 0xa3, 0x0b, 0x12, 0x13, 0x0a, 0x0e, 0x72, 0x64, 0x69, 0x61, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x63, 0x75, 0x10, 0xdc, 0x0b, 0x12, 0x16, 0x0a, 0x11, 0x72, 0x64, 0x69,
	0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x10, 0xdd,
	0x0b, 0x12, 0x13, 0x0a, 0x0e, 0x72, 0x64, 0x69, 0x61, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0xde, 0x0b, 0x12, 0x19, 0x0a, 0x14, 0x69, 0x6d, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x69, 0x7a, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x10, 0xc0,
	0x0c, 0x12, 0x1d, 0x0a, 0x18, 0x69, 0x6d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0xca, 0x0c,
	0x12, 0x1e, 0x0a, 0x19, 0x69, 0x6d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0xd4, 0x0c,
	0x12, 0x1b, 0x0a, 0x16, 0x69, 0x6d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x4c,
	0x6f, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0xde, 0x0c, 0x12, 0x1b, 0x0a,
	0x16, 0x69, 0x6d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x10, 0xdf, 0x0c, 0x12, 0x1e, 0x0a, 0x19, 0x69, 0x6d,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x10, 0xd5, 0x0c, 0x12, 0x14, 0x0a, 0x0f, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x10, 0xa4, 0x0d,
	0x12, 0x19, 0x0a, 0x14, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x88, 0x0e, 0x12, 0x17, 0x0a, 0x12, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x10, 0x92, 0x0e, 0x12, 0x11, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x63, 0x73, 0x6d, 0x10, 0xec, 0x0e, 0x12, 0x16, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0xed, 0x0e, 0x12,
	0x16, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x74,
	0x6f, 0x63, 0x73, 0x6d, 0x10, 0xee, 0x0e, 0x12, 0x1c, 0x0a, 0x17, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x74, 0x6f, 0x63,
	0x73, 0x62, 0x10, 0xef, 0x0e, 0x12, 0x16, 0x0a, 0x11, 0x72, 0x74, 0x6d, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0xe0, 0x12, 0x12, 0x12, 0x0a,
	0x0d, 0x72, 0x74, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0xea,
	0x12, 0x12, 0x10, 0x0a, 0x0b, 0x61, 0x76, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x10, 0x8c, 0x15, 0x12, 0x1b, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x10, 0xf0, 0x15,
	0x1a, 0x02, 0x10, 0x01, 0x42, 0x20, 0xd0, 0xe1, 0x1e, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e,
	0x64, 0x61, 0x69, 0x6d, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x62, 0x63, 0x61, 0x72, 0x6b, 0x69, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_acp_proto_rawDescOnce sync.Once
	file_acp_proto_rawDescData = file_acp_proto_rawDesc
)

func file_acp_proto_rawDescGZIP() []byte {
	file_acp_proto_rawDescOnce.Do(func() {
		file_acp_proto_rawDescData = protoimpl.X.CompressGZIP(file_acp_proto_rawDescData)
	})
	return file_acp_proto_rawDescData
}

var file_acp_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_acp_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_acp_proto_goTypes = []interface{}{
	(VVA_CommandState)(0),           // 0: proto.VVA.CommandState
	(VVA_CommandCondition)(0),       // 1: proto.VVA.CommandCondition
	(VehicleAPI_CommandState)(0),    // 2: proto.VehicleAPI.CommandState
	(VehicleAPI_AttributeStatus)(0), // 3: proto.VehicleAPI.AttributeStatus
	(VehicleAPI_QueueType)(0),       // 4: proto.VehicleAPI.QueueType
	(ACP_CommandType)(0),            // 5: proto.ACP.CommandType
	(*VVA)(nil),                     // 6: proto.VVA
	(*VehicleAPI)(nil),              // 7: proto.VehicleAPI
	(*ACP)(nil),                     // 8: proto.ACP
}
var file_acp_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_acp_proto_init() }
func file_acp_proto_init() {
	if File_acp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_acp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VVA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleAPI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_acp_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_acp_proto_goTypes,
		DependencyIndexes: file_acp_proto_depIdxs,
		EnumInfos:         file_acp_proto_enumTypes,
		MessageInfos:      file_acp_proto_msgTypes,
	}.Build()
	File_acp_proto = out.File
	file_acp_proto_rawDesc = nil
	file_acp_proto_goTypes = nil
	file_acp_proto_depIdxs = nil
}
