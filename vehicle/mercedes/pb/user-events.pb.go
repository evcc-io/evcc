// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: user-events.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AcknowledgeUserDataUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
}

func (x *AcknowledgeUserDataUpdate) Reset() {
	*x = AcknowledgeUserDataUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeUserDataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeUserDataUpdate) ProtoMessage() {}

func (x *AcknowledgeUserDataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeUserDataUpdate.ProtoReflect.Descriptor instead.
func (*AcknowledgeUserDataUpdate) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{0}
}

func (x *AcknowledgeUserDataUpdate) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type UserDataUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32  `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	CiamId         string `protobuf:"bytes,2,opt,name=ciam_id,json=ciamId,proto3" json:"ciam_id,omitempty"`
	// when was the event emitted? This is the time of the update,
	// not when the attributes where changed. To compare attribute changes, you need to look into each attribute timestamp
	EmitTimestamp int64 `protobuf:"varint,3,opt,name=emit_timestamp,json=emitTimestamp,proto3" json:"emit_timestamp,omitempty"`
	// When was the event emitted (milliseconds in Unix time)
	EmitTimestampInMs int64        `protobuf:"varint,8,opt,name=emit_timestamp_in_ms,json=emitTimestampInMs,proto3" json:"emit_timestamp_in_ms,omitempty"`
	OldData           *CPDUserData `protobuf:"bytes,6,opt,name=old_data,json=oldData,proto3" json:"old_data,omitempty"`
	NewData           *CPDUserData `protobuf:"bytes,7,opt,name=new_data,json=newData,proto3" json:"new_data,omitempty"`
}

func (x *UserDataUpdate) Reset() {
	*x = UserDataUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataUpdate) ProtoMessage() {}

func (x *UserDataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataUpdate.ProtoReflect.Descriptor instead.
func (*UserDataUpdate) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{1}
}

func (x *UserDataUpdate) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *UserDataUpdate) GetCiamId() string {
	if x != nil {
		return x.CiamId
	}
	return ""
}

func (x *UserDataUpdate) GetEmitTimestamp() int64 {
	if x != nil {
		return x.EmitTimestamp
	}
	return 0
}

func (x *UserDataUpdate) GetEmitTimestampInMs() int64 {
	if x != nil {
		return x.EmitTimestampInMs
	}
	return 0
}

func (x *UserDataUpdate) GetOldData() *CPDUserData {
	if x != nil {
		return x.OldData
	}
	return nil
}

func (x *UserDataUpdate) GetNewData() *CPDUserData {
	if x != nil {
		return x.NewData
	}
	return nil
}

type AcknowledgeUserVehicleAuthChangedUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
}

func (x *AcknowledgeUserVehicleAuthChangedUpdate) Reset() {
	*x = AcknowledgeUserVehicleAuthChangedUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeUserVehicleAuthChangedUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeUserVehicleAuthChangedUpdate) ProtoMessage() {}

func (x *AcknowledgeUserVehicleAuthChangedUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeUserVehicleAuthChangedUpdate.ProtoReflect.Descriptor instead.
func (*AcknowledgeUserVehicleAuthChangedUpdate) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{2}
}

func (x *AcknowledgeUserVehicleAuthChangedUpdate) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
}

func (x *AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI) Reset() {
	*x = AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI) ProtoMessage() {}

func (x *AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.ProtoReflect.Descriptor instead.
func (*AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{3}
}

func (x *AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type UserVehicleAuthChangedUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32  `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	CiamId         string `protobuf:"bytes,2,opt,name=ciam_id,json=ciamId,proto3" json:"ciam_id,omitempty"`
	// when was the event emitted? This is the time of the update,
	// not when the attributes where changed. To compare attribute changes, you need to look into each attribute timestamp
	EmitTimestamp int64 `protobuf:"varint,3,opt,name=emit_timestamp,json=emitTimestamp,proto3" json:"emit_timestamp,omitempty"`
	// When was the event emitted (milliseconds in Unix time)
	EmitTimestampInMs int64 `protobuf:"varint,8,opt,name=emit_timestamp_in_ms,json=emitTimestampInMs,proto3" json:"emit_timestamp_in_ms,omitempty"`
}

func (x *UserVehicleAuthChangedUpdate) Reset() {
	*x = UserVehicleAuthChangedUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserVehicleAuthChangedUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserVehicleAuthChangedUpdate) ProtoMessage() {}

func (x *UserVehicleAuthChangedUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserVehicleAuthChangedUpdate.ProtoReflect.Descriptor instead.
func (*UserVehicleAuthChangedUpdate) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{4}
}

func (x *UserVehicleAuthChangedUpdate) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *UserVehicleAuthChangedUpdate) GetCiamId() string {
	if x != nil {
		return x.CiamId
	}
	return ""
}

func (x *UserVehicleAuthChangedUpdate) GetEmitTimestamp() int64 {
	if x != nil {
		return x.EmitTimestamp
	}
	return 0
}

func (x *UserVehicleAuthChangedUpdate) GetEmitTimestampInMs() int64 {
	if x != nil {
		return x.EmitTimestampInMs
	}
	return 0
}

type CPDUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CiamId                string `protobuf:"bytes,1,opt,name=ciam_id,json=ciamId,proto3" json:"ciam_id,omitempty"`
	UserId                string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FirstName             string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName1             string `protobuf:"bytes,4,opt,name=last_name1,json=lastName1,proto3" json:"last_name1,omitempty"`
	LastName2             string `protobuf:"bytes,5,opt,name=last_name2,json=lastName2,proto3" json:"last_name2,omitempty"`
	Title                 string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	NamePrefix            string `protobuf:"bytes,7,opt,name=name_prefix,json=namePrefix,proto3" json:"name_prefix,omitempty"`
	MiddleInitial         string `protobuf:"bytes,8,opt,name=middle_initial,json=middleInitial,proto3" json:"middle_initial,omitempty"`
	SalutationCode        string `protobuf:"bytes,9,opt,name=salutation_code,json=salutationCode,proto3" json:"salutation_code,omitempty"`
	Email                 string `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	LandlinePhone         string `protobuf:"bytes,11,opt,name=landline_phone,json=landlinePhone,proto3" json:"landline_phone,omitempty"`
	MobilePhoneNumber     string `protobuf:"bytes,12,opt,name=mobile_phone_number,json=mobilePhoneNumber,proto3" json:"mobile_phone_number,omitempty"`
	CreatedAt             string `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy             string `protobuf:"bytes,14,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt             string `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Birthday              string `protobuf:"bytes,28,opt,name=birthday,proto3" json:"birthday,omitempty"`
	PreferredLanguageCode string `protobuf:"bytes,29,opt,name=preferred_language_code,json=preferredLanguageCode,proto3" json:"preferred_language_code,omitempty"`
	AccountCountryCode    string `protobuf:"bytes,30,opt,name=account_country_code,json=accountCountryCode,proto3" json:"account_country_code,omitempty"`
	// doc says: TODO
	UcId                    string                          `protobuf:"bytes,31,opt,name=uc_id,json=ucId,proto3" json:"uc_id,omitempty"`
	Vip                     bool                            `protobuf:"varint,32,opt,name=vip,proto3" json:"vip,omitempty"`
	Address                 *CPDUserAddress                 `protobuf:"bytes,33,opt,name=address,proto3" json:"address,omitempty"`
	CommunicationPreference *CPDUserCommunicationPreference `protobuf:"bytes,34,opt,name=communication_preference,json=communicationPreference,proto3" json:"communication_preference,omitempty"`
}

func (x *CPDUserData) Reset() {
	*x = CPDUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPDUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPDUserData) ProtoMessage() {}

func (x *CPDUserData) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPDUserData.ProtoReflect.Descriptor instead.
func (*CPDUserData) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{5}
}

func (x *CPDUserData) GetCiamId() string {
	if x != nil {
		return x.CiamId
	}
	return ""
}

func (x *CPDUserData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CPDUserData) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CPDUserData) GetLastName1() string {
	if x != nil {
		return x.LastName1
	}
	return ""
}

func (x *CPDUserData) GetLastName2() string {
	if x != nil {
		return x.LastName2
	}
	return ""
}

func (x *CPDUserData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CPDUserData) GetNamePrefix() string {
	if x != nil {
		return x.NamePrefix
	}
	return ""
}

func (x *CPDUserData) GetMiddleInitial() string {
	if x != nil {
		return x.MiddleInitial
	}
	return ""
}

func (x *CPDUserData) GetSalutationCode() string {
	if x != nil {
		return x.SalutationCode
	}
	return ""
}

func (x *CPDUserData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CPDUserData) GetLandlinePhone() string {
	if x != nil {
		return x.LandlinePhone
	}
	return ""
}

func (x *CPDUserData) GetMobilePhoneNumber() string {
	if x != nil {
		return x.MobilePhoneNumber
	}
	return ""
}

func (x *CPDUserData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CPDUserData) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CPDUserData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CPDUserData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *CPDUserData) GetPreferredLanguageCode() string {
	if x != nil {
		return x.PreferredLanguageCode
	}
	return ""
}

func (x *CPDUserData) GetAccountCountryCode() string {
	if x != nil {
		return x.AccountCountryCode
	}
	return ""
}

func (x *CPDUserData) GetUcId() string {
	if x != nil {
		return x.UcId
	}
	return ""
}

func (x *CPDUserData) GetVip() bool {
	if x != nil {
		return x.Vip
	}
	return false
}

func (x *CPDUserData) GetAddress() *CPDUserAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CPDUserData) GetCommunicationPreference() *CPDUserCommunicationPreference {
	if x != nil {
		return x.CommunicationPreference
	}
	return nil
}

type CPDUserAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode   string `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	State         string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Province      string `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	Street        string `protobuf:"bytes,4,opt,name=street,proto3" json:"street,omitempty"`
	HouseNo       string `protobuf:"bytes,5,opt,name=house_no,json=houseNo,proto3" json:"house_no,omitempty"`
	ZipCode       string `protobuf:"bytes,6,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	City          string `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	StreetType    string `protobuf:"bytes,8,opt,name=street_type,json=streetType,proto3" json:"street_type,omitempty"`
	HouseName     string `protobuf:"bytes,9,opt,name=house_name,json=houseName,proto3" json:"house_name,omitempty"`
	FloorNo       string `protobuf:"bytes,10,opt,name=floor_no,json=floorNo,proto3" json:"floor_no,omitempty"`
	DoorNo        string `protobuf:"bytes,11,opt,name=door_no,json=doorNo,proto3" json:"door_no,omitempty"`
	AddressLine1  string `protobuf:"bytes,12,opt,name=address_line1,json=addressLine1,proto3" json:"address_line1,omitempty"`
	AddressLine2  string `protobuf:"bytes,13,opt,name=address_line2,json=addressLine2,proto3" json:"address_line2,omitempty"`
	AddressLine3  string `protobuf:"bytes,14,opt,name=address_line3,json=addressLine3,proto3" json:"address_line3,omitempty"`
	PostOfficeBox string `protobuf:"bytes,15,opt,name=post_office_box,json=postOfficeBox,proto3" json:"post_office_box,omitempty"`
}

func (x *CPDUserAddress) Reset() {
	*x = CPDUserAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPDUserAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPDUserAddress) ProtoMessage() {}

func (x *CPDUserAddress) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPDUserAddress.ProtoReflect.Descriptor instead.
func (*CPDUserAddress) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{6}
}

func (x *CPDUserAddress) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CPDUserAddress) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CPDUserAddress) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CPDUserAddress) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *CPDUserAddress) GetHouseNo() string {
	if x != nil {
		return x.HouseNo
	}
	return ""
}

func (x *CPDUserAddress) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *CPDUserAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CPDUserAddress) GetStreetType() string {
	if x != nil {
		return x.StreetType
	}
	return ""
}

func (x *CPDUserAddress) GetHouseName() string {
	if x != nil {
		return x.HouseName
	}
	return ""
}

func (x *CPDUserAddress) GetFloorNo() string {
	if x != nil {
		return x.FloorNo
	}
	return ""
}

func (x *CPDUserAddress) GetDoorNo() string {
	if x != nil {
		return x.DoorNo
	}
	return ""
}

func (x *CPDUserAddress) GetAddressLine1() string {
	if x != nil {
		return x.AddressLine1
	}
	return ""
}

func (x *CPDUserAddress) GetAddressLine2() string {
	if x != nil {
		return x.AddressLine2
	}
	return ""
}

func (x *CPDUserAddress) GetAddressLine3() string {
	if x != nil {
		return x.AddressLine3
	}
	return ""
}

func (x *CPDUserAddress) GetPostOfficeBox() string {
	if x != nil {
		return x.PostOfficeBox
	}
	return ""
}

type CPDUserCommunicationPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactedByPhone  bool `protobuf:"varint,1,opt,name=contacted_by_phone,json=contactedByPhone,proto3" json:"contacted_by_phone,omitempty"`
	ContactedByLetter bool `protobuf:"varint,2,opt,name=contacted_by_letter,json=contactedByLetter,proto3" json:"contacted_by_letter,omitempty"`
	ContactedByEmail  bool `protobuf:"varint,3,opt,name=contacted_by_email,json=contactedByEmail,proto3" json:"contacted_by_email,omitempty"`
	ContactedBySms    bool `protobuf:"varint,4,opt,name=contacted_by_sms,json=contactedBySms,proto3" json:"contacted_by_sms,omitempty"`
}

func (x *CPDUserCommunicationPreference) Reset() {
	*x = CPDUserCommunicationPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPDUserCommunicationPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPDUserCommunicationPreference) ProtoMessage() {}

func (x *CPDUserCommunicationPreference) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPDUserCommunicationPreference.ProtoReflect.Descriptor instead.
func (*CPDUserCommunicationPreference) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{7}
}

func (x *CPDUserCommunicationPreference) GetContactedByPhone() bool {
	if x != nil {
		return x.ContactedByPhone
	}
	return false
}

func (x *CPDUserCommunicationPreference) GetContactedByLetter() bool {
	if x != nil {
		return x.ContactedByLetter
	}
	return false
}

func (x *CPDUserCommunicationPreference) GetContactedByEmail() bool {
	if x != nil {
		return x.ContactedByEmail
	}
	return false
}

func (x *CPDUserCommunicationPreference) GetContactedBySms() bool {
	if x != nil {
		return x.ContactedBySms
	}
	return false
}

type AcknowledgeUserPictureUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
}

func (x *AcknowledgeUserPictureUpdate) Reset() {
	*x = AcknowledgeUserPictureUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeUserPictureUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeUserPictureUpdate) ProtoMessage() {}

func (x *AcknowledgeUserPictureUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeUserPictureUpdate.ProtoReflect.Descriptor instead.
func (*AcknowledgeUserPictureUpdate) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{8}
}

func (x *AcknowledgeUserPictureUpdate) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

// Sent after a picture upload/change
type UserPictureUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	// ciam ID
	CiamId string `protobuf:"bytes,5,opt,name=ciam_id,json=ciamId,proto3" json:"ciam_id,omitempty"`
	// when was the event emitted? This is the time of the update
	EmitTimestamp int64 `protobuf:"varint,2,opt,name=emit_timestamp,json=emitTimestamp,proto3" json:"emit_timestamp,omitempty"`
	// When was the event emitted (milliseconds in Unix time)
	EmitTimestampInMs int64 `protobuf:"varint,6,opt,name=emit_timestamp_in_ms,json=emitTimestampInMs,proto3" json:"emit_timestamp_in_ms,omitempty"`
	// this timestamp indicates when a message was read from the eventhub
	EventhubReceiveTimestamp int64 `protobuf:"varint,3,opt,name=eventhub_receive_timestamp,json=eventhubReceiveTimestamp,proto3" json:"eventhub_receive_timestamp,omitempty"`
	// this timestamp indicates when a message was processed in the app twin
	ApptwinReceiveTimestamp int64 `protobuf:"varint,4,opt,name=apptwin_receive_timestamp,json=apptwinReceiveTimestamp,proto3" json:"apptwin_receive_timestamp,omitempty"`
}

func (x *UserPictureUpdate) Reset() {
	*x = UserPictureUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPictureUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPictureUpdate) ProtoMessage() {}

func (x *UserPictureUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPictureUpdate.ProtoReflect.Descriptor instead.
func (*UserPictureUpdate) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{9}
}

func (x *UserPictureUpdate) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *UserPictureUpdate) GetCiamId() string {
	if x != nil {
		return x.CiamId
	}
	return ""
}

func (x *UserPictureUpdate) GetEmitTimestamp() int64 {
	if x != nil {
		return x.EmitTimestamp
	}
	return 0
}

func (x *UserPictureUpdate) GetEmitTimestampInMs() int64 {
	if x != nil {
		return x.EmitTimestampInMs
	}
	return 0
}

func (x *UserPictureUpdate) GetEventhubReceiveTimestamp() int64 {
	if x != nil {
		return x.EventhubReceiveTimestamp
	}
	return 0
}

func (x *UserPictureUpdate) GetApptwinReceiveTimestamp() int64 {
	if x != nil {
		return x.ApptwinReceiveTimestamp
	}
	return 0
}

type AcknowledgeUserPINUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
}

func (x *AcknowledgeUserPINUpdate) Reset() {
	*x = AcknowledgeUserPINUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeUserPINUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeUserPINUpdate) ProtoMessage() {}

func (x *AcknowledgeUserPINUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeUserPINUpdate.ProtoReflect.Descriptor instead.
func (*AcknowledgeUserPINUpdate) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{10}
}

func (x *AcknowledgeUserPINUpdate) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

// Sent after a PIN update
type UserPINUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	// ciam ID
	CiamId string `protobuf:"bytes,5,opt,name=ciam_id,json=ciamId,proto3" json:"ciam_id,omitempty"`
	// when was the event emitted? This is the time of the update
	EmitTimestamp int64 `protobuf:"varint,2,opt,name=emit_timestamp,json=emitTimestamp,proto3" json:"emit_timestamp,omitempty"`
	// When was the event emitted (milliseconds in Unix time)
	EmitTimestampInMs int64 `protobuf:"varint,6,opt,name=emit_timestamp_in_ms,json=emitTimestampInMs,proto3" json:"emit_timestamp_in_ms,omitempty"`
	// this timestamp indicates when a message was read from the eventhub
	EventhubReceiveTimestamp int64 `protobuf:"varint,3,opt,name=eventhub_receive_timestamp,json=eventhubReceiveTimestamp,proto3" json:"eventhub_receive_timestamp,omitempty"`
	// this timestamp indicates when a message was processed in the app twin
	ApptwinReceiveTimestamp int64 `protobuf:"varint,4,opt,name=apptwin_receive_timestamp,json=apptwinReceiveTimestamp,proto3" json:"apptwin_receive_timestamp,omitempty"`
}

func (x *UserPINUpdate) Reset() {
	*x = UserPINUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPINUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPINUpdate) ProtoMessage() {}

func (x *UserPINUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPINUpdate.ProtoReflect.Descriptor instead.
func (*UserPINUpdate) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{11}
}

func (x *UserPINUpdate) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *UserPINUpdate) GetCiamId() string {
	if x != nil {
		return x.CiamId
	}
	return ""
}

func (x *UserPINUpdate) GetEmitTimestamp() int64 {
	if x != nil {
		return x.EmitTimestamp
	}
	return 0
}

func (x *UserPINUpdate) GetEmitTimestampInMs() int64 {
	if x != nil {
		return x.EmitTimestampInMs
	}
	return 0
}

func (x *UserPINUpdate) GetEventhubReceiveTimestamp() int64 {
	if x != nil {
		return x.EventhubReceiveTimestamp
	}
	return 0
}

func (x *UserPINUpdate) GetApptwinReceiveTimestamp() int64 {
	if x != nil {
		return x.ApptwinReceiveTimestamp
	}
	return 0
}

// Contains the refreshed jwt of the user
type UpdateUserJWTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt string `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *UpdateUserJWTRequest) Reset() {
	*x = UpdateUserJWTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserJWTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserJWTRequest) ProtoMessage() {}

func (x *UpdateUserJWTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserJWTRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserJWTRequest) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateUserJWTRequest) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

// Ack for the UpdateUserJWTRequest
type AcknowledgeUpdateUserJWTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcknowledgeUpdateUserJWTRequest) Reset() {
	*x = AcknowledgeUpdateUserJWTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_events_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeUpdateUserJWTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeUpdateUserJWTRequest) ProtoMessage() {}

func (x *AcknowledgeUpdateUserJWTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_events_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeUpdateUserJWTRequest.ProtoReflect.Descriptor instead.
func (*AcknowledgeUpdateUserJWTRequest) Descriptor() ([]byte, []int) {
	return file_user_events_proto_rawDescGZIP(), []int{13}
}

var File_user_events_proto protoreflect.FileDescriptor

var file_user_events_proto_rawDesc = []byte{
	0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x19, 0x41, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x88, 0x02, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x69, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65,
	0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x14,
	0x65, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x69,
	0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x65, 0x6d, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x4d, 0x73, 0x12, 0x2d, 0x0a,
	0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x50, 0x44, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x08,
	0x6e, 0x65, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x50, 0x44, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x27, 0x41,
	0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x5e, 0x0a, 0x33, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x74, 0x41, 0x50, 0x49, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0xb8, 0x01, 0x0a, 0x1c, 0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x69, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6d, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x14, 0x65, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x69, 0x6e, 0x5f, 0x6d,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x65, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x4d, 0x73, 0x22, 0xad, 0x06, 0x0a, 0x0b, 0x43,
	0x50, 0x44, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x69, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x61, 0x6c, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x61, 0x6c, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x13, 0x0a, 0x05, 0x75, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x63, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x50, 0x44, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x60, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x50, 0x44, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xd2, 0x03, 0x0a, 0x0e, 0x43,
	0x50, 0x44, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x6e, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x4e, 0x6f, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x6f, 0x72, 0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e,
	0x65, 0x32, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x33, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x33, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x42, 0x6f, 0x78, 0x22,
	0xd6, 0x01, 0x0a, 0x1e, 0x43, 0x50, 0x44, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x5f, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x73,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x53, 0x6d, 0x73, 0x22, 0x47, 0x0a, 0x1c, 0x41, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xa7, 0x02, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x69, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x65, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x2f, 0x0a, 0x14, 0x65, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x65, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x4d,
	0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x68, 0x75, 0x62, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x3a, 0x0a, 0x19, 0x61, 0x70, 0x70, 0x74, 0x77, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x17, 0x61, 0x70, 0x70, 0x74, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x43, 0x0a, 0x18, 0x41,
	0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x49,
	0x4e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xa3, 0x02, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x50, 0x49, 0x4e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x69, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x69,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6d,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x14, 0x65,
	0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x69, 0x6e,
	0x5f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x65, 0x6d, 0x69, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x4d, 0x73, 0x12, 0x3c, 0x0a, 0x1a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x18, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x70,
	0x70, 0x74, 0x77, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x61,
	0x70, 0x70, 0x74, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x28, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74,
	0x22, 0x21, 0x0a, 0x1f, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x57, 0x54, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x1c, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x69, 0x6d, 0x6c,
	0x65, 0x72, 0x2e, 0x6d, 0x62, 0x63, 0x61, 0x72, 0x6b, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_events_proto_rawDescOnce sync.Once
	file_user_events_proto_rawDescData = file_user_events_proto_rawDesc
)

func file_user_events_proto_rawDescGZIP() []byte {
	file_user_events_proto_rawDescOnce.Do(func() {
		file_user_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_events_proto_rawDescData)
	})
	return file_user_events_proto_rawDescData
}

var file_user_events_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_user_events_proto_goTypes = []interface{}{
	(*AcknowledgeUserDataUpdate)(nil),                           // 0: proto.AcknowledgeUserDataUpdate
	(*UserDataUpdate)(nil),                                      // 1: proto.UserDataUpdate
	(*AcknowledgeUserVehicleAuthChangedUpdate)(nil),             // 2: proto.AcknowledgeUserVehicleAuthChangedUpdate
	(*AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI)(nil), // 3: proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI
	(*UserVehicleAuthChangedUpdate)(nil),                        // 4: proto.UserVehicleAuthChangedUpdate
	(*CPDUserData)(nil),                                         // 5: proto.CPDUserData
	(*CPDUserAddress)(nil),                                      // 6: proto.CPDUserAddress
	(*CPDUserCommunicationPreference)(nil),                      // 7: proto.CPDUserCommunicationPreference
	(*AcknowledgeUserPictureUpdate)(nil),                        // 8: proto.AcknowledgeUserPictureUpdate
	(*UserPictureUpdate)(nil),                                   // 9: proto.UserPictureUpdate
	(*AcknowledgeUserPINUpdate)(nil),                            // 10: proto.AcknowledgeUserPINUpdate
	(*UserPINUpdate)(nil),                                       // 11: proto.UserPINUpdate
	(*UpdateUserJWTRequest)(nil),                                // 12: proto.UpdateUserJWTRequest
	(*AcknowledgeUpdateUserJWTRequest)(nil),                     // 13: proto.AcknowledgeUpdateUserJWTRequest
}
var file_user_events_proto_depIdxs = []int32{
	5, // 0: proto.UserDataUpdate.old_data:type_name -> proto.CPDUserData
	5, // 1: proto.UserDataUpdate.new_data:type_name -> proto.CPDUserData
	6, // 2: proto.CPDUserData.address:type_name -> proto.CPDUserAddress
	7, // 3: proto.CPDUserData.communication_preference:type_name -> proto.CPDUserCommunicationPreference
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_user_events_proto_init() }
func file_user_events_proto_init() {
	if File_user_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeUserDataUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeUserVehicleAuthChangedUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserVehicleAuthChangedUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPDUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPDUserAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPDUserCommunicationPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeUserPictureUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPictureUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeUserPINUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPINUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserJWTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_events_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeUpdateUserJWTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_events_proto_goTypes,
		DependencyIndexes: file_user_events_proto_depIdxs,
		MessageInfos:      file_user_events_proto_msgTypes,
	}.Build()
	File_user_events_proto = out.File
	file_user_events_proto_rawDesc = nil
	file_user_events_proto_goTypes = nil
	file_user_events_proto_depIdxs = nil
}
