// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: vehicleapi.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sending direction: App -> BFF -> AppTwin
type AcknowledgeAppTwinCommandStatusUpdatesByVIN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
}

func (x *AcknowledgeAppTwinCommandStatusUpdatesByVIN) Reset() {
	*x = AcknowledgeAppTwinCommandStatusUpdatesByVIN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeAppTwinCommandStatusUpdatesByVIN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeAppTwinCommandStatusUpdatesByVIN) ProtoMessage() {}

func (x *AcknowledgeAppTwinCommandStatusUpdatesByVIN) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeAppTwinCommandStatusUpdatesByVIN.ProtoReflect.Descriptor instead.
func (*AcknowledgeAppTwinCommandStatusUpdatesByVIN) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{0}
}

func (x *AcknowledgeAppTwinCommandStatusUpdatesByVIN) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

// Sending direction: App <- BFF <- AppTwin
type AppTwinCommandStatusUpdatesByVIN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber int32 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	// VIN -> Update
	UpdatesByVin map[string]*AppTwinCommandStatusUpdatesByPID `protobuf:"bytes,2,rep,name=updates_by_vin,json=updatesByVin,proto3" json:"updates_by_vin,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AppTwinCommandStatusUpdatesByVIN) Reset() {
	*x = AppTwinCommandStatusUpdatesByVIN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTwinCommandStatusUpdatesByVIN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTwinCommandStatusUpdatesByVIN) ProtoMessage() {}

func (x *AppTwinCommandStatusUpdatesByVIN) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTwinCommandStatusUpdatesByVIN.ProtoReflect.Descriptor instead.
func (*AppTwinCommandStatusUpdatesByVIN) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{1}
}

func (x *AppTwinCommandStatusUpdatesByVIN) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *AppTwinCommandStatusUpdatesByVIN) GetUpdatesByVin() map[string]*AppTwinCommandStatusUpdatesByPID {
	if x != nil {
		return x.UpdatesByVin
	}
	return nil
}

// Sending direction: App <- BFF <- AppTwin as part of an AppTwinCommandStatusUpdatesByVIN
type AppTwinCommandStatusUpdatesByPID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vin string `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
	// Process ID -> Status
	UpdatesByPid map[int64]*AppTwinCommandStatus `protobuf:"bytes,2,rep,name=updates_by_pid,json=updatesByPid,proto3" json:"updates_by_pid,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AppTwinCommandStatusUpdatesByPID) Reset() {
	*x = AppTwinCommandStatusUpdatesByPID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTwinCommandStatusUpdatesByPID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTwinCommandStatusUpdatesByPID) ProtoMessage() {}

func (x *AppTwinCommandStatusUpdatesByPID) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTwinCommandStatusUpdatesByPID.ProtoReflect.Descriptor instead.
func (*AppTwinCommandStatusUpdatesByPID) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{2}
}

func (x *AppTwinCommandStatusUpdatesByPID) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *AppTwinCommandStatusUpdatesByPID) GetUpdatesByPid() map[int64]*AppTwinCommandStatus {
	if x != nil {
		return x.UpdatesByPid
	}
	return nil
}

// Sending direction: App <- BFF <- AppTwin as part of an AppTwinCommandStatusUpdatesByPID
type AppTwinCommandStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The remote vehicleAPI process id of the command.
	ProcessId int64 `protobuf:"varint,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	// The id of the command with which the app created it. Only guaranteed to be
	// set on the first transmission to the app.
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The initial CommandStatus from the response of the vehicleAPI has a timestamp of
	// -1
	TimestampInMs int64 `protobuf:"varint,3,opt,name=timestamp_in_ms,json=timestampInMs,proto3" json:"timestamp_in_ms,omitempty"`
	// Potential ACP error if the command request could not be fulfilled
	Errors []*VehicleAPIError `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	// Potential timestamp until user cannot send login requests. Data in seconds
	// since Unix epoch
	//
	// Deprecated: Marked as deprecated in vehicleapi.proto.
	BlockingTimeSeconds int64 `protobuf:"varint,5,opt,name=blocking_time_seconds,json=blockingTimeSeconds,proto3" json:"blocking_time_seconds,omitempty"`
	// Potential amount of failed pin attempts.
	//
	// Deprecated: Marked as deprecated in vehicleapi.proto.
	PinAttempts int32 `protobuf:"varint,6,opt,name=pin_attempts,json=pinAttempts,proto3" json:"pin_attempts,omitempty"`
	// The type of command the AppTwinCommandStatus belongs to
	Type ACP_CommandType `protobuf:"varint,7,opt,name=type,proto3,enum=proto.ACP_CommandType" json:"type,omitempty"`
	// The command state
	State VehicleAPI_CommandState `protobuf:"varint,8,opt,name=state,proto3,enum=proto.VehicleAPI_CommandState" json:"state,omitempty"`
}

func (x *AppTwinCommandStatus) Reset() {
	*x = AppTwinCommandStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTwinCommandStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTwinCommandStatus) ProtoMessage() {}

func (x *AppTwinCommandStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTwinCommandStatus.ProtoReflect.Descriptor instead.
func (*AppTwinCommandStatus) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{3}
}

func (x *AppTwinCommandStatus) GetProcessId() int64 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *AppTwinCommandStatus) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AppTwinCommandStatus) GetTimestampInMs() int64 {
	if x != nil {
		return x.TimestampInMs
	}
	return 0
}

func (x *AppTwinCommandStatus) GetErrors() []*VehicleAPIError {
	if x != nil {
		return x.Errors
	}
	return nil
}

// Deprecated: Marked as deprecated in vehicleapi.proto.
func (x *AppTwinCommandStatus) GetBlockingTimeSeconds() int64 {
	if x != nil {
		return x.BlockingTimeSeconds
	}
	return 0
}

// Deprecated: Marked as deprecated in vehicleapi.proto.
func (x *AppTwinCommandStatus) GetPinAttempts() int32 {
	if x != nil {
		return x.PinAttempts
	}
	return 0
}

func (x *AppTwinCommandStatus) GetType() ACP_CommandType {
	if x != nil {
		return x.Type
	}
	return ACP_UNKNOWNCOMMANDTYPE
}

func (x *AppTwinCommandStatus) GetState() VehicleAPI_CommandState {
	if x != nil {
		return x.State
	}
	return VehicleAPI_UNKNOWN_COMMAND_STATE
}

// VehicleAPICommandPostResult is a message type that can be unmarshaled from a POST request against the vehicle API
// for issuing commands.
type VehicleAPICommandPostResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The remote VVA process id of the command.
	ProcessId int64 `protobuf:"varint,1,opt,name=process_id,json=processid,proto3" json:"process_id,omitempty"`
	// Potential ACP error if the command request could not be fulfilled
	Errors []*VehicleAPIError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// The command state
	State VehicleAPI_CommandState `protobuf:"varint,3,opt,name=state,proto3,enum=proto.VehicleAPI_CommandState" json:"state,omitempty"`
}

func (x *VehicleAPICommandPostResult) Reset() {
	*x = VehicleAPICommandPostResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleAPICommandPostResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAPICommandPostResult) ProtoMessage() {}

func (x *VehicleAPICommandPostResult) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAPICommandPostResult.ProtoReflect.Descriptor instead.
func (*VehicleAPICommandPostResult) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{4}
}

func (x *VehicleAPICommandPostResult) GetProcessId() int64 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *VehicleAPICommandPostResult) GetErrors() []*VehicleAPIError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *VehicleAPICommandPostResult) GetState() VehicleAPI_CommandState {
	if x != nil {
		return x.State
	}
	return VehicleAPI_UNKNOWN_COMMAND_STATE
}

type VehicleAPICommandGetResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of processes
	Process []*VehicleAPICommandProcessStatus `protobuf:"bytes,1,rep,name=process,proto3" json:"process,omitempty"`
	// Number of enqueued commands in related command queue
	QueueCount int32 `protobuf:"varint,2,opt,name=queue_count,json=queuecount,proto3" json:"queue_count,omitempty"`
	// Name of related command queue type
	QueueType VehicleAPI_QueueType `protobuf:"varint,3,opt,name=queue_type,json=queuetype,proto3,enum=proto.VehicleAPI_QueueType" json:"queue_type,omitempty"`
}

func (x *VehicleAPICommandGetResult) Reset() {
	*x = VehicleAPICommandGetResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleAPICommandGetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAPICommandGetResult) ProtoMessage() {}

func (x *VehicleAPICommandGetResult) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAPICommandGetResult.ProtoReflect.Descriptor instead.
func (*VehicleAPICommandGetResult) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{5}
}

func (x *VehicleAPICommandGetResult) GetProcess() []*VehicleAPICommandProcessStatus {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *VehicleAPICommandGetResult) GetQueueCount() int32 {
	if x != nil {
		return x.QueueCount
	}
	return 0
}

func (x *VehicleAPICommandGetResult) GetQueueType() VehicleAPI_QueueType {
	if x != nil {
		return x.QueueType
	}
	return VehicleAPI_UNKNOWNCOMMANDQUEUETYPE
}

type VehicleAPIDataGetResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]*VehicleAPIAttributeStatus `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VehicleAPIDataGetResult) Reset() {
	*x = VehicleAPIDataGetResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleAPIDataGetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAPIDataGetResult) ProtoMessage() {}

func (x *VehicleAPIDataGetResult) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAPIDataGetResult.ProtoReflect.Descriptor instead.
func (*VehicleAPIDataGetResult) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{6}
}

func (x *VehicleAPIDataGetResult) GetData() map[string]*VehicleAPIAttributeStatus {
	if x != nil {
		return x.Data
	}
	return nil
}

type VehicleAPIAttributeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value of the attribute (can be anything)
	Value *structpb.Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// UTC timestamp in milliseconds
	TimestampInMs int64 `protobuf:"varint,2,opt,name=timestamp_in_ms,json=ts,proto3" json:"timestamp_in_ms,omitempty"`
	// Status of the attribute
	Status VehicleAPI_AttributeStatus `protobuf:"varint,1,opt,name=Status,json=status,proto3,enum=proto.VehicleAPI_AttributeStatus" json:"Status,omitempty"`
}

func (x *VehicleAPIAttributeStatus) Reset() {
	*x = VehicleAPIAttributeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleAPIAttributeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAPIAttributeStatus) ProtoMessage() {}

func (x *VehicleAPIAttributeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAPIAttributeStatus.ProtoReflect.Descriptor instead.
func (*VehicleAPIAttributeStatus) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{7}
}

func (x *VehicleAPIAttributeStatus) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *VehicleAPIAttributeStatus) GetTimestampInMs() int64 {
	if x != nil {
		return x.TimestampInMs
	}
	return 0
}

func (x *VehicleAPIAttributeStatus) GetStatus() VehicleAPI_AttributeStatus {
	if x != nil {
		return x.Status
	}
	return VehicleAPI_VALUE_SET
}

type VehicleAPICommandProcessStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*VehicleAPIError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	// GUID (RFC 4122)
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceid,proto3" json:"instance_id,omitempty"`
	// Name of the command
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Process ID
	ProcessId int64 `protobuf:"varint,4,opt,name=process_id,json=processid,proto3" json:"process_id,omitempty"`
	// Response parameters as defined by the command
	ResponseParameters *structpb.Value `protobuf:"bytes,6,opt,name=response_parameters,json=responseparameters,proto3" json:"response_parameters,omitempty"`
	// Current processing state
	State VehicleAPI_CommandState `protobuf:"varint,7,opt,name=state,proto3,enum=proto.VehicleAPI_CommandState" json:"state,omitempty"`
	// UTC timestamp in seconds (ISO 9945)
	TimestampInS int64 `protobuf:"varint,8,opt,name=timestamp_in_s,json=timestamp,proto3" json:"timestamp_in_s,omitempty"`
	// Tracking ID. SHOULD be a GUID (RFC 4122)
	TrackingId string `protobuf:"bytes,9,opt,name=tracking_id,json=trackingid,proto3" json:"tracking_id,omitempty"`
}

func (x *VehicleAPICommandProcessStatus) Reset() {
	*x = VehicleAPICommandProcessStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleAPICommandProcessStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAPICommandProcessStatus) ProtoMessage() {}

func (x *VehicleAPICommandProcessStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAPICommandProcessStatus.ProtoReflect.Descriptor instead.
func (*VehicleAPICommandProcessStatus) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{8}
}

func (x *VehicleAPICommandProcessStatus) GetErrors() []*VehicleAPIError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *VehicleAPICommandProcessStatus) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *VehicleAPICommandProcessStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VehicleAPICommandProcessStatus) GetProcessId() int64 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *VehicleAPICommandProcessStatus) GetResponseParameters() *structpb.Value {
	if x != nil {
		return x.ResponseParameters
	}
	return nil
}

func (x *VehicleAPICommandProcessStatus) GetState() VehicleAPI_CommandState {
	if x != nil {
		return x.State
	}
	return VehicleAPI_UNKNOWN_COMMAND_STATE
}

func (x *VehicleAPICommandProcessStatus) GetTimestampInS() int64 {
	if x != nil {
		return x.TimestampInS
	}
	return 0
}

func (x *VehicleAPICommandProcessStatus) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

type VehicleAPIError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string                     `protobuf:"bytes,1,opt,name=code,json=error-code,proto3" json:"code,omitempty"`
	Message    string                     `protobuf:"bytes,2,opt,name=message,json=error-message,proto3" json:"message,omitempty"`
	Attributes map[string]*structpb.Value `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SubErrors  []*VehicleAPIError         `protobuf:"bytes,4,rep,name=sub_errors,json=sub-errors,proto3" json:"sub_errors,omitempty"`
}

func (x *VehicleAPIError) Reset() {
	*x = VehicleAPIError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleAPIError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAPIError) ProtoMessage() {}

func (x *VehicleAPIError) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAPIError.ProtoReflect.Descriptor instead.
func (*VehicleAPIError) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{9}
}

func (x *VehicleAPIError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VehicleAPIError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VehicleAPIError) GetAttributes() map[string]*structpb.Value {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *VehicleAPIError) GetSubErrors() []*VehicleAPIError {
	if x != nil {
		return x.SubErrors
	}
	return nil
}

// AppTwinPendingCommandsRequest is sent from the AppTwin to the app to ask for commands that the app has not yet
// received a finished state for. This request MUST eventually be answered with AppTwinPendingCommandsResponse.
type AppTwinPendingCommandsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppTwinPendingCommandsRequest) Reset() {
	*x = AppTwinPendingCommandsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTwinPendingCommandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTwinPendingCommandsRequest) ProtoMessage() {}

func (x *AppTwinPendingCommandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTwinPendingCommandsRequest.ProtoReflect.Descriptor instead.
func (*AppTwinPendingCommandsRequest) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{10}
}

// AppTwinPendingCommandsResponse is sent from the app to the AppTwin to tell it the commands that haven't been
// "resolved yet" (are not in a finished state). The delivery of this message to the AppTwin will trigger a command
// actor that polls the state for the specified command type and PID.
type AppTwinPendingCommandsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PendingCommands []*PendingCommand `protobuf:"bytes,1,rep,name=pending_commands,json=pendingCommands,proto3" json:"pending_commands,omitempty"`
}

func (x *AppTwinPendingCommandsResponse) Reset() {
	*x = AppTwinPendingCommandsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTwinPendingCommandsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTwinPendingCommandsResponse) ProtoMessage() {}

func (x *AppTwinPendingCommandsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTwinPendingCommandsResponse.ProtoReflect.Descriptor instead.
func (*AppTwinPendingCommandsResponse) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{11}
}

func (x *AppTwinPendingCommandsResponse) GetPendingCommands() []*PendingCommand {
	if x != nil {
		return x.PendingCommands
	}
	return nil
}

type PendingCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vin       string          `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
	ProcessId int64           `protobuf:"varint,2,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	RequestId string          `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Type      ACP_CommandType `protobuf:"varint,4,opt,name=type,proto3,enum=proto.ACP_CommandType" json:"type,omitempty"`
}

func (x *PendingCommand) Reset() {
	*x = PendingCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vehicleapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingCommand) ProtoMessage() {}

func (x *PendingCommand) ProtoReflect() protoreflect.Message {
	mi := &file_vehicleapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingCommand.ProtoReflect.Descriptor instead.
func (*PendingCommand) Descriptor() ([]byte, []int) {
	return file_vehicleapi_proto_rawDescGZIP(), []int{12}
}

func (x *PendingCommand) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *PendingCommand) GetProcessId() int64 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *PendingCommand) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PendingCommand) GetType() ACP_CommandType {
	if x != nil {
		return x.Type
	}
	return ACP_UNKNOWNCOMMANDTYPE
}

var File_vehicleapi_proto protoreflect.FileDescriptor

var file_vehicleapi_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x61, 0x63, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0a, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56,
	0x0a, 0x2b, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x41, 0x70, 0x70,
	0x54, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x56, 0x49, 0x4e, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x96, 0x02, 0x0a, 0x20, 0x41, 0x70, 0x70, 0x54, 0x77,
	0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x56, 0x49, 0x4e, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x5f, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f,
	0x62, 0x79, 0x5f, 0x76, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x42, 0x79, 0x56, 0x49, 0x4e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x56,
	0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x42, 0x79, 0x56, 0x69, 0x6e, 0x1a, 0x68, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x42, 0x79, 0x56, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42,
	0x79, 0x50, 0x49, 0x44, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xf3, 0x01, 0x0a, 0x20, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42,
	0x79, 0x50, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x76, 0x69, 0x6e, 0x12, 0x5f, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x5f, 0x62, 0x79, 0x5f, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x42, 0x79, 0x50, 0x49, 0x44, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42,
	0x79, 0x50, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x42, 0x79, 0x50, 0x69, 0x64, 0x1a, 0x5c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x42, 0x79, 0x50, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xed, 0x02, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x49, 0x6e, 0x4d, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x15, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0c,
	0x70, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x70, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x43, 0x50, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x34, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x50,
	0x49, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x1b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x1a, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41,
	0x50, 0x49, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x17, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x41, 0x50, 0x49, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x59, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41,
	0x50, 0x49, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x01, 0x0a,
	0x19, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xe7, 0x02, 0x0a, 0x1e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x12, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41,
	0x50, 0x49, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x69, 0x64, 0x22, 0xa2, 0x02, 0x0a, 0x0f, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x36, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x2d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x55, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x1f, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x62, 0x0a, 0x1e, 0x41, 0x70, 0x70, 0x54, 0x77, 0x69, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x0f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x43,
	0x50, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x20, 0xd0, 0xe1, 0x1e, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x64,
	0x61, 0x69, 0x6d, 0x6c, 0x65, 0x72, 0x2e, 0x6d, 0x62, 0x63, 0x61, 0x72, 0x6b, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vehicleapi_proto_rawDescOnce sync.Once
	file_vehicleapi_proto_rawDescData = file_vehicleapi_proto_rawDesc
)

func file_vehicleapi_proto_rawDescGZIP() []byte {
	file_vehicleapi_proto_rawDescOnce.Do(func() {
		file_vehicleapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_vehicleapi_proto_rawDescData)
	})
	return file_vehicleapi_proto_rawDescData
}

var file_vehicleapi_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_vehicleapi_proto_goTypes = []interface{}{
	(*AcknowledgeAppTwinCommandStatusUpdatesByVIN)(nil), // 0: proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN
	(*AppTwinCommandStatusUpdatesByVIN)(nil),            // 1: proto.AppTwinCommandStatusUpdatesByVIN
	(*AppTwinCommandStatusUpdatesByPID)(nil),            // 2: proto.AppTwinCommandStatusUpdatesByPID
	(*AppTwinCommandStatus)(nil),                        // 3: proto.AppTwinCommandStatus
	(*VehicleAPICommandPostResult)(nil),                 // 4: proto.VehicleAPICommandPostResult
	(*VehicleAPICommandGetResult)(nil),                  // 5: proto.VehicleAPICommandGetResult
	(*VehicleAPIDataGetResult)(nil),                     // 6: proto.VehicleAPIDataGetResult
	(*VehicleAPIAttributeStatus)(nil),                   // 7: proto.VehicleAPIAttributeStatus
	(*VehicleAPICommandProcessStatus)(nil),              // 8: proto.VehicleAPICommandProcessStatus
	(*VehicleAPIError)(nil),                             // 9: proto.VehicleAPIError
	(*AppTwinPendingCommandsRequest)(nil),               // 10: proto.AppTwinPendingCommandsRequest
	(*AppTwinPendingCommandsResponse)(nil),              // 11: proto.AppTwinPendingCommandsResponse
	(*PendingCommand)(nil),                              // 12: proto.PendingCommand
	nil,                                                 // 13: proto.AppTwinCommandStatusUpdatesByVIN.UpdatesByVinEntry
	nil,                                                 // 14: proto.AppTwinCommandStatusUpdatesByPID.UpdatesByPidEntry
	nil,                                                 // 15: proto.VehicleAPIDataGetResult.DataEntry
	nil,                                                 // 16: proto.VehicleAPIError.AttributesEntry
	(ACP_CommandType)(0),                                // 17: proto.ACP.CommandType
	(VehicleAPI_CommandState)(0),                        // 18: proto.VehicleAPI.CommandState
	(VehicleAPI_QueueType)(0),                           // 19: proto.VehicleAPI.QueueType
	(*structpb.Value)(nil),                              // 20: google.protobuf.Value
	(VehicleAPI_AttributeStatus)(0),                     // 21: proto.VehicleAPI.AttributeStatus
}
var file_vehicleapi_proto_depIdxs = []int32{
	13, // 0: proto.AppTwinCommandStatusUpdatesByVIN.updates_by_vin:type_name -> proto.AppTwinCommandStatusUpdatesByVIN.UpdatesByVinEntry
	14, // 1: proto.AppTwinCommandStatusUpdatesByPID.updates_by_pid:type_name -> proto.AppTwinCommandStatusUpdatesByPID.UpdatesByPidEntry
	9,  // 2: proto.AppTwinCommandStatus.errors:type_name -> proto.VehicleAPIError
	17, // 3: proto.AppTwinCommandStatus.type:type_name -> proto.ACP.CommandType
	18, // 4: proto.AppTwinCommandStatus.state:type_name -> proto.VehicleAPI.CommandState
	9,  // 5: proto.VehicleAPICommandPostResult.errors:type_name -> proto.VehicleAPIError
	18, // 6: proto.VehicleAPICommandPostResult.state:type_name -> proto.VehicleAPI.CommandState
	8,  // 7: proto.VehicleAPICommandGetResult.process:type_name -> proto.VehicleAPICommandProcessStatus
	19, // 8: proto.VehicleAPICommandGetResult.queue_type:type_name -> proto.VehicleAPI.QueueType
	15, // 9: proto.VehicleAPIDataGetResult.data:type_name -> proto.VehicleAPIDataGetResult.DataEntry
	20, // 10: proto.VehicleAPIAttributeStatus.value:type_name -> google.protobuf.Value
	21, // 11: proto.VehicleAPIAttributeStatus.Status:type_name -> proto.VehicleAPI.AttributeStatus
	9,  // 12: proto.VehicleAPICommandProcessStatus.errors:type_name -> proto.VehicleAPIError
	20, // 13: proto.VehicleAPICommandProcessStatus.response_parameters:type_name -> google.protobuf.Value
	18, // 14: proto.VehicleAPICommandProcessStatus.state:type_name -> proto.VehicleAPI.CommandState
	16, // 15: proto.VehicleAPIError.attributes:type_name -> proto.VehicleAPIError.AttributesEntry
	9,  // 16: proto.VehicleAPIError.sub_errors:type_name -> proto.VehicleAPIError
	12, // 17: proto.AppTwinPendingCommandsResponse.pending_commands:type_name -> proto.PendingCommand
	17, // 18: proto.PendingCommand.type:type_name -> proto.ACP.CommandType
	2,  // 19: proto.AppTwinCommandStatusUpdatesByVIN.UpdatesByVinEntry.value:type_name -> proto.AppTwinCommandStatusUpdatesByPID
	3,  // 20: proto.AppTwinCommandStatusUpdatesByPID.UpdatesByPidEntry.value:type_name -> proto.AppTwinCommandStatus
	7,  // 21: proto.VehicleAPIDataGetResult.DataEntry.value:type_name -> proto.VehicleAPIAttributeStatus
	20, // 22: proto.VehicleAPIError.AttributesEntry.value:type_name -> google.protobuf.Value
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_vehicleapi_proto_init() }
func file_vehicleapi_proto_init() {
	if File_vehicleapi_proto != nil {
		return
	}
	file_acp_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vehicleapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeAppTwinCommandStatusUpdatesByVIN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTwinCommandStatusUpdatesByVIN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTwinCommandStatusUpdatesByPID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTwinCommandStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleAPICommandPostResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleAPICommandGetResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleAPIDataGetResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleAPIAttributeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleAPICommandProcessStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleAPIError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTwinPendingCommandsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTwinPendingCommandsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vehicleapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vehicleapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vehicleapi_proto_goTypes,
		DependencyIndexes: file_vehicleapi_proto_depIdxs,
		MessageInfos:      file_vehicleapi_proto_msgTypes,
	}.Build()
	File_vehicleapi_proto = out.File
	file_vehicleapi_proto_rawDesc = nil
	file_vehicleapi_proto_goTypes = nil
	file_vehicleapi_proto_depIdxs = nil
}
