template: sungrow-hybrid
covers: ["sungrow"]
products:
  - brand: Sungrow
    description:
      generic: SH Series Hybrid Inverter
capabilities: ["battery-control"]
requirements:
  description:
    de: Verbindungen Ã¼ber das WiNet-S-Dongle (WiFi oder LAN) funktionieren nur mit aktueller Firmware.
    en: Connections via the WiNet-S dongle (WiFi or LAN) only work with the latest firmware.
params:
  - name: usage
    choice: ["grid", "pv", "battery"]
    allinone: true
  - name: modbus
    choice: ["rs485", "tcpip"]
    baudrate: 9600
  - name: timeout
  - name: capacity
    advanced: true
render: |
  type: custom
  {{- if eq .usage "grid" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      type: input
      address: 13009 # Export power
      decode: int32s
    scale: -1
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 13036 # Total Import Energy, 0.1kWh
      type: input
      decode: uint32s
    scale: 0.1
  {{- end }}
  {{- if eq .usage "pv" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 5016 # Total DC power
      type: input
      decode: uint32s
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 13002 # Total PV Generation, 0.1kWh
      type: input
      decode: uint32s
    scale: 0.1
  {{- end }}
  {{- if eq .usage "battery" }}
  power:
    source: calc
    mul:
    - source: modbus
      {{- include "modbus" . | indent 4 }}
      register:
        address: 13021 # Battery power
        type: input
        decode: int16
    - source: calc
      add:
      - source: modbus
        {{- include "modbus" . | indent 6 }}
        register:
          type: input
          address: 13000 # Battery running state
          decode: bool16
          bitmask: 2 # Charging
        scale: -1
      - source: modbus
        {{- include "modbus" . | indent 6 }}
        register:
          type: input
          address: 13000 # Battery running state
          decode: bool16
          bitmask: 4 # Discharging
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 13026 # Total battery discharge energy, 0.1kWh
      type: input
      decode: uint32s
    scale: 0.1
  soc:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 13022 # Battery level
      type: input
      decode: int16
    scale: 0.1
  batterymode:
    source: switch
    switch:
    - case: 1 # normal
      set:
        source: sequence
        set:
        - source: const
          value: 0 # self consumption
          set:
            source: modbus
            {{- include "modbus" . | indent 10 }}
            timeout: {{ .timeout }}
            register:
              address: 13049 # EMS mode
              type: writesingle
              decode: uint16
        - source: const
          value: 0xCC # stop
          set:
            source: modbus
            {{- include "modbus" . | indent 10 }}
            timeout: {{ .timeout }}
            register:
              address: 13050 # Forced mode
              type: writesingle
              decode: uint16
    - case: 2 # hold
      set:
        source: sequence
        set:
        - source: const
          value: 2 # forced mode
          set:
            source: modbus
            {{- include "modbus" . | indent 10 }}
            timeout: {{ .timeout }}
            register:
              address: 13049 # EMS mode
              type: writesingle
              decode: uint16
        - source: const
          value: 0xCC
          set:
            source: modbus
            {{- include "modbus" . | indent 10 }}
            timeout: {{ .timeout }}
            register:
              address: 13050 # Forced mode
              type: writesingle
              decode: uint16
    - case: 3 # charge
      set:
        source: sequence
        set:
        - source: const
          value: 2 # forced mode
          set:
            source: modbus
            {{- include "modbus" . | indent 10 }}
            timeout: {{ .timeout }}
            register:
              address: 13049 # EMS mode
              type: writesingle
              decode: uint16
        - source: const
          value: 0xAA
          set:
            source: modbus
            {{- include "modbus" . | indent 10 }}
            timeout: {{ .timeout }}
            register:
              address: 13050 # Forced mode
              type: writesingle
              decode: uint16
  {{- if .capacity }}
  capacity: {{ .capacity }} # kWh
  {{- end }}
  {{- end }}
