template: solis-hybrid-s
products:
  - brand: Ginlong
    description:
      generic: Solis Hybrid Inverter (S Series)
  - brand: Axitec
    description:
      generic: AXIhycon 12-15H
capabilities: ["battery-control"]
requirements:
  description:
    de: |
      Um die aktive Ladesteuerung zum Netzladen nutzen zu können ist eine einmalige manuelle Einrichtung notwendig.
      Navigiere zu "System Settings" > "Storage Mode" im Wechselrichter Menü und aktiviere "Allow grid charging".
      Wenn die aktive Ladesteuerung dann die "Battery Reserve"-Einstellung anpasst, lädt der Wechselrichter die Batterie aus dem Netz bis zum hier konfigurierten Max SOC Wert auf (Standard: 95%).
    en: |
      To use active battery control with grid charging, a one-time manual setup is required.
      Navigate to "System Settings" > "Storage Mode" in the inverter menu and enable "Allow grid charging".
      When active battery control adjusts the "Battery Reserve" setting, the inverter will charge the battery from the grid up to the Max SOC setting configured here (Default: 95%).
params:
  - name: usage
    choice: ["grid", "pv", "battery"]
    allinone: true
  - name: modbus
    choice: ["rs485"]
    baudrate: 9600
    id: 1
  - name: capacity
    advanced: true
  - name: maxacpower
  - name: minsoc
    advanced: true
  - name: maxsoc
    advanced: true
render: |
  type: custom
  {{- if eq .usage "grid" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33263 # Meter total active power
      type: input
      decode: int32
    scale: -1
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33283 # Meter total active energy from grid
      type: input
      decode: uint32
    scale: 0.01
  currents:
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33252 # Meter ac current A
      type: input
      decode: uint16
    scale: 0.01
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33254 # Meter ac current B
      type: input
      decode: uint16
    scale: 0.01
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33256 # Meter ac current C
      type: input
      decode: uint16
    scale: 0.01
  powers:
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33257 # Meter active power A
      type: input
      decode: int32
    scale: -1
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33259 # Meter active power B
      type: input
      decode: int32
    scale: -1
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33261 # Meter active power C
      type: input
      decode: int32
    scale: -1
  {{- end }}
  {{- if eq .usage "pv" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      type: input
      address: 33057 # Total DC output power (PV Power)
      decode: uint32
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33029 # Total energy generation
      type: input
      decode: uint32
  maxacpower: {{ .maxacpower }} # W
  {{- end }}
  {{- if eq .usage "battery" }}
  power:
    source: calc
    mul:
    - source: modbus
      {{- include "modbus" . | indent 4 }}
      register:
        type: input
        address: 33149 # Battery power
        decode: uint32
    - source: calc
      add:
      - source: modbus
        {{- include "modbus" . | indent 6 }}
        register:
          type: input
          address: 33135 # Battery current direction
          decode: uint16 # 0：charge, 1：discharge
        scale: 2
      - source: const
        value: -1
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33165 # Battery total discharge energy
      type: input
      decode: uint32
  soc:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 33139 # Battery capacity SOC
      type: input
      decode: uint16
  limitsoc:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    register:
      address: 43024 # Battery Reserve Mode SOC
      type: writeholding
      encoding: uint16
  capacity: {{ .capacity }} # kWh
  minsoc: {{ .minsoc }} # %
  maxsoc: {{ .maxsoc }} # %
  {{- end }}
