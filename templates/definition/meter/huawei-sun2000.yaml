template: huawei-sun2000
covers: ["huawei-dongle-powersensor", "huawei-sun2000-rs485"]
products:
  - brand: Huawei
    description:
      generic: SUN2000
capabilities: ["battery-control"]
requirements:
  description:
    de: |
      Netz und Batterie erfordern den PowerSensor.

      Die Verbindung zum Wechselrichter erfolgt über Modbus. Die folgenden Details sollten Ihnen bei der Einrichtung der Verbindung helfen.

      - Die Modbus-ID sollte 0 sein, es sei denn, Sie verwenden eine RS485-Verbindung.
      - Die IP-Adresse sollte auf die IP-Adresse des Wechselrichters oder auf 192.168.200.1 gesetzt sein, wenn Sie eine Verbindung zum Wechselrichter-Zugangspunkt herstellen.
      - Der Port sollte auf 6607 eingestellt sein, wenn Sie eine Firmware-Version ab Dezember 2021 verwenden, andernfalls sollte er auf 502 eingestellt sein.

      Sie können eine der folgenden Optionen verwenden, um eine Verbindung zum Wechselrichter herzustellen:
      - Sie können Modbus/TCP in den Kommunikationseinstellungen des Wechselrichters aktivieren. Dazu benötigen Sie ein Installateurkonto.
      Siehe https://forum.huawei.com/enterprise/en/modbus-tcp-guide/thread/667250677153415168-667213868771979264
      - Sie können sich direkt mit dem Zugangspunkt des Wechselrichters verbinden (SUN2000-<Seriennummer> wifi). Dies ist derselbe Zugang, der für die
      Geräteinbetriebnahme verwendet und erfordert keinen besonderen Zugriff. Wenn diese Option verwendet wird, sollte der Host auf
      192.168.200.1 gesetzt werden, die Standard-IP-Adresse des Wechselrichters.
      Siehe https://github.com/wlcrs/huawei_solar/wiki/Connecting-to-the-inverter#connect-to-the-inverter-ap-sun2000-serial_no-wifi
    en: |
      Grid and Battery require the PowerSensor.

      The connection to the inverter is done via Modbus. The details below should help you to set up the connection.

      - Modbus ID should be 0, unless you're connecting using RS485.
      - IP address should be set to the IP address of the inverter or 192.168.200.1 if you're connecting to the inverter access point.
      - Port should be set to 6607 if you're using a firmware version from December 2021 or later, else it should be set to 502.

      You can use one of the following options to connect to the inverter:
      - You can activate Modbus/TCP within the communication settings of the inverter, this requires an installer account.
      See https://forum.huawei.com/enterprise/en/modbus-tcp-guide/thread/667250677153415168-667213868771979264
      - You can connect to the inverter access point directly (SUN2000-<serial_no> wifi). This is the same access used for
      device commissioning and does not require any special access. If this option is used, the host should be set to
      192.168.200.1 which is the default IP address of the inverter.
      See https://github.com/wlcrs/huawei_solar/wiki/Connecting-to-the-inverter#connect-to-the-inverter-ap-sun2000-serial_no-wifi
params:
  - name: usage
    choice: ["grid", "pv", "battery"]
    allinone: true
  - name: modbus
    choice: ["rs485", "tcpip"]
    port: 6607
    id: 0
  - name: timeout
    default: 15s
  - name: storageunit
    type: int
    default: 1
    advanced: true
  - name: maxchargepower
    default: 10000
    advanced: true
  - name: capacity
    advanced: true
  - name: maxacpower
  - name: forceaccharging
    default: false
    advanced: true
    type: bool
    usages: ["battery"]
    description:
      en: Inverter cascade
      de: Wechselrichterkaskade
    help:
      en: Keep AC charging active to charge the storage from other inverters via AC. Prevents stand-by.
      de: AC-Laden bleibt aktiv zum Laden des Speichers aus anderen AC Quellen für Wechselrichterkaskaden. Verhindert Stand-by.
render: |
  type: custom
  {{- if eq .usage "grid" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    connectdelay: 1s
    register:
      address: 37113 # Grid import export power
      type: holding
      decode: int32nan
    scale: -1
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 37121 # Active energy import from the grid
      type: holding
      decode: uint32nan
    scale: 0.01
  currents:
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 37107 # Huawei phase A grid current
      type: holding
      decode: int32nan
    scale: -0.01
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 37109 # Huawei phase B grid current
      type: holding
      decode: int32nan
    scale: -0.01
  - source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 37111 # Huawei phase C grid current
      type: holding
      decode: int32nan
    scale: -0.01
  {{- end }}
  {{- if eq .usage "pv" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    connectdelay: 1s
    register:
      address: 32064 # Input power DC (if no battery in your system - for more precise readings use 32080 # Active generation power AC)
      type: holding
      decode: int32nan
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      address: 32106 # Accumulated energy yield
      type: holding
      decode: uint32nan
    scale: 0.01
  maxacpower: {{ .maxacpower }}
  {{- end }}
  {{- if eq .usage "battery" }}
  power:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    connectdelay: 1s
    register:
      {{- if eq .storageunit "1" }}
      address: 37001
      {{- end }}
      {{- if eq .storageunit "2" }}
      address: 37743
      {{- end }}
      type: holding
      decode: int32nan
    scale: -1
  energy:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      {{- if eq .storageunit "1" }}
      address: 37068 # [Energy storage unit 1] Total discharge
      {{- end }}
      {{- if eq .storageunit "2" }}
      address: 37755 # [Energy storage unit 2] Total discharge
      {{- end }}
      type: holding
      decode: uint32nan
    scale: 0.01
  soc:
    source: modbus
    {{- include "modbus" . | indent 2 }}
    timeout: {{ .timeout }}
    register:
      {{- if eq .storageunit "1" }}
      address: 37004
      {{- end }}
      {{- if eq .storageunit "2" }}
      address: 37738
      {{- end }}
      type: holding
      decode: uint16nan
    scale: 0.1
  batterymode:
    source: watchdog
    timeout: 30s
    reset: 1 # reset watchdog on normal
    set:
      source: switch
      switch:
      - case: 1 # normal
        set:
          source: sequence
          set:
          - source: const
            value: 0 # stop
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47100 # Forcible charge/discharge
                type: writesingle
                encoding: uint16
          {{- if eq .forceaccharging "false" }}
          - source: const
            value: 0 # Disable
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47087 # Charge from grid
                type: writesingle
                encoding: uint16
          {{- end }}
      - case: 2 # hold
        set:
          source: sequence
          set:
          - source: const
            value: 2 # discharge
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47100 # Forcible charge/discharge
                type: writesingle
                encoding: uint16
          - source: const
            value: 0 # duration
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47246 # Forcible charge/discharge setting mode
                type: writesingle
                encoding: uint16
          - source: const
            value: 1 # Minute
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47083 # Forced charging and discharging period
                type: writesingle
                encoding: uint16
          - source: const
            value: 0 # W
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47249 # Forcible discharge power
                type: writemultiple
                encoding: uint32
      - case: 3 # charge
        set:
          source: sequence
          set:
          - source: const
            value: 1 # charge
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47100 # Forcible charge/discharge
                type: writesingle
                encoding: uint16
          - source: const
            value: 0 # duration
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47246 # Forcible charge/discharge setting mode
                type: writesingle
                encoding: uint16
          - source: const
            value: 1 # Minute
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47083 # Forced charging and discharging period
                type: writesingle
                encoding: uint16
          - source: const
            value: {{ .maxchargepower }} # W
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47247 # Forcible charge power
                type: writemultiple
                encoding: uint32
          - source: const
            value: 1 # Enable
            set:
              source: modbus
              {{- include "modbus" . | indent 12 }}
              register:
                address: 47087 # Charge from grid
                type: writesingle
                encoding: uint16
  capacity: {{ .capacity }} # kWh
  {{- end }}
